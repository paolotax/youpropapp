<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' name='AFNetworkingErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationDidFinishNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationDidStartNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationFailingURLRequestErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingOperationFailingURLResponseErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingReachabilityDidChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='AFNetworkingReachabilityNotificationStatusItem' type='@' declared_type='NSString*'/>
<constant const='true' name='RKDetailedErrorsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKEntityIdentificationAttributesUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='RKErrorNotificationErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeFormURLEncoded' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeJSON' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeTextXML' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMIMETypeXML' type='@' declared_type='NSString*'/>
<constant const='true' name='RKManagedObjectStoreDidResetPersistentStoresNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='RKMappingErrorKeyPathErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKObjectMapperErrorObjectsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKObjectRequestOperationDidFinishNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='RKObjectRequestOperationDidStartNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='RKObjectRequestOperationMappingDidFinishUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKObjectRequestOperationMappingDidStartUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKPropertyInspectionIsPrimitiveKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKPropertyInspectionKeyValueCodingClassKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKPropertyInspectionNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKResponseHasBeenMappedCacheUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKSQLitePersistentStoreSeedDatabasePathOption' type='@' declared_type='NSString*'/>
<constant const='true' name='RKValueTransformersDetailedErrorsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='RKValueTransformersErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='SVProgressHUDDidAppearNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='SVProgressHUDDidDisappearNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='SVProgressHUDDidReceiveTouchEventNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='SVProgressHUDStatusUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='SVProgressHUDWillAppearNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='SVProgressHUDWillDisappearNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='TKErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='TKStateMachineDidChangeStateEventUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='TKStateMachineDidChangeStateNewStateUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='TKStateMachineDidChangeStateNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='TKStateMachineDidChangeStateOldStateUserInfoKey' type='@' declared_type='NSString*'/>
<constant const='true' name='TKStateMachineIsImmutableException' type='@' declared_type='NSString*'/>
<constant const='true' name='kAFUploadStream3GSuggestedDelay' type='d' declared_type='NSTimeInterval'/>
<constant type64='Q' const='true' name='kAFUploadStream3GSuggestedPacketSize' type='I' declared_type='NSUInteger'/>
<constant const='true' name='kReachabilityChangedNotification' type='@' declared_type='NSString*'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_CustomBadge' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_HTAutocompleteTextField' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_RNFrostedSidebar' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_Reachability' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_SVProgressHUD' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_CustomBadge' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_HTAutocompleteTextField' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_ISO8601DateFormatterValueTransformer' value='5'/>
<enum name='COCOAPODS_VERSION_MINOR_RKValueTransformers' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_RNFrostedSidebar' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_Reachability' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Core' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_CoreData' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Network' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_ObjectMapping' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Support' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_SVProgressHUD' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_PATCH_CustomBadge' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_HTAutocompleteTextField' value='6'/>
<enum name='COCOAPODS_VERSION_PATCH_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_RNFrostedSidebar' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_Reachability' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SOCKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SVProgressHUD' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_TransitionKit' value='1'/>
<enum name='NEEDS_DISPATCH_RETAIN_RELEASE' value='0'/>
<enum name='NotReachable' value='0'/>
<enum name='RKAssignmentPolicyReplace' value='1'/>
<enum name='RKAssignmentPolicySet' value='0'/>
<enum name='RKAssignmentPolicyUnion' value='2'/>
<enum name='RKISO8601DateFormatCalendar' value='0'/>
<enum name='RKISO8601DateFormatOrdinal' value='1'/>
<enum name='RKISO8601DateFormatWeek' value='2'/>
<enum name='RKLogComponent' value='0'/>
<enum name='RKLogLevelCritical' value='1'/>
<enum name='RKLogLevelDebug' value='5'/>
<enum name='RKLogLevelDefault' value='3'/>
<enum name='RKLogLevelError' value='2'/>
<enum name='RKLogLevelInfo' value='4'/>
<enum name='RKLogLevelOff' value='0'/>
<enum name='RKLogLevelTrace' value='6'/>
<enum name='RKLogLevelWarning' value='3'/>
<enum name='RKMappingErrorFromMappingResult' value='1004'/>
<enum name='RKMappingErrorInvalidAssignmentPolicy' value='1010'/>
<enum name='RKMappingErrorMappingDeclined' value='1009'/>
<enum name='RKMappingErrorNilDestinationObject' value='1007'/>
<enum name='RKMappingErrorNilManagedObjectCache' value='1008'/>
<enum name='RKMappingErrorNotFound' value='1001'/>
<enum name='RKMappingErrorTypeMismatch' value='1002'/>
<enum name='RKMappingErrorUnableToDetermineMapping' value='1006'/>
<enum name='RKMappingErrorUnmappableRepresentation' value='1003'/>
<enum name='RKMappingErrorValidationFailure' value='1005'/>
<enum name='RKOperationCancelledError' value='2'/>
<enum name='RKReplaceAssignmentPolicy' value='1'/>
<enum name='RKRequestMethodAny' value='127'/>
<enum name='RKRequestMethodDELETE' value='8'/>
<enum name='RKRequestMethodGET' value='1'/>
<enum name='RKRequestMethodHEAD' value='16'/>
<enum name='RKRequestMethodOPTIONS' value='64'/>
<enum name='RKRequestMethodPATCH' value='32'/>
<enum name='RKRequestMethodPOST' value='2'/>
<enum name='RKRequestMethodPUT' value='4'/>
<enum name='RKSetAssignmentPolicy' value='0'/>
<enum name='RKStatusCodeClassClientError' value='400'/>
<enum name='RKStatusCodeClassInformational' value='100'/>
<enum name='RKStatusCodeClassRedirection' value='300'/>
<enum name='RKStatusCodeClassServerError' value='500'/>
<enum name='RKStatusCodeClassSuccessful' value='200'/>
<enum name='RKUnionAssignmentPolicy' value='2'/>
<enum name='RKUnsupportedMIMETypeError' value='1'/>
<enum name='RKValueTransformationErrorTransformationFailed' value='3002'/>
<enum name='RKValueTransformationErrorUnsupportedOutputClass' value='3001'/>
<enum name='RKValueTransformationErrorUntransformableInputValue' value='3000'/>
<enum name='RKlcl_cApp' value='0'/>
<enum name='RKlcl_cRestKit' value='1'/>
<enum name='RKlcl_cRestKitCoreData' value='2'/>
<enum name='RKlcl_cRestKitCoreDataCache' value='3'/>
<enum name='RKlcl_cRestKitNetwork' value='4'/>
<enum name='RKlcl_cRestKitNetworkCoreData' value='5'/>
<enum name='RKlcl_cRestKitObjectMapping' value='6'/>
<enum name='RKlcl_cRestKitSearch' value='7'/>
<enum name='RKlcl_cRestKitSupport' value='8'/>
<enum name='RKlcl_cRestKitTesting' value='9'/>
<enum name='RKlcl_cRestKitUI' value='10'/>
<enum name='RKlcl_vCritical' value='1'/>
<enum name='RKlcl_vDebug' value='5'/>
<enum name='RKlcl_vError' value='2'/>
<enum name='RKlcl_vInfo' value='4'/>
<enum name='RKlcl_vOff' value='0'/>
<enum name='RKlcl_vTrace' value='6'/>
<enum name='RKlcl_vWarning' value='3'/>
<enum name='ReachableViaWWAN' value='1'/>
<enum name='ReachableViaWiFi' value='2'/>
<enum name='SVProgressHUDMaskTypeBlack' value='3'/>
<enum name='SVProgressHUDMaskTypeClear' value='2'/>
<enum name='SVProgressHUDMaskTypeGradient' value='4'/>
<enum name='SVProgressHUDMaskTypeNone' value='1'/>
<enum name='TKInvalidTransitionError' value='1000'/>
<enum name='TKTransitionDeclinedError' value='1001'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg name='parameters' type='@' declared_type='NSDictionary*'/>
<arg type64='Q' name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKArrayOfFetchRequestFromBlocksWithURL'>
<arg name='fetchRequestBlocks' type='@' declared_type='NSArray*'/>
<arg name='URL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='RKCacheableStatusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</function>
<function name='RKCachesDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKClassIsCollection'>
<arg name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKDateFromString'>
<arg name='dateString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg name='dict1' type='@' declared_type='NSDictionary*'/>
<arg name='dict2' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg name='dictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg name='URLEncodedString' type='@' declared_type='NSString*'/>
<arg type64='Q' name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg name='path' type='@' declared_type='NSString*'/>
<arg name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg name='mappingResult' type='@' declared_type='RKMappingResult*'/>
<retval type='@' declared_type='NSError*'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg name='headers' type='@' declared_type='NSDictionary*'/>
<arg type64='q' name='statusCode' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKIdentificationAttributesInferredFromEntity'>
<arg name='entity' type='@' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='RKIsSpecificRequestMethod'>
<arg type64='q' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKKeyValueCodingClassForObjCType'>
<arg const='true' name='type' type='*' declared_type='char*'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='RKKeyValueCodingClassFromPropertyAttributes'>
<arg const='true' name='attr' type='*' declared_type='char*'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogCoreDataError'>
<arg name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogValidationError'>
<arg name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKMIMETypeInSet'>
<arg name='MIMEType' type='@' declared_type='NSString*'/>
<arg name='MIMETypes' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollection'>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollectionOfCollections'>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg name='object' type='@' declared_type='id'/>
<arg name='anotherObject' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg name='URL' type='@' declared_type='NSURL*'/>
<arg name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg name='pathPattern' type='@' declared_type='NSString*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg name='string' type='@' declared_type='NSString*'/>
<arg type64='Q' name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPropertyInspectorGetClassForPropertyAtKeyPathOfObject'>
<arg name='keyPath' type='@' declared_type='NSString*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='RKPropertyInspectorIsPropertyAtKeyPathOfObjectPrimitive'>
<arg name='keyPath' type='@' declared_type='NSString*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKPropertyTypeFromAttributeString'>
<arg name='attributeString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg name='string' type='@' declared_type='NSString*'/>
<arg type64='Q' name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKRequestMethodFromString'>
<arg type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='RKRequestMethod'/>
</function>
<function name='RKSetExcludeFromBackupAttributeForItemAtPath'>
<arg name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg type64='Q' name='statusCodeClass' type='I' declared_type='RKStatusCodeClass'/>
<retval type='@' declared_type='NSIndexSet*'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg type64='Q' name='statusCodeClass' type='I' declared_type='RKStatusCodeClass'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='RKStringFromDate'>
<arg name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromNetworkReachabilityStatus'>
<arg name='networkReachabilityStatus' type='i' declared_type='AFNetworkReachabilityStatus'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg type64='q' name='method' type='i' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromStatusCode'>
<arg type64='q' name='statusCode' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg name='dictionary' type='@' declared_type='NSDictionary*'/>
<arg type64='Q' name='encoding' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg name='URL' type='@' declared_type='NSURL*'/>
<arg name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg name='component' type='I' declared_type='_RKlcl_component_t'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg const='true' name='header' type='*' declared_type='char*'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg const='true' name='identifier' type='*' declared_type='char*'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg const='true' name='name' type='*' declared_type='char*'/>
<arg name='level' type='I' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg name='string' type='@' declared_type='NSString*'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='success' type='@?' index='1' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='2' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFHTTPRequestOperation*'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg name='method' type='@' index='0' declared_type='NSString*'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval type='v' declared_type='void'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultHeaders'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval type='i' declared_type='AFURLConnectionOperationSSLPinningMode'/>
</method>
<method selector='defaultValueForHeader:'>
<arg name='header' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='parameters' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg name='operations' type='@' index='0' declared_type='NSArray*'/>
<arg name='progressBlock' type='@?' index='1' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='completionBlock' type='@?' index='2' declared_type='void (^)(NSArray *)' function_pointer='true'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg name='urlRequests' type='@' index='0' declared_type='NSArray*'/>
<arg name='progressBlock' type='@?' index='1' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='completionBlock' type='@?' index='2' declared_type='void (^)(NSArray *)' function_pointer='true'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg name='operation' type='@' index='0' declared_type='AFHTTPRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='parameters' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg name='method' type='@' index='0' declared_type='NSString*'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='block' type='@?' index='3' declared_type='void (^)(id)' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='networkReachabilityStatus'>
<retval type='i' declared_type='AFNetworkReachabilityStatus'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='parameterEncoding'>
<retval type='i' declared_type='AFHTTPClientParameterEncoding'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='parameters' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='parameters' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='parameters' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg name='operationClass' type='#' index='0' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg name='method' type='@' index='0' declared_type='NSString*'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg name='allowsInvalidSSLCertificate' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg name='token' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg name='username' type='@' index='0' declared_type='NSString*'/>
<arg name='password' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultCredential:'>
<arg name='credential' type='@' index='0' declared_type='NSURLCredential*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg name='header' type='@' index='0' declared_type='NSString*'/>
<arg name='value' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg name='defaultSSLPinningMode' type='i' index='0' declared_type='AFURLConnectionOperationSSLPinningMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParameterEncoding:'>
<arg name='parameterEncoding' type='i' index='0' declared_type='AFHTTPClientParameterEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(AFNetworkReachabilityStatus)' function_pointer='true'>
<arg type='i' declared_type='AFNetworkReachabilityStatus'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringEncoding:'>
<arg type64='Q' name='stringEncoding' type='I' index='0' declared_type='NSStringEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringEncoding'>
<retval type64='Q' type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg name='operationClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg name='contentTypes' type='@' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg name='statusCodes' type='@' index='0' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='hasAcceptableContentType'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' type='@?' index='0' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='1' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg name='failureCallbackQueue' type='@' index='0' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg name='successCallbackQueue' type='@' index='0' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='automaticallyInflatesResponseImage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='imageProcessingBlock' type='@?' index='1' declared_type='UIImage *(^)(UIImage *)' function_pointer='true'>
<arg type='@' declared_type='UIImage*'/>
<retval type='@' declared_type='UIImage*'/>
</arg>
<arg name='success' type='@?' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='success' type='@?' index='1' declared_type='void (^)(UIImage *)' function_pointer='true'>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageScale'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='responseImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg name='automaticallyInflatesResponseImage' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScale:'>
<arg type64='d' name='imageScale' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval type64='Q' type='I' declared_type='NSJSONReadingOptions'/>
</method>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='success' type='@?' index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseJSON'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg type64='Q' name='JSONReadingOptions' type='I' index='0' declared_type='NSJSONReadingOptions'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='incrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval type64='Q' type='I' declared_type='NSPropertyListReadOptions'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='success' type='@?' index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responsePropertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg type64='Q' name='propertyListReadOptions' type='I' index='0' declared_type='NSPropertyListReadOptions'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval type='i' declared_type='AFURLConnectionOperationSSLPinningMode'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='credential'>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithRequest:'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outputStream'>
<retval type='@' declared_type='NSOutputStream*'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='responseData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='responseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='responseStringEncoding'>
<retval type64='Q' type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg name='allowsInvalidSSLCertificate' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg name='block' type='@?' index='0' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' function_pointer='true'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSCachedURLResponse*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCredential:'>
<arg name='credential' type='@' index='0' declared_type='NSURLCredential*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputStream:'>
<arg name='inputStream' type='@' index='0' declared_type='NSInputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputStream:'>
<arg name='outputStream' type='@' index='0' declared_type='NSOutputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg name='block' type='@?' index='0' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' function_pointer='true'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg name='runLoopModes' type='@' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSSLPinningMode:'>
<arg name='SSLPinningMode' type='i' index='0' declared_type='AFURLConnectionOperationSSLPinningMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg name='handler' type='@?' index='0' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg name='shouldUseCredentialStorage' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' function_pointer='true'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='success' type='@?' index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseXMLParser'>
<retval type='@' declared_type='NSXMLParser*'/>
</method>
</class>
<class name='CustomBadge'>
<method selector='autoBadgeSizeWithString:'>
<arg name='badgeString' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='badgeCornerRoundness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='badgeFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='badgeFrameColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='badgeInsetColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='badgeScaleFactor'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='badgeShining'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='badgeText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='badgeTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='customBadgeWithString:' class_method='true'>
<arg name='badgeString' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='CustomBadge*'/>
</method>
<method selector='customBadgeWithString:withStringColor:withInsetColor:withBadgeFrame:withBadgeFrameColor:withScale:withShining:' class_method='true'>
<arg name='badgeString' type='@' index='0' declared_type='NSString*'/>
<arg name='stringColor' type='@' index='1' declared_type='UIColor*'/>
<arg name='insetColor' type='@' index='2' declared_type='UIColor*'/>
<arg name='badgeFrameYesNo' type='B' index='3' declared_type='BOOL'/>
<arg name='frameColor' type='@' index='4' declared_type='UIColor*'/>
<arg type64='d' name='scale' type='f' index='5' declared_type='CGFloat'/>
<arg name='shining' type='B' index='6' declared_type='BOOL'/>
<retval type='@' declared_type='CustomBadge*'/>
</method>
<method selector='setBadgeCornerRoundness:'>
<arg type64='d' name='badgeCornerRoundness' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeFrame:'>
<arg name='badgeFrame' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeFrameColor:'>
<arg name='badgeFrameColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeInsetColor:'>
<arg name='badgeInsetColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeScaleFactor:'>
<arg type64='d' name='badgeScaleFactor' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeShining:'>
<arg name='badgeShining' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeText:'>
<arg name='badgeText' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeTextColor:'>
<arg name='badgeTextColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='HTAutocompleteTextField'>
<method selector='autoCompleteTextFieldDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='autocompleteDataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='autocompleteDisabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autocompleteLabel'>
<retval type='@' declared_type='UILabel*'/>
</method>
<method selector='autocompleteRectForBounds:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='autocompleteTextOffset'>
<retval type64='{CGPoint=dd}' type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='autocompleteType'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='forceRefreshAutocompleteText'>
<retval type='v' declared_type='void'/>
</method>
<method selector='ignoreCase'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithFrame:'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='needsClearButtonSpace'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAutoCompleteTextFieldDelegate:'>
<arg name='autoCompleteTextFieldDelegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocompleteDataSource:'>
<arg name='autocompleteDataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocompleteDisabled:'>
<arg name='autocompleteDisabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocompleteLabel:'>
<arg name='autocompleteLabel' type='@' index='0' declared_type='UILabel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocompleteTextOffset:'>
<arg type64='{CGPoint=dd}' name='autocompleteTextOffset' type='{CGPoint=ff}' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutocompleteType:'>
<arg type64='Q' name='autocompleteType' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultAutocompleteDataSource:' class_method='true'>
<arg name='dataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg name='font' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoreCase:'>
<arg name='ignoreCase' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsClearButtonSpace:'>
<arg name='needsClearButtonSpace' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowAutocompleteButton:'>
<arg name='showAutocompleteButton' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setupAutocompleteTextField'>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAutocompleteButton'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='HTEmailAutocompleteTextField'>
<method selector='emailDomains'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setEmailDomains:'>
<arg name='emailDomains' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNew'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg name='entityName' type='@' index='0' declared_type='NSString*'/>
<arg name='predicate' type='@' index='1' declared_type='NSPredicate*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg name='entityName' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveToPersistentStore:'>
<arg name='error' type='^@' index='0' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='fileName' type='@' index='2' declared_type='NSString*'/>
<arg name='mimeType' type='@' index='3' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg name='fileURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg name='fileURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='fileName' type='@' index='2' declared_type='NSString*'/>
<arg name='mimeType' type='@' index='3' declared_type='NSString*'/>
<arg name='error' type='^@' index='4' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg name='headers' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='body' type='@' index='1' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg name='inputStream' type='@' index='0' declared_type='NSInputStream*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='fileName' type='@' index='2' declared_type='NSString*'/>
<arg name='length' type='Q' index='3' declared_type='unsigned long long'/>
<arg name='mimeType' type='@' index='4' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autoCompleteTextFieldDidAutoComplete:'>
<arg name='autoCompleteField' type='@' index='0' declared_type='HTAutocompleteTextField*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autocompleteTextField:didChangeAutocompleteText:'>
<arg name='autocompleteTextField' type='@' index='0' declared_type='HTAutocompleteTextField*'/>
<arg name='autocompleteText' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='commitChangesForMappingOperation:error:'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataFromObject:error:' class_method='true'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='didCreateObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didDeleteObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didFetchObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeValues' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='managedObjectContext' type='@' index='2' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='mappingOperation' type='@' index='1' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='error' type='@' index='3' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='dictionaryOrArrayOfDictionaries' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='mappingOperation' type='@' index='1' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='mappingOperation' type='@' index='1' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidCancelMapping:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='relationshipMapping' type='@' index='1' declared_type='RKRelationshipMapping*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='relationship' type='@' index='1' declared_type='NSRelationshipDescription*'/>
<arg name='value' type='@' index='2' declared_type='id'/>
<arg name='connection' type='@' index='3' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='relationship' type='@' index='1' declared_type='NSRelationshipDescription*'/>
<arg name='connection' type='@' index='2' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='2' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='objectMapping' type='@' index='1' declared_type='RKObjectMapping*'/>
<arg name='dynamicMapping' type='@' index='2' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='representation' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='mapping' type='@' index='2' declared_type='RKObjectMapping*'/>
<arg name='relationshipMapping' type='@' index='3' declared_type='RKRelationshipMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectFromData:error:' class_method='true'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sidebar:didDismissFromScreenAnimated:'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:didEnable:itemAtIndex:'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='itemEnabled' type='B' index='1' declared_type='BOOL'/>
<arg type64='Q' name='index' type='I' index='2' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:didShowOnScreenAnimated:'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:didTapItemAtIndex:'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg type64='Q' name='index' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:willDismissFromScreenAnimated:'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:willShowOnScreenAnimated:'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textField:completionForPrefix:ignoreCase:'>
<arg name='textField' type='@' index='0' declared_type='HTAutocompleteTextField*'/>
<arg name='prefix' type='@' index='1' declared_type='NSString*'/>
<arg name='ignoreCase' type='B' index='2' declared_type='BOOL'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg type64='Q' name='numberOfBytes' type='I' index='0' declared_type='NSUInteger'/>
<arg name='delay' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformValue:toValue:ofClass:error:'>
<arg name='inputValue' type='@' index='0' declared_type='id'/>
<arg name='outputValue' type='^@' index='1' declared_type='id*'/>
<arg name='outputValueClass' type='#' index='2' declared_type='Class'/>
<arg name='error' type='^@' index='3' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateTransformationFromClass:toClass:'>
<arg name='inputValueClass' type='#' index='0' declared_type='Class'/>
<arg name='outputValueClass' type='#' index='1' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method selector='attributeMappingFromKeyPath:toKeyPath:' class_method='true'>
<arg name='sourceKeyPath' type='@' index='0' declared_type='NSString*'/>
<arg name='destinationKeyPath' type='@' index='1' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKBlockValueTransformer'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueTransformerWithValidationBlock:transformationBlock:' class_method='true'>
<arg name='validationBlock' type='@?' index='0' declared_type='BOOL (^)(Class, Class)' function_pointer='true'>
<arg type='#' declared_type='Class'/>
<arg type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<arg name='transformationBlock' type='@?' index='1' declared_type='BOOL (^)(id, id *, Class, NSError **)' function_pointer='true'>
<arg type='@' declared_type='id'/>
<arg type='^@' declared_type='id*'/>
<arg type='#' declared_type='Class'/>
<arg type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKCompoundValueTransformer'>
<method selector='addValueTransformer:'>
<arg name='valueTransformer' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='compoundValueTransformerWithValueTransformers:' class_method='true'>
<arg name='valueTransformers' type='@' index='0' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertValueTransformer:atIndex:'>
<arg name='valueTransformer' type='@' index='0' declared_type='id'/>
<arg type64='Q' name='index' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfValueTransformers'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeValueTransformer:'>
<arg name='valueTransformer' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueTransformersForTransformingFromClass:toClass:'>
<arg name='inputValueClass' type='#' index='0' declared_type='Class'/>
<arg name='outputValueClass' type='#' index='1' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='RKConnectionDescription'>
<method selector='attributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='destinationPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='includesSubentities'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRelationship:attributes:'>
<arg name='relationship' type='@' index='0' declared_type='NSRelationshipDescription*'/>
<arg name='sourceToDestinationEntityAttributes' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRelationship:keyPath:'>
<arg name='relationship' type='@' index='0' declared_type='NSRelationshipDescription*'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isForeignKeyConnection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKeyPathConnection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relationship'>
<retval type='@' declared_type='NSRelationshipDescription*'/>
</method>
<method selector='setDestinationPredicate:'>
<arg name='destinationPredicate' type='@' index='0' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesSubentities:'>
<arg name='includesSubentities' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelationship:'>
<arg name='relationship' type='@' index='0' declared_type='NSRelationshipDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourcePredicate:'>
<arg name='sourcePredicate' type='@' index='0' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourcePredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dotNetDateFormatterWithTimeZone:' class_method='true'>
<arg name='timeZone' type='@' index='0' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' type='@' index='0' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='addMatcher:'>
<arg name='matcher' type='@' index='0' declared_type='RKObjectMappingMatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='matchers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectMappingForRepresentation:'>
<arg name='representation' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='objectMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeMatcher:'>
<arg name='matcher' type='@' index='0' declared_type='RKObjectMappingMatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatchers:'>
<arg name='matchers' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMappingForRepresentationBlock:'>
<arg name='block' type='@?' index='0' declared_type='RKObjectMapping *(^)(id)' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='RKObjectMapping*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:completion:'>
<arg name='managedObjects' type='@' index='0' declared_type='NSSet*'/>
<arg name='completion' type='@?' index='1' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='callbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='containsObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsObjectWithAttributeValues:'>
<arg name='attributeValues' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='countOfAttributeValues'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='countWithAttributeValues:'>
<arg name='attributeValues' type='@' index='0' declared_type='NSDictionary*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='entity'>
<retval type='@' declared_type='NSEntityDescription*'/>
</method>
<method selector='flush'>
<retval type='v' declared_type='void'/>
</method>
<method selector='flush:'>
<arg name='completion' type='@?' index='0' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithEntity:attributes:managedObjectContext:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeNames' type='@' index='1' declared_type='NSArray*'/>
<arg name='context' type='@' index='2' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load'>
<retval type='v' declared_type='void'/>
</method>
<method selector='load:'>
<arg name='completion' type='@?' index='0' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='monitorsContextForChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectWithAttributeValues:inContext:'>
<arg name='attributeValues' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='context' type='@' index='1' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='objectsWithAttributeValues:inContext:'>
<arg name='attributeValues' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='context' type='@' index='1' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjects:completion:'>
<arg name='managedObjects' type='@' index='0' declared_type='NSSet*'/>
<arg name='completion' type='@?' index='1' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCallbackQueue:'>
<arg name='callbackQueue' type='@' index='0' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg name='monitorsContextForChanges' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:completion:'>
<arg name='objects' type='@' index='0' declared_type='NSSet*'/>
<arg name='completion' type='@?' index='1' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeCacheForEntity:attributes:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeNames' type='@' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='RKEntityByAttributeCache*'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cacheObjectsForEntity:byAttributes:completion:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeNames' type='@' index='1' declared_type='NSArray*'/>
<arg name='completion' type='@?' index='2' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='callbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='containsObject:'>
<arg name='managedObject' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flush:'>
<arg name='completion' type='@?' index='0' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg name='context' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEntity:cachedByAttributes:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeNames' type='@' index='1' declared_type='NSArray*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='objectForEntity:withAttributeValues:inContext:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeValues' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='context' type='@' index='2' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='objectsForEntity:withAttributeValues:inContext:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeValues' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='context' type='@' index='2' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObject:'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjects:completion:'>
<arg name='objects' type='@' index='0' declared_type='NSSet*'/>
<arg name='completion' type='@?' index='1' declared_type='void (^)(void)' function_pointer='true'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCallbackQueue:'>
<arg name='callbackQueue' type='@' index='0' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnection:'>
<arg name='connection' type='@' index='0' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addConnectionForRelationship:connectedBy:'>
<arg name='relationshipOrName' type='@' index='0' declared_type='id'/>
<arg name='connectionSpecifier' type='@' index='1' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionForRelationship:'>
<arg name='relationshipOrName' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='RKConnectionDescription*'/>
</method>
<method selector='connections'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg name='attributeName' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='deletionPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='discardsInvalidObjectsOnInsert'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='entity'>
<retval type='@' declared_type='NSEntityDescription*'/>
</method>
<method selector='identificationAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='identificationPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='initWithEntity:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEntityIdentificationInferenceEnabled' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingForEntityForName:inManagedObjectStore:' class_method='true'>
<arg name='entityName' type='@' index='0' declared_type='NSString*'/>
<arg name='managedObjectStore' type='@' index='1' declared_type='RKManagedObjectStore*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='modificationAttribute'>
<retval type='@' declared_type='NSAttributeDescription*'/>
</method>
<method selector='modificationKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='persistentStore'>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='removeConnection:'>
<arg name='connection' type='@' index='0' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeletionPredicate:'>
<arg name='deletionPredicate' type='@' index='0' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDiscardsInvalidObjectsOnInsert:'>
<arg name='discardsInvalidObjectsOnInsert' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntity:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntityIdentificationInferenceEnabled:' class_method='true'>
<arg name='enabled' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentificationAttributes:'>
<arg name='identificationAttributes' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentificationPredicate:'>
<arg name='identificationPredicate' type='@' index='0' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModificationAttribute:'>
<arg name='modificationAttribute' type='@' index='0' declared_type='NSAttributeDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModificationAttributeForName:'>
<arg name='attributeName' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModificationKey:'>
<arg name='modificationKey' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStore:'>
<arg name='persistentStore' type='@' index='0' declared_type='NSPersistentStore*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setErrorMessage:'>
<arg name='errorMessage' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='acceptableStatusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg name='acceptableContentTypes' type='@' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg name='acceptableStatusCodes' type='@' index='0' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='dateFromString:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='defaultISO8601DateFormatter' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='format'>
<retval type64='Q' type='I' declared_type='RKISO8601DateFormat'/>
</method>
<method selector='includeTime'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='parsesStrictly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFormat:'>
<arg type64='Q' name='format' type='I' index='0' declared_type='RKISO8601DateFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludeTime:'>
<arg name='includeTime' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg name='locale' type='@' index='0' declared_type='NSLocale*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParsesStrictly:'>
<arg name='parsesStrictly' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeSeparator:'>
<arg name='timeSeparator' type='S' index='0' declared_type='unichar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg name='timeZone' type='@' index='0' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' type='@' index='0' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeSeparator'>
<retval type='S' declared_type='unichar'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method selector='dataFromObject:MIMEType:error:' class_method='true'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='MIMEType' type='@' index='1' declared_type='NSString*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='objectFromData:MIMEType:error:' class_method='true'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='MIMEType' type='@' index='1' declared_type='NSString*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='registerClass:forMIMEType:' class_method='true'>
<arg name='serializationClass' type='#' index='0' declared_type='Class*'/>
<arg name='MIMETypeStringOrRegularExpression' type='@' index='1' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registeredMIMETypes' class_method='true'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='serializationClassForMIMEType:' class_method='true'>
<arg name='MIMEType' type='@' index='0' declared_type='NSString*'/>
<retval type='#' declared_type='Class*'/>
</method>
<method selector='unregisterClass:' class_method='true'>
<arg name='serializationClass' type='#' index='0' declared_type='Class*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg name='error' type='^@' index='0' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='mapping' type='@' index='1' declared_type='RKMapping*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='error' type='^@' index='3' declared_type='NSError**'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg name='managedObjectModel' type='@' index='0' declared_type='NSManagedObjectModel*'/>
<arg name='storePath' type='@' index='1' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPersistentStore:'>
<arg name='persistentStore' type='@' index='0' declared_type='NSPersistentStore*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='logSeedingInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='persistentStore'>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectModel:'>
<arg name='managedObjectModel' type='@' index='0' declared_type='NSManagedObjectModel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStore:'>
<arg name='persistentStore' type='@' index='0' declared_type='NSPersistentStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg name='resetsStoreBeforeImporting' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStorePath:'>
<arg name='storePath' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='storePath'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<arg name='managedObjectCache' type='@' index='1' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='parentOperation'>
<retval type='@' declared_type='NSOperation*'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg name='operationQueue' type='@' index='0' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParentOperation:'>
<arg name='parentOperation' type='@' index='0' declared_type='NSOperation*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='savesToPersistentStore'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg name='deletesOrphanedObjects' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg name='fetchRequestBlocks' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg name='savesToPersistentStore' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillSaveMappingContextBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(NSManagedObjectContext *)' function_pointer='true'>
<arg type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObjectID:'>
<arg name='targetObjectID' type='@' index='0' declared_type='NSManagedObjectID*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObjectID'>
<retval type='@' declared_type='NSManagedObjectID*'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg name='error' type='^@' index='0' declared_type='NSError**'/>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:'>
<arg name='storePath' type='@' index='0' declared_type='NSString*'/>
<arg name='seedPath' type='@' index='1' declared_type='NSString*'/>
<arg name='nilOrConfigurationName' type='@' index='2' declared_type='NSString*'/>
<arg name='nilOrOptions' type='@' index='3' declared_type='NSDictionary*'/>
<arg name='error' type='^@' index='4' declared_type='NSError**'/>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='createManagedObjectContexts'>
<retval type='v' declared_type='void'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultStore' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg name='managedObjectModel' type='@' index='0' declared_type='NSManagedObjectModel*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg name='persistentStoreCoordinator' type='@' index='0' declared_type='NSPersistentStoreCoordinator*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='migratePersistentStoreOfType:atURL:toModelAtURL:error:configuringModelsWithBlock:' class_method='true'>
<arg name='storeType' type='@' index='0' declared_type='NSString*'/>
<arg name='storeURL' type='@' index='1' declared_type='NSURL*'/>
<arg name='destinationModelURL' type='@' index='2' declared_type='NSURL*'/>
<arg name='error' type='^@' index='3' declared_type='NSError**'/>
<arg name='block' type='@?' index='4' declared_type='void (^)(NSManagedObjectModel *, NSURL *)' function_pointer='true'>
<arg type='@' declared_type='NSManagedObjectModel*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg type64='Q' name='concurrencyType' type='I' index='0' declared_type='NSManagedObjectContextConcurrencyType'/>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:tracksChanges:'>
<arg type64='Q' name='concurrencyType' type='I' index='0' declared_type='NSManagedObjectContextConcurrencyType'/>
<arg name='tracksChanges' type='B' index='1' declared_type='BOOL'/>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval type='@' declared_type='NSPersistentStoreCoordinator*'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='resetPersistentStores:'>
<arg name='error' type='^@' index='0' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDefaultStore:' class_method='true'>
<arg name='managedObjectStore' type='@' index='0' declared_type='RKManagedObjectStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg name='mainQueueManagedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectModel:'>
<arg name='managedObjectModel' type='@' index='0' declared_type='NSManagedObjectModel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg name='persistentStoreCoordinator' type='@' index='0' declared_type='NSPersistentStoreCoordinator*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg name='persistentStoreManagedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='execute:'>
<arg name='error' type='^@' index='0' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRepresentation:mappingsDictionary:'>
<arg name='representation' type='@' index='0' declared_type='id'/>
<arg name='mappingsDictionary' type='@' index='1' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapRepresentation:atKeyPath:usingMapping:'>
<arg name='mappableObject' type='@' index='0' declared_type='id'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<arg name='mapping' type='@' index='2' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapRepresentation:toObject:atKeyPath:usingMapping:metadata:'>
<arg name='mappableObject' type='@' index='0' declared_type='id'/>
<arg name='destinationObject' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='mapping' type='@' index='3' declared_type='RKMapping*'/>
<arg name='metadata' type='@' index='4' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mapRepresentations:atKeyPath:usingMapping:'>
<arg name='mappableObjects' type='@' index='0' declared_type='NSArray*'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<arg name='mapping' type='@' index='2' declared_type='RKMapping*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='mappingInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mappingOperationDataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='mappingsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='metadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='objectForRepresentation:withMapping:'>
<arg name='representation' type='@' index='0' declared_type='id'/>
<arg name='mapping' type='@' index='1' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='representation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg name='mappingOperationDataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' type='@' index='0' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingsDictionary:'>
<arg name='mappingsDictionary' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMetadata:'>
<arg name='metadata' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentation:'>
<arg name='representation' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToMapping:'>
<arg name='otherMapping' type='@' index='0' declared_type='RKMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg name='forceCollectionMapping' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMappingInfo'>
<method selector='dynamicMapping'>
<retval type='@' declared_type='RKDynamicMapping*'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg name='key' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='propertyMappings'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='relationshipMappingInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='setDynamicMapping:'>
<arg name='dynamicMapping' type='@' index='0' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' type='@' index='0' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destinationObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg name='sourceObject' type='@' index='0' declared_type='id'/>
<arg name='destinationObject' type='@' index='1' declared_type='id'/>
<arg name='objectOrDynamicMapping' type='@' index='2' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='mappingInfo'>
<retval type='@' declared_type='RKMappingInfo*'/>
</method>
<method selector='metadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='performMapping:'>
<arg name='error' type='^@' index='0' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestinationObject:'>
<arg name='destinationObject' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMetadata:'>
<arg name='metadata' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' type='@' index='0' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceObject:'>
<arg name='sourceObject' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='dictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='set'>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval type='@' declared_type='AFHTTPClient*'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg name='block' type='@?' index='0' declared_type='NSFetchRequest *(^)(NSURL *)' function_pointer='true'>
<arg type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSFetchRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRequestDescriptor:'>
<arg name='requestDescriptor' type='@' index='0' declared_type='RKRequestDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg name='requestDescriptors' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addResponseDescriptor:'>
<arg name='responseDescriptor' type='@' index='0' declared_type='RKResponseDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg name='responseDescriptors' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<arg name='path' type='@' index='2' declared_type='NSString*'/>
<arg name='parameters' type='@' index='3' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg type64='q' name='method' type='i' index='0' declared_type='RKRequestMethod'/>
<arg name='pathPattern' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultHeaders'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg name='operations' type='@' index='0' declared_type='NSArray*'/>
<arg name='progress' type='@?' index='1' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='completion' type='@?' index='2' declared_type='void (^)(NSArray *)' function_pointer='true'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg name='route' type='@' index='0' declared_type='RKRoute*'/>
<arg name='objects' type='@' index='1' declared_type='NSArray*'/>
<arg name='progress' type='@?' index='2' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='completion' type='@?' index='3' declared_type='void (^)(NSArray *)' function_pointer='true'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg name='objectRequestOperation' type='@' index='0' declared_type='RKObjectRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueuedObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg type64='q' name='method' type='i' index='0' declared_type='RKRequestMethod'/>
<arg name='pathPattern' type='@' index='1' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<arg name='parameters' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg name='relationshipName' type='@' index='0' declared_type='NSString*'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg name='routeName' type='@' index='0' declared_type='NSString*'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithHTTPClient:'>
<arg name='client' type='@' index='0' declared_type='AFHTTPClient*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='managedObjectContext' type='@' index='1' declared_type='NSManagedObjectContext*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='RKManagedObjectRequestOperation*'/>
</method>
<method selector='managedObjectStore'>
<retval type='@' declared_type='RKManagedObjectStore*'/>
</method>
<method selector='managerWithBaseURL:' class_method='true'>
<arg name='baseURL' type='@' index='0' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<arg name='path' type='@' index='2' declared_type='NSString*'/>
<arg name='parameters' type='@' index='3' declared_type='NSDictionary*'/>
<arg name='block' type='@?' index='4' declared_type='void (^)(id)' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='success' type='@?' index='1' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='2' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='RKObjectRequestOperation*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='paginationMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='paginatorWithPathPattern:'>
<arg name='pathPattern' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='RKPaginator*'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='path' type='@' index='1' declared_type='NSString*'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<arg name='success' type='@?' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerRequestOperationClass:'>
<arg name='operationClass' type='#' index='0' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg name='requestDescriptor' type='@' index='0' declared_type='RKRequestDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg name='responseDescriptor' type='@' index='0' declared_type='RKResponseDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<arg name='path' type='@' index='2' declared_type='NSString*'/>
<arg name='parameters' type='@' index='3' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg name='relationship' type='@' index='0' declared_type='NSString*'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<arg type64='q' name='method' type='i' index='2' declared_type='RKRequestMethod'/>
<arg name='parameters' type='@' index='3' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg name='routeName' type='@' index='0' declared_type='NSString*'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<arg name='parameters' type='@' index='2' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='router'>
<retval type='@' declared_type='RKRouter*'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg name='MIMEType' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPClient:'>
<arg name='HTTPClient' type='@' index='0' declared_type='AFHTTPClient*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectStore:'>
<arg name='managedObjectStore' type='@' index='0' declared_type='RKManagedObjectStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg name='operationQueue' type='@' index='0' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaginationMapping:'>
<arg name='paginationMapping' type='@' index='0' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg name='requestSerializationMIMEType' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRouter:'>
<arg name='router' type='@' index='0' declared_type='RKRouter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSharedManager:' class_method='true'>
<arg name='manager' type='@' index='0' declared_type='RKObjectManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='unregisterRequestOperationClass:'>
<arg name='operationClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingFromKeyOfRepresentationToAttribute:'>
<arg name='attributeName' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingToKeyOfRepresentationFromAttribute:'>
<arg name='attributeName' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingsFromArray:'>
<arg name='arrayOfAttributeNamesOrMappings' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg name='keyPathToAttributeNames' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addDefaultDateFormatter:' class_method='true'>
<arg name='dateFormatter' type='@' index='0' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addDefaultDateFormatterForString:inTimeZone:' class_method='true'>
<arg name='dateFormatString' type='@' index='0' declared_type='NSString*'/>
<arg name='nilOrTimeZone' type='@' index='1' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPropertyMapping:'>
<arg name='propertyMapping' type='@' index='0' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg name='arrayOfPropertyMappings' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRelationshipMappingWithSourceKeyPath:mapping:'>
<arg name='sourceKeyPath' type='@' index='0' declared_type='NSString*'/>
<arg name='mapping' type='@' index='1' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='assignsDefaultValueForMissingAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='assignsNilForMissingRelationships'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributeMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForKeyPath:'>
<arg name='keyPath' type='@' index='0' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForProperty:'>
<arg name='propertyName' type='@' index='0' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='dateFormatters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultDateFormatters' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg name='attributeName' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithClass:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inverseMapping'>
<retval type='@' declared_type='id'/>
</method>
<method selector='inverseMappingWithPropertyMappingsPassingTest:'>
<arg name='predicate' type='@?' index='0' declared_type='BOOL (^)(RKPropertyMapping *)' function_pointer='true'>
<arg type='@' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingForClass:' class_method='true'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg name='destinationKeyPath' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg name='sourceKeyPath' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='performKeyValueValidation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performsKeyValueValidation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredDateFormatter' class_method='true'>
<retval type='@' declared_type='NSFormatter*'/>
</method>
<method selector='preferredDateFormatter'>
<retval type='@' declared_type='NSFormatter*'/>
</method>
<method selector='propertyMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='relationshipMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removePropertyMapping:'>
<arg name='propertyMapping' type='@' index='0' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestMapping' class_method='true'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='setAssignsDefaultValueForMissingAttributes:'>
<arg name='assignsDefaultValueForMissingAttributes' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAssignsNilForMissingRelationships:'>
<arg name='assignsNilForMissingRelationships' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateFormatters:'>
<arg name='dateFormatters' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultDateFormatters:' class_method='true'>
<arg name='dateFormatters' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultSourceToDestinationKeyTransformationBlock:' class_method='true'>
<arg name='block' type='@?' index='0' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectMapping*'/>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg name='performKeyValueValidation' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerformsKeyValueValidation:'>
<arg name='performsKeyValueValidation' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredDateFormatter:' class_method='true'>
<arg name='dateFormatter' type='@' index='0' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg name='preferredDateFormatter' type='@' index='0' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPropertyMappings:'>
<arg name='propertyMappings' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg name='setDefaultValueForMissingAttributes' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg name='setNilForMissingRelationships' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceToDestinationKeyTransformationBlock:'>
<arg name='block' type='@?' index='0' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectMapping*'/>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueTransformer:'>
<arg name='valueTransformer' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='valueTransformer'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKObjectMappingMatcher'>
<method selector='matcherWithKeyPath:expectedValue:objectMapping:' class_method='true'>
<arg name='keyPath' type='@' index='0' declared_type='NSString*'/>
<arg name='expectedValue' type='@' index='1' declared_type='id'/>
<arg name='objectMapping' type='@' index='2' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matcherWithPredicate:objectMapping:' class_method='true'>
<arg name='predicate' type='@' index='0' declared_type='NSPredicate*'/>
<arg name='objectMapping' type='@' index='1' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matches:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' type='@' index='0' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method selector='parametersWithObject:requestDescriptor:error:' class_method='true'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='requestDescriptor' type='@' index='1' declared_type='RKRequestDescriptor*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='HTTPRequestOperation'>
<retval type='@' declared_type='RKHTTPRequestOperation*'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='initWithHTTPRequestOperation:responseDescriptors:'>
<arg name='requestOperation' type='@' index='0' declared_type='RKHTTPRequestOperation*'/>
<arg name='responseDescriptors' type='@' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='responseDescriptors' type='@' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingMetadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='performMappingOnResponseWithCompletionBlock:'>
<arg name='completionBlock' type='@?' index='0' declared_type='void (^)(RKMappingResult *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKMappingResult*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='responseMappingQueue' class_method='true'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' type='@?' index='0' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='1' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg name='failureCallbackQueue' type='@' index='0' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPRequestOperation:'>
<arg name='HTTPRequestOperation' type='@' index='0' declared_type='RKHTTPRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingMetadata:'>
<arg name='mappingMetadata' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' type='@' index='0' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseDescriptors:'>
<arg name='responseDescriptors' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg name='successCallbackQueue' type='@' index='0' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg name='block' type='@?' index='0' declared_type='id (^)(id)' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='willFinish'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKPaginator'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentPage'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='hasNextPage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasObjectCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPageCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPreviousPage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRequest:paginationMapping:responseDescriptors:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='paginationMapping' type='@' index='1' declared_type='RKObjectMapping*'/>
<arg name='responseDescriptors' type='@' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadNextPage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadPage:'>
<arg type64='Q' name='pageNumber' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadPreviousPage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='objectCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='objectRequestOperation'>
<retval type='@' declared_type='RKObjectRequestOperation*'/>
</method>
<method selector='offset'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='pageCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='paginationMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='patternURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='perPage'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' type='@?' index='0' declared_type='void (^)(RKPaginator *, NSArray *, NSUInteger)' function_pointer='true'>
<arg type='@' declared_type='RKPaginator*'/>
<arg type='@' declared_type='NSArray*'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='1' declared_type='void (^)(RKPaginator *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKPaginator*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg name='fetchRequestBlocks' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPOperationClass:'>
<arg name='operationClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' type='@' index='0' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' type='@' index='0' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectRequestOperation:'>
<arg name='objectRequestOperation' type='@' index='0' declared_type='RKObjectRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg name='operationQueue' type='@' index='0' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaginationMapping:'>
<arg name='paginationMapping' type='@' index='0' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerPage:'>
<arg type64='Q' name='perPage' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg name='pathString' type='@' index='0' declared_type='NSString*'/>
<arg name='shouldTokenize' type='B' index='1' declared_type='BOOL'/>
<arg name='arguments' type='^@' index='2' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg name='patternString' type='@' index='0' declared_type='NSString*'/>
<arg name='shouldTokenize' type='B' index='1' declared_type='BOOL'/>
<arg name='arguments' type='^@' index='2' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathFromObject:addingEscapes:interpolatedParameters:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='addEscapes' type='B' index='1' declared_type='BOOL'/>
<arg name='interpolatedParameters' type='^@' index='2' declared_type='NSDictionary**'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathMatcherWithPath:' class_method='true'>
<arg name='pathString' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pathMatcherWithPattern:' class_method='true'>
<arg name='patternString' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='queryParameters'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='classForPropertyNamed:ofClass:isPrimitive:'>
<arg name='propertyName' type='@' index='0' declared_type='NSString*'/>
<arg name='objectClass' type='#' index='1' declared_type='Class'/>
<arg name='isPrimitive' type='^B' index='2' declared_type='BOOL*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForPropertyNamed:ofEntity:'>
<arg name='propertyName' type='@' index='0' declared_type='NSString*'/>
<arg name='entity' type='@' index='1' declared_type='NSEntityDescription*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='propertyInspectionForClass:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyInspectionForEntity:'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='sharedInspector' class_method='true'>
<retval type='@' declared_type='RKPropertyInspector*'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isEqualToMapping:'>
<arg name='otherMapping' type='@' index='0' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='propertyValueClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' type='@' index='0' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPropertyValueClass:'>
<arg name='propertyValueClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueTransformer:'>
<arg name='valueTransformer' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='valueTransformer'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectedValuesByRelationshipName'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='connections'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithManagedObject:connections:managedObjectCache:'>
<arg name='managedObject' type='@' index='0' declared_type='NSManagedObject*'/>
<arg name='connections' type='@' index='1' declared_type='NSArray*'/>
<arg name='managedObjectCache' type='@' index='2' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObject'>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setConnectedValuesByRelationshipName:'>
<arg name='connectedValuesByRelationshipName' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConnectionBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(RKRelationshipConnectionOperation *, RKConnectionDescription *, id)' function_pointer='true'>
<arg type='@' declared_type='RKRelationshipConnectionOperation*'/>
<arg type='@' declared_type='RKConnectionDescription*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConnections:'>
<arg name='connections' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObject:'>
<arg name='managedObject' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='assignmentPolicy'>
<retval type='i' declared_type='RKAssignmentPolicy'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:' class_method='true'>
<arg name='sourceKeyPath' type='@' index='0' declared_type='NSString*'/>
<arg name='destinationKeyPath' type='@' index='1' declared_type='NSString*'/>
<arg name='mapping' type='@' index='2' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAssignmentPolicy:'>
<arg name='assignmentPolicy' type='i' index='0' declared_type='RKAssignmentPolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='isEqualToRequestDescriptor:'>
<arg name='otherDescriptor' type='@' index='0' declared_type='RKRequestDescriptor*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='method'>
<retval type64='q' type='i' declared_type='RKRequestMethod'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:' class_method='true'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<arg name='objectClass' type='#' index='1' declared_type='Class'/>
<arg name='rootKeyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:method:' class_method='true'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<arg name='objectClass' type='#' index='1' declared_type='Class'/>
<arg name='rootKeyPath' type='@' index='2' declared_type='NSString*'/>
<arg type64='q' name='method' type='i' index='3' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='isEqualToResponseDescriptor:'>
<arg name='otherDescriptor' type='@' index='0' declared_type='RKResponseDescriptor*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='matchesPath:'>
<arg name='path' type='@' index='0' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesResponse:'>
<arg name='response' type='@' index='0' declared_type='NSHTTPURLResponse*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesURL:'>
<arg name='URL' type='@' index='0' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='method'>
<retval type64='q' type='i' declared_type='RKRequestMethod'/>
</method>
<method selector='pathPattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='responseDescriptorWithMapping:method:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<arg name='pathPattern' type='@' index='2' declared_type='NSString*'/>
<arg name='keyPath' type='@' index='3' declared_type='NSString*'/>
<arg name='statusCodes' type='@' index='4' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<arg name='pathPattern' type='@' index='1' declared_type='NSString*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='statusCodes' type='@' index='3' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBaseURL:'>
<arg name='baseURL' type='@' index='0' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' type='@' index='0' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithRequest:response:data:responseDescriptors:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='response' type='@' index='1' declared_type='NSHTTPURLResponse*'/>
<arg name='data' type='@' index='2' declared_type='NSData*'/>
<arg name='responseDescriptors' type='@' index='3' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapperDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingMetadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='matchingResponseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='registerMappingOperationDataSourceClass:' class_method='true'>
<arg name='dataSourceClass' type='#' index='0' declared_type='Class*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='responseMappingsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='setData:'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidFinishMappingBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(RKMappingResult *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='RKMappingResult*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg name='error' type='@' index='0' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapperDelegate:'>
<arg name='mapperDelegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingMetadata:'>
<arg name='mappingMetadata' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' type='@' index='0' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatchingResponseDescriptors:'>
<arg name='matchingResponseDescriptors' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequest:'>
<arg name='request' type='@' index='0' declared_type='NSURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponse:'>
<arg name='response' type='@' index='0' declared_type='NSHTTPURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseDescriptors:'>
<arg name='responseDescriptors' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg name='responseMappingsDictionary' type='@' index='0' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg name='treatsEmptyResponseAsSuccess' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg name='block' type='@?' index='0' declared_type='id (^)(id)' function_pointer='true'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNamedRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRelationshipRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='method'>
<retval type64='q' type='i' declared_type='RKRequestMethod'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='pathPattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='routeWithClass:pathPattern:method:' class_method='true'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<arg name='pathPattern' type='@' index='1' declared_type='NSString*'/>
<arg type64='q' name='method' type='i' index='2' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeWithName:pathPattern:method:' class_method='true'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='pathPattern' type='@' index='1' declared_type='NSString*'/>
<arg type64='q' name='method' type='i' index='2' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeWithRelationshipName:objectClass:pathPattern:method:' class_method='true'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='objectClass' type='#' index='1' declared_type='Class'/>
<arg name='pathPattern' type='@' index='2' declared_type='NSString*'/>
<arg type64='q' name='method' type='i' index='3' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setName:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathPattern:'>
<arg name='pathPattern' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldEscapePath:'>
<arg name='shouldEscapePath' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldEscapePath'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg name='route' type='@' index='0' declared_type='RKRoute*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRoutes:'>
<arg name='routes' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsRoute:'>
<arg name='route' type='@' index='0' declared_type='RKRoute*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='namedRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='relationshipRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeRoute:'>
<arg name='route' type='@' index='0' declared_type='RKRoute*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='routeForClass:method:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForName:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForObject:method:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg name='relationship' type='@' index='0' declared_type='NSString*'/>
<arg name='objectClass' type='#' index='1' declared_type='Class'/>
<arg type64='q' name='method' type='i' index='2' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routesForClass:'>
<arg name='objectClass' type='#' index='0' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='routesForObject:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg name='relationshipName' type='@' index='0' declared_type='NSString*'/>
<arg name='objectClass' type='#' index='1' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg type64='q' name='method' type='i' index='1' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg name='relationshipName' type='@' index='0' declared_type='NSString*'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<arg type64='q' name='method' type='i' index='2' declared_type='RKRequestMethod'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg name='routeName' type='@' index='0' declared_type='NSString*'/>
<arg type64='^q' name='method' type='^i' index='1' declared_type='RKRequestMethod*' type_modifier='o'/>
<arg name='object' type='@' index='2' declared_type='id'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLWithRoute:object:'>
<arg name='route' type='@' index='0' declared_type='RKRoute*'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='baseURL' type='@' index='0' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeSet'>
<retval type='@' declared_type='RKRouteSet*'/>
</method>
<method selector='setBaseURL:'>
<arg name='baseURL' type='@' index='0' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRouteSet:'>
<arg name='routeSet' type='@' index='0' declared_type='RKRouteSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKStringTokenizer'>
<method selector='setStopWords:'>
<arg name='stopWords' type='@' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopWords'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='tokenize:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='RKValueTransformer'>
<method selector='arrayToOrderedSetValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayToSetValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalNumberToNumberValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalNumberToStringValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultValueTransformer' class_method='true'>
<retval type='@' declared_type='RKCompoundValueTransformer*'/>
</method>
<method selector='identityValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='iso8601TimestampToDateValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyOfDictionaryValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyedArchivingValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nullValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberToStringValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectToCollectionValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDefaultValueTransformer:' class_method='true'>
<arg name='compoundValueTransformer' type='@' index='0' declared_type='RKCompoundValueTransformer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringToURLValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeIntervalSince1970ToDateValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RNFrostedSidebar'>
<method selector='animationDuration'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='borderWidth'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='UIScrollView*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dismiss'>
<retval type='v' declared_type='void'/>
</method>
<method selector='dismissAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithImages:'>
<arg name='images' type='@' index='0' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImages:selectedIndices:'>
<arg name='images' type='@' index='0' declared_type='NSArray*'/>
<arg name='selectedIndices' type='@' index='1' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImages:selectedIndices:borderColors:'>
<arg name='images' type='@' index='0' declared_type='NSArray*'/>
<arg name='selectedIndices' type='@' index='1' declared_type='NSIndexSet*'/>
<arg name='colors' type='@' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='itemSize'>
<retval type64='{CGSize=dd}' type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='setAnimationDuration:'>
<arg type64='d' name='animationDuration' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderWidth:'>
<arg type64='Q' name='borderWidth' type='I' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg name='contentView' type='@' index='0' declared_type='UIScrollView*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItemBackgroundColor:'>
<arg name='itemBackgroundColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItemSize:'>
<arg type64='{CGSize=dd}' name='itemSize' type='{CGSize=ff}' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowFromRight:'>
<arg name='showFromRight' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTintColor:'>
<arg name='tintColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg type64='d' name='width' type='f' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='show'>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAnimated:'>
<arg name='animated' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showFromRight'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showInViewController:animated:'>
<arg name='controller' type='@' index='0' declared_type='UIViewController*'/>
<arg name='animated' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tintColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='visibleSidebar' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='width'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='Reachability'>
<method selector='connectionRequired'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentReachabilityFlags'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currentReachabilityStatus'>
<retval type64='q' type='i' declared_type='NetworkStatus'/>
</method>
<method selector='currentReachabilityString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithReachabilityRef:'>
<arg name='ref' type='^{__SCNetworkReachability=}' index='0' declared_type='SCNetworkReachabilityRef'/>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='isConnectionOnDemand'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isConnectionRequired'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isInterventionRequired'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReachable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReachableViaWWAN'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReachableViaWiFi'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reachabilityFlags'>
<retval type='I' declared_type='SCNetworkReachabilityFlags'/>
</method>
<method selector='reachabilityForInternetConnection' class_method='true'>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='reachabilityForLocalWiFi' class_method='true'>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='reachabilityWithAddress:' class_method='true'>
<arg const='true' name='hostAddress' type='^{sockaddr_in=CCS{in_addr=I}[8c]}' index='0' declared_type='struct sockaddr_in*'/>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='reachabilityWithHostname:' class_method='true'>
<arg name='hostname' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='Reachability*'/>
</method>
<method selector='reachableBlock'>
<retval type='@?' declared_type='NetworkReachable' function_pointer='true'>
<arg type='@' declared_type='Reachability*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='reachableOnWWAN'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setReachableBlock:'>
<arg name='reachableBlock' type='@?' index='0' declared_type='NetworkReachable' function_pointer='true'>
<arg type='@' declared_type='Reachability*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReachableOnWWAN:'>
<arg name='reachableOnWWAN' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUnreachableBlock:'>
<arg name='unreachableBlock' type='@?' index='0' declared_type='NetworkUnreachable' function_pointer='true'>
<arg type='@' declared_type='Reachability*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='startNotifier'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopNotifier'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unreachableBlock'>
<retval type='@?' declared_type='NetworkUnreachable' function_pointer='true'>
<arg type='@' declared_type='Reachability*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg name='sourceString' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='patternWithString:' class_method='true'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg name='selector' type=':' index='0' declared_type='SEL'/>
<arg name='object' type='@' index='1' declared_type='id'/>
<arg name='sourceString' type='@' index='2' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringFromObject:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='block' type='@?' index='1' declared_type='NSString *(^)(NSString *)' function_pointer='true'>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringMatches:'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='SVProgressHUD'>
<method selector='dismiss' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hudBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='hudErrorImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='hudFont'>
<retval type='@' declared_type='UIFont*'/>
</method>
<method selector='hudForegroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='hudRingBackgroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='hudRingForegroundColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='hudStatusShadowColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='hudSuccessImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='isVisible' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='popActivity' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetOffsetFromCenter' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudBackgroundColor:'>
<arg name='hudBackgroundColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudErrorImage:'>
<arg name='hudErrorImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudFont:'>
<arg name='hudFont' type='@' index='0' declared_type='UIFont*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudForegroundColor:'>
<arg name='hudForegroundColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudRingBackgroundColor:'>
<arg name='hudRingBackgroundColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudRingForegroundColor:'>
<arg name='hudRingForegroundColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudStatusShadowColor:'>
<arg name='hudStatusShadowColor' type='@' index='0' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHudSuccessImage:'>
<arg name='hudSuccessImage' type='@' index='0' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffsetFromCenter:' class_method='true'>
<arg type64='{UIOffset=dd}' name='offset' type='{UIOffset=ff}' index='0' declared_type='UIOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStatus:' class_method='true'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='show' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='showErrorWithStatus:' class_method='true'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showImage:status:' class_method='true'>
<arg name='image' type='@' index='0' declared_type='UIImage*'/>
<arg name='status' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showProgress:' class_method='true'>
<arg name='progress' type='f' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showProgress:status:' class_method='true'>
<arg name='progress' type='f' index='0' declared_type='float'/>
<arg name='status' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showProgress:status:maskType:' class_method='true'>
<arg name='progress' type='f' index='0' declared_type='float'/>
<arg name='status' type='@' index='1' declared_type='NSString*'/>
<arg type64='Q' name='maskType' type='I' index='2' declared_type='SVProgressHUDMaskType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showSuccessWithStatus:' class_method='true'>
<arg name='string' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showWithMaskType:' class_method='true'>
<arg type64='Q' name='maskType' type='I' index='0' declared_type='SVProgressHUDMaskType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showWithStatus:' class_method='true'>
<arg name='status' type='@' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showWithStatus:maskType:' class_method='true'>
<arg name='status' type='@' index='0' declared_type='NSString*'/>
<arg type64='Q' name='maskType' type='I' index='1' declared_type='SVProgressHUDMaskType'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='TKEvent'>
<method selector='destinationState'>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='eventWithName:transitioningFromStates:toState:' class_method='true'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<arg name='sourceStates' type='@' index='1' declared_type='NSArray*'/>
<arg name='destinationState' type='@' index='2' declared_type='TKState*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDestinationState:'>
<arg name='destinationState' type='@' index='0' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidFireEventBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(TKEvent *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKEvent*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldFireEventBlock:'>
<arg name='block' type='@?' index='0' declared_type='BOOL (^)(TKEvent *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKEvent*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillFireEventBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(TKEvent *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKEvent*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceStates'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='TKState'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDidEnterStateBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidExitStateBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillEnterStateBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillExitStateBlock:'>
<arg name='block' type='@?' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='stateWithName:' class_method='true'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='TKStateMachine'>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='addEvent:'>
<arg name='event' type='@' index='0' declared_type='TKEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addEvents:'>
<arg name='arrayOfEvents' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addState:'>
<arg name='state' type='@' index='0' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addStates:'>
<arg name='arrayOfStates' type='@' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canFireEvent:'>
<arg name='eventOrEventName' type='@' index='0' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentState'>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='eventNamed:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='TKEvent*'/>
</method>
<method selector='events'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='fireEvent:error:'>
<arg name='eventOrEventName' type='@' index='0' declared_type='id'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initialState'>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isInState:'>
<arg name='stateOrStateName' type='@' index='0' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setCurrentState:'>
<arg name='currentState' type='@' index='0' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialState:'>
<arg name='initialState' type='@' index='0' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stateNamed:'>
<arg name='name' type='@' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='states'>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg name='url' type='@' index='0' declared_type='NSURL*'/>
<arg name='placeholderImage' type='@' index='1' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg name='urlRequest' type='@' index='0' declared_type='NSURLRequest*'/>
<arg name='placeholderImage' type='@' index='1' declared_type='UIImage*'/>
<arg name='success' type='@?' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg name='failure' type='@?' index='3' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='fileName' type='@' index='2' declared_type='NSString*'/>
<arg name='mimeType' type='@' index='3' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type64='B40@0:8@16@24^@32' type='B20@0:4@8@12^@16'>
<arg name='fileURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:' type64='B56@0:8@16@24@32@40^@48' type='B28@0:4@8@12@16@20^@24'>
<arg name='fileURL' type='@' index='0' declared_type='NSURL*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='fileName' type='@' index='2' declared_type='NSString*'/>
<arg name='mimeType' type='@' index='3' declared_type='NSString*'/>
<arg name='error' type='^@' index='4' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFormData:name:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithHeaders:body:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg name='headers' type='@' index='0' declared_type='NSDictionary*'/>
<arg name='body' type='@' index='1' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:' type64='v56@0:8@16@24@32Q40@48' type='v32@0:4@8@12@16Q20@28'>
<arg name='inputStream' type='@' index='0' declared_type='NSInputStream*'/>
<arg name='name' type='@' index='1' declared_type='NSString*'/>
<arg name='fileName' type='@' index='2' declared_type='NSString*'/>
<arg name='length' type='Q' index='3' declared_type='unsigned long long'/>
<arg name='mimeType' type='@' index='4' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type64='v32@0:8Q16d24' type='v20@0:4I8d12'>
<arg type64='Q' name='numberOfBytes' type='I' index='0' declared_type='NSUInteger'/>
<arg name='delay' type='d' index='1' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='HTAutocompleteDataSource'>
<method selector='textField:completionForPrefix:ignoreCase:' type64='@36@0:8@16@24B32' type='@20@0:4@8@12B16'>
<arg name='textField' type='@' index='0' declared_type='HTAutocompleteTextField*'/>
<arg name='prefix' type='@' index='1' declared_type='NSString*'/>
<arg name='ignoreCase' type='B' index='2' declared_type='BOOL'/>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='HTAutocompleteTextFieldDelegate'>
<method selector='autoCompleteTextFieldDidAutoComplete:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='autoCompleteField' type='@' index='0' declared_type='HTAutocompleteTextField*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autocompleteTextField:didChangeAutocompleteText:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg name='autocompleteTextField' type='@' index='0' declared_type='HTAutocompleteTextField*'/>
<arg name='autocompleteText' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method selector='didCreateObject:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didDeleteObject:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didFetchObject:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='object' type='@' index='0' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:' type64='@40@0:8@16@24@32' type='@20@0:4@8@12@16'>
<arg name='entity' type='@' index='0' declared_type='NSEntityDescription*'/>
<arg name='attributeValues' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='managedObjectContext' type='@' index='2' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:' type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='mappingOperation' type='@' index='1' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='error' type='@' index='3' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:' type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='dictionaryOrArrayOfDictionaries' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:' type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='mappingOperation' type='@' index='1' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:' type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<arg name='mappingOperation' type='@' index='1' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidCancelMapping:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidFinishMapping:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperWillStartMapping:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg name='mapper' type='@' index='0' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method selector='commitChangesForMappingOperation:error:' type64='B32@0:8@16^@24' type='B16@0:4@8^@12'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:' type64='B40@0:8@16@24^@32' type='B20@0:4@8@12^@16'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='relationshipMapping' type='@' index='1' declared_type='RKRelationshipMapping*'/>
<arg name='error' type='^@' index='2' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:' type64='@48@0:8@16@24@32@40' type='@24@0:4@8@12@16@20'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='representation' type='@' index='1' declared_type='NSDictionary*'/>
<arg name='mapping' type='@' index='2' declared_type='RKObjectMapping*'/>
<arg name='relationshipMapping' type='@' index='3' declared_type='RKRelationshipMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg name='mappingOperation' type='@' index='0' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:' type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='relationship' type='@' index='1' declared_type='NSRelationshipDescription*'/>
<arg name='value' type='@' index='2' declared_type='id'/>
<arg name='connection' type='@' index='3' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:' type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='relationship' type='@' index='1' declared_type='NSRelationshipDescription*'/>
<arg name='connection' type='@' index='2' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailWithError:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='error' type='@' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:' type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:' type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='keyPath' type='@' index='1' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='2' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:' type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:' type64='v40@0:8@16@24@32' type='v20@0:4@8@12@16'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='objectMapping' type='@' index='1' declared_type='RKObjectMapping*'/>
<arg name='dynamicMapping' type='@' index='2' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:' type64='v48@0:8@16@24@32@40' type='v24@0:4@8@12@16@20'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:' type64='B48@0:8@16@24@32@40' type='B24@0:4@8@12@16@20'>
<arg name='operation' type='@' index='0' declared_type='RKMappingOperation*'/>
<arg name='value' type='@' index='1' declared_type='id'/>
<arg name='keyPath' type='@' index='2' declared_type='NSString*'/>
<arg name='propertyMapping' type='@' index='3' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method selector='dataFromObject:error:' type64='@32@0:8@16^@24' type='@16@0:4@8^@12' class_method='true'>
<arg name='object' type='@' index='0' declared_type='id'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='objectFromData:error:' type64='@32@0:8@16^@24' type='@16@0:4@8^@12' class_method='true'>
<arg name='data' type='@' index='0' declared_type='NSData*'/>
<arg name='error' type='^@' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='RKValueTransforming'>
<method selector='transformValue:toValue:ofClass:error:' type64='B48@0:8@16^@24#32^@40' type='B24@0:4@8^@12#16^@20'>
<arg name='inputValue' type='@' index='0' declared_type='id'/>
<arg name='outputValue' type='^@' index='1' declared_type='id*'/>
<arg name='outputValueClass' type='#' index='2' declared_type='Class'/>
<arg name='error' type='^@' index='3' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateTransformationFromClass:toClass:' type64='B32@0:8#16#24' type='B16@0:4#8#12'>
<arg name='inputValueClass' type='#' index='0' declared_type='Class'/>
<arg name='outputValueClass' type='#' index='1' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='RNFrostedSidebarDelegate'>
<method selector='sidebar:didDismissFromScreenAnimated:' type64='v28@0:8@16B24' type='v16@0:4@8B12'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:didEnable:itemAtIndex:' type64='v36@0:8@16B24Q28' type='v20@0:4@8B12I16'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='itemEnabled' type='B' index='1' declared_type='BOOL'/>
<arg type64='Q' name='index' type='I' index='2' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:didShowOnScreenAnimated:' type64='v28@0:8@16B24' type='v16@0:4@8B12'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:didTapItemAtIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg type64='Q' name='index' type='I' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:willDismissFromScreenAnimated:' type64='v28@0:8@16B24' type='v16@0:4@8B12'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sidebar:willShowOnScreenAnimated:' type64='v28@0:8@16B24' type='v16@0:4@8B12'>
<arg name='sidebar' type='@' index='0' declared_type='RNFrostedSidebar*'/>
<arg name='animatedYesOrNo' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
