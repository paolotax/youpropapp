<?xml version='1.0'?>
<signatures version='1.0'>
<constant type='@' name='AFNetworkingErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationDidFinishNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationDidStartNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationFailingURLRequestErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingOperationFailingURLResponseErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingReachabilityDidChangeNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='AFNetworkingReachabilityNotificationStatusItem' const='true' declared_type='NSString*'/>
<constant type='@' name='RKDetailedErrorsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKEntityIdentificationAttributesUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='RKErrorNotificationErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKMIMETypeErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKMIMETypeFormURLEncoded' const='true' declared_type='NSString*'/>
<constant type='@' name='RKMIMETypeJSON' const='true' declared_type='NSString*'/>
<constant type='@' name='RKMIMETypeTextXML' const='true' declared_type='NSString*'/>
<constant type='@' name='RKMIMETypeXML' const='true' declared_type='NSString*'/>
<constant type='@' name='RKManagedObjectStoreDidResetPersistentStoresNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='RKMappingErrorKeyPathErrorKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKObjectMapperErrorObjectsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKObjectRequestOperationDidFinishNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='RKObjectRequestOperationDidStartNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='RKObjectRequestOperationMappingDidFinishUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKObjectRequestOperationMappingDidStartUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKPropertyInspectionIsPrimitiveKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKPropertyInspectionKeyValueCodingClassKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKPropertyInspectionNameKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKResponseHasBeenMappedCacheUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKSQLitePersistentStoreSeedDatabasePathOption' const='true' declared_type='NSString*'/>
<constant type='@' name='RKValueTransformersDetailedErrorsKey' const='true' declared_type='NSString*'/>
<constant type='@' name='RKValueTransformersErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='TKErrorDomain' const='true' declared_type='NSString*'/>
<constant type='@' name='TKStateMachineDidChangeStateEventUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='TKStateMachineDidChangeStateNewStateUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='TKStateMachineDidChangeStateNotification' const='true' declared_type='NSString*'/>
<constant type='@' name='TKStateMachineDidChangeStateOldStateUserInfoKey' const='true' declared_type='NSString*'/>
<constant type='@' name='TKStateMachineIsImmutableException' const='true' declared_type='NSString*'/>
<constant type='d' name='kAFUploadStream3GSuggestedDelay' const='true' declared_type='NSTimeInterval'/>
<constant type='I' name='kAFUploadStream3GSuggestedPacketSize' const='true' declared_type='NSUInteger' type64='Q'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_CustomBadge' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_NVSlideMenuController' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_CustomBadge' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_ISO8601DateFormatterValueTransformer' value='5'/>
<enum name='COCOAPODS_VERSION_MINOR_NVSlideMenuController' value='5'/>
<enum name='COCOAPODS_VERSION_MINOR_RKValueTransformers' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Core' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_CoreData' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Network' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_ObjectMapping' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Support' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_PATCH_CustomBadge' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_NVSlideMenuController' value='5'/>
<enum name='COCOAPODS_VERSION_PATCH_RKValueTransformers' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SOCKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_TransitionKit' value='1'/>
<enum name='NVSlideMenuControllerSlideFromLeftToRight' value='0'/>
<enum name='NVSlideMenuControllerSlideFromRightToLeft' value='1'/>
<enum name='RKAssignmentPolicyReplace' value='1'/>
<enum name='RKAssignmentPolicySet' value='0'/>
<enum name='RKAssignmentPolicyUnion' value='2'/>
<enum name='RKISO8601DateFormatCalendar' value='0'/>
<enum name='RKISO8601DateFormatOrdinal' value='1'/>
<enum name='RKISO8601DateFormatWeek' value='2'/>
<enum name='RKLogComponent' value='0'/>
<enum name='RKLogLevelCritical' value='1'/>
<enum name='RKLogLevelDebug' value='5'/>
<enum name='RKLogLevelDefault' value='3'/>
<enum name='RKLogLevelError' value='2'/>
<enum name='RKLogLevelInfo' value='4'/>
<enum name='RKLogLevelOff' value='0'/>
<enum name='RKLogLevelTrace' value='6'/>
<enum name='RKLogLevelWarning' value='3'/>
<enum name='RKMappingErrorFromMappingResult' value='1004'/>
<enum name='RKMappingErrorInvalidAssignmentPolicy' value='1010'/>
<enum name='RKMappingErrorMappingDeclined' value='1009'/>
<enum name='RKMappingErrorNilDestinationObject' value='1007'/>
<enum name='RKMappingErrorNilManagedObjectCache' value='1008'/>
<enum name='RKMappingErrorNotFound' value='1001'/>
<enum name='RKMappingErrorTypeMismatch' value='1002'/>
<enum name='RKMappingErrorUnableToDetermineMapping' value='1006'/>
<enum name='RKMappingErrorUnmappableRepresentation' value='1003'/>
<enum name='RKMappingErrorValidationFailure' value='1005'/>
<enum name='RKOperationCancelledError' value='2'/>
<enum name='RKReplaceAssignmentPolicy' value='1'/>
<enum name='RKRequestMethodAny' value='127'/>
<enum name='RKRequestMethodDELETE' value='8'/>
<enum name='RKRequestMethodGET' value='1'/>
<enum name='RKRequestMethodHEAD' value='16'/>
<enum name='RKRequestMethodOPTIONS' value='64'/>
<enum name='RKRequestMethodPATCH' value='32'/>
<enum name='RKRequestMethodPOST' value='2'/>
<enum name='RKRequestMethodPUT' value='4'/>
<enum name='RKSetAssignmentPolicy' value='0'/>
<enum name='RKStatusCodeClassClientError' value='400'/>
<enum name='RKStatusCodeClassInformational' value='100'/>
<enum name='RKStatusCodeClassRedirection' value='300'/>
<enum name='RKStatusCodeClassServerError' value='500'/>
<enum name='RKStatusCodeClassSuccessful' value='200'/>
<enum name='RKUnionAssignmentPolicy' value='2'/>
<enum name='RKUnsupportedMIMETypeError' value='1'/>
<enum name='RKValueTransformationErrorTransformationFailed' value='3002'/>
<enum name='RKValueTransformationErrorUnsupportedOutputClass' value='3001'/>
<enum name='RKValueTransformationErrorUntransformableInputValue' value='3000'/>
<enum name='RKlcl_cApp' value='0'/>
<enum name='RKlcl_cRestKit' value='1'/>
<enum name='RKlcl_cRestKitCoreData' value='2'/>
<enum name='RKlcl_cRestKitCoreDataCache' value='3'/>
<enum name='RKlcl_cRestKitNetwork' value='4'/>
<enum name='RKlcl_cRestKitNetworkCoreData' value='5'/>
<enum name='RKlcl_cRestKitObjectMapping' value='6'/>
<enum name='RKlcl_cRestKitSearch' value='7'/>
<enum name='RKlcl_cRestKitSupport' value='8'/>
<enum name='RKlcl_cRestKitTesting' value='9'/>
<enum name='RKlcl_cRestKitUI' value='10'/>
<enum name='RKlcl_vCritical' value='1'/>
<enum name='RKlcl_vDebug' value='5'/>
<enum name='RKlcl_vError' value='2'/>
<enum name='RKlcl_vInfo' value='4'/>
<enum name='RKlcl_vOff' value='0'/>
<enum name='RKlcl_vTrace' value='6'/>
<enum name='RKlcl_vWarning' value='3'/>
<enum name='TKInvalidTransitionError' value='1000'/>
<enum name='TKTransitionDeclinedError' value='1001'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg type='@' name='parameters' declared_type='NSDictionary*'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' type64='Q'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKArrayOfFetchRequestFromBlocksWithURL'>
<arg type='@' name='fetchRequestBlocks' declared_type='NSArray*'/>
<arg type='@' name='URL' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='RKCacheableStatusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</function>
<function name='RKCachesDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKClassIsCollection'>
<arg type='#' name='aClass' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKDateFromString'>
<arg type='@' name='dateString' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg type='@' name='dict1' declared_type='NSDictionary*'/>
<arg type='@' name='dict2' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg type='@' name='dictionary' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg type='@' name='URLEncodedString' declared_type='NSString*'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' type64='Q'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg type='@' name='path' declared_type='NSString*'/>
<arg type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg type='@' name='mappingResult' declared_type='RKMappingResult*'/>
<retval type='@' declared_type='NSError*'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg type='@' name='headers' declared_type='NSDictionary*'/>
<arg type='i' name='statusCode' declared_type='NSInteger' type64='q'/>
<retval type='@' declared_type='NSDate*'/>
</function>
<function name='RKIdentificationAttributesInferredFromEntity'>
<arg type='@' name='entity' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='RKIsSpecificRequestMethod'>
<arg type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKKeyValueCodingClassForObjCType'>
<arg type='*' name='type' const='true' declared_type='char*'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='RKKeyValueCodingClassFromPropertyAttributes'>
<arg type='*' name='attr' const='true' declared_type='char*'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogCoreDataError'>
<arg type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKLogValidationError'>
<arg type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg type='@' name='path' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKMIMETypeInSet'>
<arg type='@' name='MIMEType' declared_type='NSString*'/>
<arg type='@' name='MIMETypes' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollection'>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsCollectionOfCollections'>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg type='@' name='object' declared_type='id'/>
<arg type='@' name='anotherObject' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg type='@' name='URL' declared_type='NSURL*'/>
<arg type='@' name='baseURL' declared_type='NSURL*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg type='@' name='pathPattern' declared_type='NSString*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg type='@' name='string' declared_type='NSString*'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' type64='Q'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKPropertyInspectorGetClassForPropertyAtKeyPathOfObject'>
<arg type='@' name='keyPath' declared_type='NSString*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='RKPropertyInspectorIsPropertyAtKeyPathOfObjectPrimitive'>
<arg type='@' name='keyPath' declared_type='NSString*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKPropertyTypeFromAttributeString'>
<arg type='@' name='attributeString' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg type='@' name='string' declared_type='NSString*'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' type64='Q'/>
<retval type='@' declared_type='NSDictionary*'/>
</function>
<function name='RKRequestMethodFromString'>
<arg type='@' declared_type='NSString*'/>
<retval type='i' declared_type='RKRequestMethod' type64='q'/>
</function>
<function name='RKSetExcludeFromBackupAttributeForItemAtPath'>
<arg type='@' name='path' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg type='I' name='statusCodeClass' declared_type='RKStatusCodeClass' type64='Q'/>
<retval type='@' declared_type='NSIndexSet*'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg type='I' name='statusCodeClass' declared_type='RKStatusCodeClass' type64='Q'/>
<retval type='{_NSRange=II}' declared_type='NSRange' type64='{_NSRange=QQ}'/>
</function>
<function name='RKStringFromDate'>
<arg type='@' name='date' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromNetworkReachabilityStatus'>
<arg type='i' name='networkReachabilityStatus' declared_type='AFNetworkReachabilityStatus'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKStringFromStatusCode'>
<arg type='i' name='statusCode' declared_type='NSInteger' type64='q'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg type='@' name='dictionary' declared_type='NSDictionary*'/>
<arg type='I' name='encoding' declared_type='NSStringEncoding' type64='Q'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg type='@' name='URL' declared_type='NSURL*'/>
<arg type='@' name='baseURL' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg type='I' name='component' declared_type='_RKlcl_component_t'/>
<arg type='I' name='level' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg type='*' name='header' const='true' declared_type='char*'/>
<arg type='I' name='level' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg type='*' name='identifier' const='true' declared_type='char*'/>
<arg type='I' name='level' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg type='*' name='name' const='true' declared_type='char*'/>
<arg type='I' name='level' declared_type='_RKlcl_level_t'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg type='@' name='string' declared_type='NSString*'/>
<arg type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='AFHTTPRequestOperation*'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg index='0' type='@' name='method' declared_type='NSString*'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval type='v' declared_type='void'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg index='0' type='@' name='url' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultHeaders'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval type='i' declared_type='AFURLConnectionOperationSSLPinningMode'/>
</method>
<method selector='defaultValueForHeader:'>
<arg index='0' type='@' name='header' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg index='0' type='@' name='operations' declared_type='NSArray*'/>
<arg index='1' type='@?' name='progressBlock' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='completionBlock' function_pointer='true' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg index='0' type='@' name='urlRequests' declared_type='NSArray*'/>
<arg index='1' type='@?' name='progressBlock' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='completionBlock' function_pointer='true' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg index='0' type='@' name='operation' declared_type='AFHTTPRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' type='@' name='url' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg index='0' type='@' name='method' declared_type='NSString*'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='block' function_pointer='true' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='networkReachabilityStatus'>
<retval type='i' declared_type='AFNetworkReachabilityStatus'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='parameterEncoding'>
<retval type='i' declared_type='AFHTTPClientParameterEncoding'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg index='0' type='#' name='operationClass' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg index='0' type='@' name='method' declared_type='NSString*'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' type='B' name='allowsInvalidSSLCertificate' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg index='0' type='@' name='token' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg index='0' type='@' name='username' declared_type='NSString*'/>
<arg index='1' type='@' name='password' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultCredential:'>
<arg index='0' type='@' name='credential' declared_type='NSURLCredential*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg index='0' type='@' name='header' declared_type='NSString*'/>
<arg index='1' type='@' name='value' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg index='0' type='i' name='defaultSSLPinningMode' declared_type='AFURLConnectionOperationSSLPinningMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParameterEncoding:'>
<arg index='0' type='i' name='parameterEncoding' declared_type='AFHTTPClientParameterEncoding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(AFNetworkReachabilityStatus)'>
<arg type='i' declared_type='AFNetworkReachabilityStatus'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringEncoding:'>
<arg index='0' type='I' name='stringEncoding' declared_type='NSStringEncoding' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringEncoding'>
<retval type='I' declared_type='NSStringEncoding' type64='Q'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg index='0' type='#' name='operationClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg index='0' type='@' name='contentTypes' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg index='0' type='@' name='statusCodes' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='hasAcceptableContentType'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' type='@?' name='success' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='@?' name='failure' function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)'>
<arg type='@' declared_type='AFHTTPRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' type='@' name='failureCallbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' type='@' name='successCallbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='automaticallyInflatesResponseImage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='imageProcessingBlock' function_pointer='true' declared_type='UIImage *(^)(UIImage *)'>
<arg type='@' declared_type='UIImage*'/>
<retval type='@' declared_type='UIImage*'/>
</arg>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='success' function_pointer='true' declared_type='void (^)(UIImage *)'>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageScale'>
<retval type='f' declared_type='CGFloat' type64='d'/>
</method>
<method selector='responseImage'>
<retval type='@' declared_type='UIImage*'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg index='0' type='B' name='automaticallyInflatesResponseImage' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScale:'>
<arg index='0' type='f' name='imageScale' declared_type='CGFloat' type64='d'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval type='I' declared_type='NSJSONReadingOptions' type64='Q'/>
</method>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseJSON'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg index='0' type='I' name='JSONReadingOptions' declared_type='NSJSONReadingOptions' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='incrementActivityCount'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval type='I' declared_type='NSPropertyListReadOptions' type64='Q'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responsePropertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg index='0' type='I' name='propertyListReadOptions' declared_type='NSPropertyListReadOptions' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval type='i' declared_type='AFURLConnectionOperationSSLPinningMode'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='credential'>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithRequest:'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='isPaused'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outputStream'>
<retval type='@' declared_type='NSOutputStream*'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='responseData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='responseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='responseStringEncoding'>
<retval type='I' declared_type='NSStringEncoding' type64='Q'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' type='B' name='allowsInvalidSSLCertificate' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSCachedURLResponse*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCredential:'>
<arg index='0' type='@' name='credential' declared_type='NSURLCredential*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInputStream:'>
<arg index='0' type='@' name='inputStream' declared_type='NSInputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputStream:'>
<arg index='0' type='@' name='outputStream' declared_type='NSOutputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg index='0' type='@' name='runLoopModes' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSSLPinningMode:'>
<arg index='0' type='i' name='SSLPinningMode' declared_type='AFURLConnectionOperationSSLPinningMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg index='0' type='@?' name='handler' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg index='0' type='B' name='shouldUseCredentialStorage' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<arg type='q' declared_type='long long'/>
<arg type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' type='@' name='userInfo' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)'>
<arg type='@' declared_type='NSURLConnection*'/>
<arg type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<arg type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseXMLParser'>
<retval type='@' declared_type='NSXMLParser*'/>
</method>
</class>
<class name='CustomBadge'>
<method selector='autoBadgeSizeWithString:'>
<arg index='0' type='@' name='badgeString' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='badgeCornerRoundness'>
<retval type='f' declared_type='CGFloat' type64='d'/>
</method>
<method selector='badgeFrame'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='badgeFrameColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='badgeInsetColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='badgeScaleFactor'>
<retval type='f' declared_type='CGFloat' type64='d'/>
</method>
<method selector='badgeShining'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='badgeText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='badgeTextColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='customBadgeWithString:' class_method='true'>
<arg index='0' type='@' name='badgeString' declared_type='NSString*'/>
<retval type='@' declared_type='CustomBadge*'/>
</method>
<method selector='customBadgeWithString:withStringColor:withInsetColor:withBadgeFrame:withBadgeFrameColor:withScale:withShining:' class_method='true'>
<arg index='0' type='@' name='badgeString' declared_type='NSString*'/>
<arg index='1' type='@' name='stringColor' declared_type='UIColor*'/>
<arg index='2' type='@' name='insetColor' declared_type='UIColor*'/>
<arg index='3' type='B' name='badgeFrameYesNo' declared_type='BOOL'/>
<arg index='4' type='@' name='frameColor' declared_type='UIColor*'/>
<arg index='5' type='f' name='scale' declared_type='CGFloat' type64='d'/>
<arg index='6' type='B' name='shining' declared_type='BOOL'/>
<retval type='@' declared_type='CustomBadge*'/>
</method>
<method selector='setBadgeCornerRoundness:'>
<arg index='0' type='f' name='badgeCornerRoundness' declared_type='CGFloat' type64='d'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeFrame:'>
<arg index='0' type='B' name='badgeFrame' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeFrameColor:'>
<arg index='0' type='@' name='badgeFrameColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeInsetColor:'>
<arg index='0' type='@' name='badgeInsetColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeScaleFactor:'>
<arg index='0' type='f' name='badgeScaleFactor' declared_type='CGFloat' type64='d'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeShining:'>
<arg index='0' type='B' name='badgeShining' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeText:'>
<arg index='0' type='@' name='badgeText' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBadgeTextColor:'>
<arg index='0' type='@' name='badgeTextColor' declared_type='UIColor*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNew'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg index='0' type='@' name='entityName' declared_type='NSString*'/>
<arg index='1' type='@' name='predicate' declared_type='NSPredicate*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg index='0' type='@' name='entityName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='saveToPersistentStore:'>
<arg index='0' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='@' name='fileName' declared_type='NSString*'/>
<arg index='3' type='@' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg index='0' type='@' name='fileURL' declared_type='NSURL*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg index='0' type='@' name='fileURL' declared_type='NSURL*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='@' name='fileName' declared_type='NSString*'/>
<arg index='3' type='@' name='mimeType' declared_type='NSString*'/>
<arg index='4' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg index='0' type='@' name='headers' declared_type='NSDictionary*'/>
<arg index='1' type='@' name='body' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg index='0' type='@' name='inputStream' declared_type='NSInputStream*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='@' name='fileName' declared_type='NSString*'/>
<arg index='3' type='Q' name='length' declared_type='unsigned long long'/>
<arg index='4' type='@' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='commitChangesForMappingOperation:error:'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataFromObject:error:' class_method='true'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='didCreateObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didDeleteObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didFetchObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<arg index='2' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='dictionaryOrArrayOfDictionaries' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidCancelMapping:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='relationshipMapping' declared_type='RKRelationshipMapping*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<arg index='2' type='@' name='value' declared_type='id'/>
<arg index='3' type='@' name='connection' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<arg index='2' type='@' name='connection' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='2' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<arg index='2' type='@' name='dynamicMapping' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='representation' declared_type='NSDictionary*'/>
<arg index='2' type='@' name='mapping' declared_type='RKObjectMapping*'/>
<arg index='3' type='@' name='relationshipMapping' declared_type='RKRelationshipMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectFromData:error:' class_method='true'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg index='0' type='I' name='numberOfBytes' declared_type='NSUInteger' type64='Q'/>
<arg index='1' type='d' name='delay' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformValue:toValue:ofClass:error:'>
<arg index='0' type='@' name='inputValue' declared_type='id'/>
<arg index='1' type='^@' name='outputValue' declared_type='id*'/>
<arg index='2' type='#' name='outputValueClass' declared_type='Class'/>
<arg index='3' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateTransformationFromClass:toClass:'>
<arg index='0' type='#' name='inputValueClass' declared_type='Class'/>
<arg index='1' type='#' name='outputValueClass' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NVSlideMenuController'>
<method selector='autoAdjustMenuWidth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='bounceWhenNavigating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='closeMenuAnimated:completion:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='closeMenuBehindContentViewController:animated:bounce:completion:'>
<arg index='0' type='@' name='contentViewController' declared_type='UIViewController*'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<arg index='2' type='B' name='bounce' declared_type='BOOL'/>
<arg index='3' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='closeMenuBehindContentViewController:animated:completion:'>
<arg index='0' type='@' name='contentViewController' declared_type='UIViewController*'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<arg index='2' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='contentViewWidthWhenMenuIsOpen'>
<retval type='f' declared_type='CGFloat' type64='d'/>
</method>
<method selector='hideContentViewControllerAnimated:completion:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithMenuViewController:andContentViewController:'>
<arg index='0' type='@' name='menuViewController' declared_type='UIViewController*'/>
<arg index='1' type='@' name='contentViewController' declared_type='UIViewController*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isContentViewHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMenuOpen'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menuViewController'>
<retval type='@' declared_type='UIViewController*'/>
</method>
<method selector='menuWidth'>
<retval type='f' declared_type='CGFloat' type64='d'/>
</method>
<method selector='openMenuAnimated:completion:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='panEnabledWhenSlideMenuIsHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panGestureEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='partiallyShowContentViewControllerAnimated:completion:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoAdjustMenuWidth:'>
<arg index='0' type='B' name='autoAdjustMenuWidth' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBounceWhenNavigating:'>
<arg index='0' type='B' name='bounceWhenNavigating' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewController:animated:completion:'>
<arg index='0' type='@' name='contentViewController' declared_type='UIViewController*'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<arg index='2' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewWidthWhenMenuIsOpen:'>
<arg index='0' type='f' name='contentViewWidthWhenMenuIsOpen' declared_type='CGFloat' type64='d'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuWidth:'>
<arg index='0' type='f' name='menuWidth' declared_type='CGFloat' type64='d'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPanEnabledWhenSlideMenuIsHidden:'>
<arg index='0' type='B' name='panEnabledWhenSlideMenuIsHidden' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPanGestureEnabled:'>
<arg index='0' type='B' name='panGestureEnabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowShadowOnContentView:'>
<arg index='0' type='B' name='showShadowOnContentView' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSlideDirection:'>
<arg index='0' type='I' name='slideDirection' declared_type='NVSlideMenuControllerSlideDirection' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSlideDirection:animated:'>
<arg index='0' type='I' name='slideDirection' declared_type='NVSlideMenuControllerSlideDirection' type64='Q'/>
<arg index='1' type='B' name='animated' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showContentViewControllerAnimated:completion:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showMenuAnimated:completion:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(BOOL)'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='showShadowOnContentView'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='slideDirection'>
<retval type='I' declared_type='NVSlideMenuControllerSlideDirection' type64='Q'/>
</method>
<method selector='toggleMenuAnimated:'>
<arg index='0' type='@' name='sender' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method selector='attributeMappingFromKeyPath:toKeyPath:' class_method='true'>
<arg index='0' type='@' name='sourceKeyPath' declared_type='NSString*'/>
<arg index='1' type='@' name='destinationKeyPath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKBlockValueTransformer'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueTransformerWithValidationBlock:transformationBlock:' class_method='true'>
<arg index='0' type='@?' name='validationBlock' function_pointer='true' declared_type='BOOL (^)(Class, Class)'>
<arg type='#' declared_type='Class'/>
<arg type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<arg index='1' type='@?' name='transformationBlock' function_pointer='true' declared_type='BOOL (^)(id, id *, Class, NSError **)'>
<arg type='@' declared_type='id'/>
<arg type='^@' declared_type='id*'/>
<arg type='#' declared_type='Class'/>
<arg type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKCompoundValueTransformer'>
<method selector='addValueTransformer:'>
<arg index='0' type='@' name='valueTransformer' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='compoundValueTransformerWithValueTransformers:' class_method='true'>
<arg index='0' type='@' name='valueTransformers' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertValueTransformer:atIndex:'>
<arg index='0' type='@' name='valueTransformer' declared_type='id'/>
<arg index='1' type='I' name='index' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfValueTransformers'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='removeValueTransformer:'>
<arg index='0' type='@' name='valueTransformer' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueTransformersForTransformingFromClass:toClass:'>
<arg index='0' type='#' name='inputValueClass' declared_type='Class'/>
<arg index='1' type='#' name='outputValueClass' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='RKConnectionDescription'>
<method selector='attributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='destinationPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='includesSubentities'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRelationship:attributes:'>
<arg index='0' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<arg index='1' type='@' name='sourceToDestinationEntityAttributes' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRelationship:keyPath:'>
<arg index='0' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isForeignKeyConnection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKeyPathConnection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relationship'>
<retval type='@' declared_type='NSRelationshipDescription*'/>
</method>
<method selector='setDestinationPredicate:'>
<arg index='0' type='@' name='destinationPredicate' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesSubentities:'>
<arg index='0' type='B' name='includesSubentities' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelationship:'>
<arg index='0' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourcePredicate:'>
<arg index='0' type='@' name='sourcePredicate' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourcePredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dotNetDateFormatterWithTimeZone:' class_method='true'>
<arg index='0' type='@' name='timeZone' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' type='@' name='date' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='addMatcher:'>
<arg index='0' type='@' name='matcher' declared_type='RKObjectMappingMatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='matchers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectMappingForRepresentation:'>
<arg index='0' type='@' name='representation' declared_type='id'/>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='objectMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeMatcher:'>
<arg index='0' type='@' name='matcher' declared_type='RKObjectMappingMatcher*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatchers:'>
<arg index='0' type='@' name='matchers' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMappingForRepresentationBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='RKObjectMapping *(^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='RKObjectMapping*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:completion:'>
<arg index='0' type='@' name='managedObjects' declared_type='NSSet*'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='callbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='containsObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsObjectWithAttributeValues:'>
<arg index='0' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='countOfAttributeValues'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='countWithAttributeValues:'>
<arg index='0' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='entity'>
<retval type='@' declared_type='NSEntityDescription*'/>
</method>
<method selector='flush'>
<retval type='v' declared_type='void'/>
</method>
<method selector='flush:'>
<arg index='0' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithEntity:attributes:managedObjectContext:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeNames' declared_type='NSArray*'/>
<arg index='2' type='@' name='context' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load'>
<retval type='v' declared_type='void'/>
</method>
<method selector='load:'>
<arg index='0' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='monitorsContextForChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectWithAttributeValues:inContext:'>
<arg index='0' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<arg index='1' type='@' name='context' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='objectsWithAttributeValues:inContext:'>
<arg index='0' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<arg index='1' type='@' name='context' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjects:completion:'>
<arg index='0' type='@' name='managedObjects' declared_type='NSSet*'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCallbackQueue:'>
<arg index='0' type='@' name='callbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg index='0' type='B' name='monitorsContextForChanges' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:completion:'>
<arg index='0' type='@' name='objects' declared_type='NSSet*'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeCacheForEntity:attributes:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeNames' declared_type='NSArray*'/>
<retval type='@' declared_type='RKEntityByAttributeCache*'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cacheObjectsForEntity:byAttributes:completion:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeNames' declared_type='NSArray*'/>
<arg index='2' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='callbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='containsObject:'>
<arg index='0' type='@' name='managedObject' declared_type='NSManagedObject*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flush:'>
<arg index='0' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg index='0' type='@' name='context' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEntity:cachedByAttributes:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeNames' declared_type='NSArray*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='objectForEntity:withAttributeValues:inContext:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<arg index='2' type='@' name='context' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='objectsForEntity:withAttributeValues:inContext:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<arg index='2' type='@' name='context' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObject:'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjects:completion:'>
<arg index='0' type='@' name='objects' declared_type='NSSet*'/>
<arg index='1' type='@?' name='completion' function_pointer='true' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCallbackQueue:'>
<arg index='0' type='@' name='callbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnection:'>
<arg index='0' type='@' name='connection' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addConnectionForRelationship:connectedBy:'>
<arg index='0' type='@' name='relationshipOrName' declared_type='id'/>
<arg index='1' type='@' name='connectionSpecifier' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionForRelationship:'>
<arg index='0' type='@' name='relationshipOrName' declared_type='id'/>
<retval type='@' declared_type='RKConnectionDescription*'/>
</method>
<method selector='connections'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg index='0' type='@' name='attributeName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='deletionPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='discardsInvalidObjectsOnInsert'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='entity'>
<retval type='@' declared_type='NSEntityDescription*'/>
</method>
<method selector='identificationAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='identificationPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='initWithEntity:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEntityIdentificationInferenceEnabled' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mappingForEntityForName:inManagedObjectStore:' class_method='true'>
<arg index='0' type='@' name='entityName' declared_type='NSString*'/>
<arg index='1' type='@' name='managedObjectStore' declared_type='RKManagedObjectStore*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='modificationAttribute'>
<retval type='@' declared_type='NSAttributeDescription*'/>
</method>
<method selector='modificationKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='persistentStore'>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='removeConnection:'>
<arg index='0' type='@' name='connection' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeletionPredicate:'>
<arg index='0' type='@' name='deletionPredicate' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDiscardsInvalidObjectsOnInsert:'>
<arg index='0' type='B' name='discardsInvalidObjectsOnInsert' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntity:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntityIdentificationInferenceEnabled:' class_method='true'>
<arg index='0' type='B' name='enabled' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentificationAttributes:'>
<arg index='0' type='@' name='identificationAttributes' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentificationPredicate:'>
<arg index='0' type='@' name='identificationPredicate' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModificationAttribute:'>
<arg index='0' type='@' name='modificationAttribute' declared_type='NSAttributeDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModificationAttributeForName:'>
<arg index='0' type='@' name='attributeName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setModificationKey:'>
<arg index='0' type='@' name='modificationKey' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStore:'>
<arg index='0' type='@' name='persistentStore' declared_type='NSPersistentStore*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setErrorMessage:'>
<arg index='0' type='@' name='errorMessage' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' type='@' name='userInfo' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='acceptableStatusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg index='0' type='@' name='acceptableContentTypes' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg index='0' type='@' name='acceptableStatusCodes' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='dateFromString:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='defaultISO8601DateFormatter' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='format'>
<retval type='I' declared_type='RKISO8601DateFormat' type64='Q'/>
</method>
<method selector='includeTime'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='parsesStrictly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFormat:'>
<arg index='0' type='I' name='format' declared_type='RKISO8601DateFormat' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludeTime:'>
<arg index='0' type='B' name='includeTime' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' type='@' name='locale' declared_type='NSLocale*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParsesStrictly:'>
<arg index='0' type='B' name='parsesStrictly' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeSeparator:'>
<arg index='0' type='S' name='timeSeparator' declared_type='unichar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' type='@' name='timeZone' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' type='@' name='date' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeSeparator'>
<retval type='S' declared_type='unichar'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method selector='dataFromObject:MIMEType:error:' class_method='true'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='MIMEType' declared_type='NSString*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='objectFromData:MIMEType:error:' class_method='true'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='@' name='MIMEType' declared_type='NSString*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='registerClass:forMIMEType:' class_method='true'>
<arg index='0' type='#' name='serializationClass' declared_type='Class*'/>
<arg index='1' type='@' name='MIMETypeStringOrRegularExpression' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registeredMIMETypes' class_method='true'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='serializationClassForMIMEType:' class_method='true'>
<arg index='0' type='@' name='MIMEType' declared_type='NSString*'/>
<retval type='#' declared_type='Class*'/>
</method>
<method selector='unregisterClass:' class_method='true'>
<arg index='0' type='#' name='serializationClass' declared_type='Class*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg index='0' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='mapping' declared_type='RKMapping*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='^@' name='error' declared_type='NSError**'/>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg index='0' type='@' name='managedObjectModel' declared_type='NSManagedObjectModel*'/>
<arg index='1' type='@' name='storePath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPersistentStore:'>
<arg index='0' type='@' name='persistentStore' declared_type='NSPersistentStore*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='logSeedingInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='persistentStore'>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' type='@' name='managedObjectModel' declared_type='NSManagedObjectModel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStore:'>
<arg index='0' type='@' name='persistentStore' declared_type='NSPersistentStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg index='0' type='B' name='resetsStoreBeforeImporting' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStorePath:'>
<arg index='0' type='@' name='storePath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='storePath'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<arg index='1' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='parentOperation'>
<retval type='@' declared_type='NSOperation*'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' type='@' name='operationQueue' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParentOperation:'>
<arg index='0' type='@' name='parentOperation' declared_type='NSOperation*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='savesToPersistentStore'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg index='0' type='B' name='deletesOrphanedObjects' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' type='@' name='fetchRequestBlocks' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg index='0' type='B' name='savesToPersistentStore' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillSaveMappingContextBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(NSManagedObjectContext *)'>
<arg type='@' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObjectID:'>
<arg index='0' type='@' name='targetObjectID' declared_type='NSManagedObjectID*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObjectID'>
<retval type='@' declared_type='NSManagedObjectID*'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg index='0' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:'>
<arg index='0' type='@' name='storePath' declared_type='NSString*'/>
<arg index='1' type='@' name='seedPath' declared_type='NSString*'/>
<arg index='2' type='@' name='nilOrConfigurationName' declared_type='NSString*'/>
<arg index='3' type='@' name='nilOrOptions' declared_type='NSDictionary*'/>
<arg index='4' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='NSPersistentStore*'/>
</method>
<method selector='createManagedObjectContexts'>
<retval type='v' declared_type='void'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultStore' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg index='0' type='@' name='managedObjectModel' declared_type='NSManagedObjectModel*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg index='0' type='@' name='persistentStoreCoordinator' declared_type='NSPersistentStoreCoordinator*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='NSManagedObjectModel*'/>
</method>
<method selector='migratePersistentStoreOfType:atURL:toModelAtURL:error:configuringModelsWithBlock:' class_method='true'>
<arg index='0' type='@' name='storeType' declared_type='NSString*'/>
<arg index='1' type='@' name='storeURL' declared_type='NSURL*'/>
<arg index='2' type='@' name='destinationModelURL' declared_type='NSURL*'/>
<arg index='3' type='^@' name='error' declared_type='NSError**'/>
<arg index='4' type='@?' name='block' function_pointer='true' declared_type='void (^)(NSManagedObjectModel *, NSURL *)'>
<arg type='@' declared_type='NSManagedObjectModel*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg index='0' type='I' name='concurrencyType' declared_type='NSManagedObjectContextConcurrencyType' type64='Q'/>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:tracksChanges:'>
<arg index='0' type='I' name='concurrencyType' declared_type='NSManagedObjectContextConcurrencyType' type64='Q'/>
<arg index='1' type='B' name='tracksChanges' declared_type='BOOL'/>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval type='@' declared_type='NSPersistentStoreCoordinator*'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='resetPersistentStores:'>
<arg index='0' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDefaultStore:' class_method='true'>
<arg index='0' type='@' name='managedObjectStore' declared_type='RKManagedObjectStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg index='0' type='@' name='mainQueueManagedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' type='@' name='managedObjectModel' declared_type='NSManagedObjectModel*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg index='0' type='@' name='persistentStoreCoordinator' declared_type='NSPersistentStoreCoordinator*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg index='0' type='@' name='persistentStoreManagedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='execute:'>
<arg index='0' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRepresentation:mappingsDictionary:'>
<arg index='0' type='@' name='representation' declared_type='id'/>
<arg index='1' type='@' name='mappingsDictionary' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapRepresentation:atKeyPath:usingMapping:'>
<arg index='0' type='@' name='mappableObject' declared_type='id'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='2' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapRepresentation:toObject:atKeyPath:usingMapping:metadata:'>
<arg index='0' type='@' name='mappableObject' declared_type='id'/>
<arg index='1' type='@' name='destinationObject' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='mapping' declared_type='RKMapping*'/>
<arg index='4' type='@' name='metadata' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mapRepresentations:atKeyPath:usingMapping:'>
<arg index='0' type='@' name='mappableObjects' declared_type='NSArray*'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='2' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='mappingInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mappingOperationDataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='mappingsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='metadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='objectForRepresentation:withMapping:'>
<arg index='0' type='@' name='representation' declared_type='id'/>
<arg index='1' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='representation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg index='0' type='@' name='mappingOperationDataSource' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' type='@' name='mappingResult' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingsDictionary:'>
<arg index='0' type='@' name='mappingsDictionary' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMetadata:'>
<arg index='0' type='@' name='metadata' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentation:'>
<arg index='0' type='@' name='representation' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' type='@' name='targetObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' type='@' name='otherMapping' declared_type='RKMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg index='0' type='B' name='forceCollectionMapping' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMappingInfo'>
<method selector='dynamicMapping'>
<retval type='@' declared_type='RKDynamicMapping*'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg index='0' type='@' name='key' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='propertyMappings'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='relationshipMappingInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='setDynamicMapping:'>
<arg index='0' type='@' name='dynamicMapping' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destinationObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg index='0' type='@' name='sourceObject' declared_type='id'/>
<arg index='1' type='@' name='destinationObject' declared_type='id'/>
<arg index='2' type='@' name='objectOrDynamicMapping' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='mappingInfo'>
<retval type='@' declared_type='RKMappingInfo*'/>
</method>
<method selector='metadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='performMapping:'>
<arg index='0' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDataSource:'>
<arg index='0' type='@' name='dataSource' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' name='delegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestinationObject:'>
<arg index='0' type='@' name='destinationObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMetadata:'>
<arg index='0' type='@' name='metadata' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceObject:'>
<arg index='0' type='@' name='sourceObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='count'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='dictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' type='@' name='dictionary' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='set'>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval type='@' declared_type='AFHTTPClient*'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='NSFetchRequest *(^)(NSURL *)'>
<arg type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSFetchRequest*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRequestDescriptor:'>
<arg index='0' type='@' name='requestDescriptor' declared_type='RKRequestDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg index='0' type='@' name='requestDescriptors' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addResponseDescriptor:'>
<arg index='0' type='@' name='responseDescriptor' declared_type='RKResponseDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg index='0' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='2' type='@' name='path' declared_type='NSString*'/>
<arg index='3' type='@' name='parameters' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg index='0' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='1' type='@' name='pathPattern' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultHeaders'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg index='0' type='@' name='operations' declared_type='NSArray*'/>
<arg index='1' type='@?' name='progress' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='completion' function_pointer='true' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg index='0' type='@' name='route' declared_type='RKRoute*'/>
<arg index='1' type='@' name='objects' declared_type='NSArray*'/>
<arg index='2' type='@?' name='progress' function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)'>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='completion' function_pointer='true' declared_type='void (^)(NSArray *)'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg index='0' type='@' name='objectRequestOperation' declared_type='RKObjectRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueuedObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg index='0' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='1' type='@' name='pathPattern' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<arg index='1' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg index='0' type='@' name='relationshipName' declared_type='NSString*'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg index='0' type='@' name='routeName' declared_type='NSString*'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithHTTPClient:'>
<arg index='0' type='@' name='client' declared_type='AFHTTPClient*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<arg index='1' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='RKManagedObjectRequestOperation*'/>
</method>
<method selector='managedObjectStore'>
<retval type='@' declared_type='RKManagedObjectStore*'/>
</method>
<method selector='managerWithBaseURL:' class_method='true'>
<arg index='0' type='@' name='baseURL' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='2' type='@' name='path' declared_type='NSString*'/>
<arg index='3' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='4' type='@?' name='block' function_pointer='true' declared_type='void (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<arg index='1' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='2' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='RKObjectRequestOperation*'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='paginationMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='paginatorWithPathPattern:'>
<arg index='0' type='@' name='pathPattern' declared_type='NSString*'/>
<retval type='@' declared_type='RKPaginator*'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='path' declared_type='NSString*'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<arg index='3' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='4' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerRequestOperationClass:'>
<arg index='0' type='#' name='operationClass' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg index='0' type='@' name='requestDescriptor' declared_type='RKRequestDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg index='0' type='@' name='responseDescriptor' declared_type='RKResponseDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='2' type='@' name='path' declared_type='NSString*'/>
<arg index='3' type='@' name='parameters' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg index='0' type='@' name='relationship' declared_type='NSString*'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='3' type='@' name='parameters' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg index='0' type='@' name='routeName' declared_type='NSString*'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='@' name='parameters' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSMutableURLRequest*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='router'>
<retval type='@' declared_type='RKRouter*'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg index='0' type='@' name='MIMEType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPClient:'>
<arg index='0' type='@' name='HTTPClient' declared_type='AFHTTPClient*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectStore:'>
<arg index='0' type='@' name='managedObjectStore' declared_type='RKManagedObjectStore*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' type='@' name='operationQueue' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaginationMapping:'>
<arg index='0' type='@' name='paginationMapping' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg index='0' type='@' name='requestSerializationMIMEType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRouter:'>
<arg index='0' type='@' name='router' declared_type='RKRouter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSharedManager:' class_method='true'>
<arg index='0' type='@' name='manager' declared_type='RKObjectManager*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='unregisterRequestOperationClass:'>
<arg index='0' type='#' name='operationClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingFromKeyOfRepresentationToAttribute:'>
<arg index='0' type='@' name='attributeName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingToKeyOfRepresentationFromAttribute:'>
<arg index='0' type='@' name='attributeName' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingsFromArray:'>
<arg index='0' type='@' name='arrayOfAttributeNamesOrMappings' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg index='0' type='@' name='keyPathToAttributeNames' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addDefaultDateFormatter:' class_method='true'>
<arg index='0' type='@' name='dateFormatter' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addDefaultDateFormatterForString:inTimeZone:' class_method='true'>
<arg index='0' type='@' name='dateFormatString' declared_type='NSString*'/>
<arg index='1' type='@' name='nilOrTimeZone' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPropertyMapping:'>
<arg index='0' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg index='0' type='@' name='arrayOfPropertyMappings' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRelationshipMappingWithSourceKeyPath:mapping:'>
<arg index='0' type='@' name='sourceKeyPath' declared_type='NSString*'/>
<arg index='1' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='assignsDefaultValueForMissingAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='assignsNilForMissingRelationships'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributeMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForKeyPath:'>
<arg index='0' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForProperty:'>
<arg index='0' type='@' name='propertyName' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='dateFormatters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultDateFormatters' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg index='0' type='@' name='attributeName' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithClass:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inverseMapping'>
<retval type='@' declared_type='id'/>
</method>
<method selector='inverseMappingWithPropertyMappingsPassingTest:'>
<arg index='0' type='@?' name='predicate' function_pointer='true' declared_type='BOOL (^)(RKPropertyMapping *)'>
<arg type='@' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingForClass:' class_method='true'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg index='0' type='@' name='destinationKeyPath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg index='0' type='@' name='sourceKeyPath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='performKeyValueValidation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performsKeyValueValidation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredDateFormatter' class_method='true'>
<retval type='@' declared_type='NSFormatter*'/>
</method>
<method selector='preferredDateFormatter'>
<retval type='@' declared_type='NSFormatter*'/>
</method>
<method selector='propertyMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='relationshipMappings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removePropertyMapping:'>
<arg index='0' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestMapping' class_method='true'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='setAssignsDefaultValueForMissingAttributes:'>
<arg index='0' type='B' name='assignsDefaultValueForMissingAttributes' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAssignsNilForMissingRelationships:'>
<arg index='0' type='B' name='assignsNilForMissingRelationships' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateFormatters:'>
<arg index='0' type='@' name='dateFormatters' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultDateFormatters:' class_method='true'>
<arg index='0' type='@' name='dateFormatters' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultSourceToDestinationKeyTransformationBlock:' class_method='true'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='NSString *(^)(RKObjectMapping *, NSString *)'>
<arg type='@' declared_type='RKObjectMapping*'/>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg index='0' type='B' name='performKeyValueValidation' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerformsKeyValueValidation:'>
<arg index='0' type='B' name='performsKeyValueValidation' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredDateFormatter:' class_method='true'>
<arg index='0' type='@' name='dateFormatter' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg index='0' type='@' name='preferredDateFormatter' declared_type='NSFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPropertyMappings:'>
<arg index='0' type='@' name='propertyMappings' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg index='0' type='B' name='setDefaultValueForMissingAttributes' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg index='0' type='B' name='setNilForMissingRelationships' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceToDestinationKeyTransformationBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='NSString *(^)(RKObjectMapping *, NSString *)'>
<arg type='@' declared_type='RKObjectMapping*'/>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueTransformer:'>
<arg index='0' type='@' name='valueTransformer' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='valueTransformer'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKObjectMappingMatcher'>
<method selector='matcherWithKeyPath:expectedValue:objectMapping:' class_method='true'>
<arg index='0' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='1' type='@' name='expectedValue' declared_type='id'/>
<arg index='2' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matcherWithPredicate:objectMapping:' class_method='true'>
<arg index='0' type='@' name='predicate' declared_type='NSPredicate*'/>
<arg index='1' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matches:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method selector='parametersWithObject:requestDescriptor:error:' class_method='true'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@' name='requestDescriptor' declared_type='RKRequestDescriptor*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='HTTPRequestOperation'>
<retval type='@' declared_type='RKHTTPRequestOperation*'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='failureCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='initWithHTTPRequestOperation:responseDescriptors:'>
<arg index='0' type='@' name='requestOperation' declared_type='RKHTTPRequestOperation*'/>
<arg index='1' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<arg index='1' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingMetadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='performMappingOnResponseWithCompletionBlock:'>
<arg index='0' type='@?' name='completionBlock' function_pointer='true' declared_type='void (^)(RKMappingResult *, NSError *)'>
<arg type='@' declared_type='RKMappingResult*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='responseMappingQueue' class_method='true'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKObjectRequestOperation *, NSError *)'>
<arg type='@' declared_type='RKObjectRequestOperation*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' type='@' name='failureCallbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPRequestOperation:'>
<arg index='0' type='@' name='HTTPRequestOperation' declared_type='RKHTTPRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingMetadata:'>
<arg index='0' type='@' name='mappingMetadata' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' type='@' name='mappingResult' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' type='@' name='successCallbackQueue' declared_type='dispatch_queue_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' type='@' name='targetObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='id (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='successCallbackQueue'>
<retval type='@' declared_type='dispatch_queue_t'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='willFinish'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKPaginator'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentPage'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='fetchRequestBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='hasNextPage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasObjectCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPageCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPreviousPage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRequest:paginationMapping:responseDescriptors:'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<arg index='1' type='@' name='paginationMapping' declared_type='RKObjectMapping*'/>
<arg index='2' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadNextPage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadPage:'>
<arg index='0' type='I' name='pageNumber' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadPreviousPage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='objectCount'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='objectRequestOperation'>
<retval type='@' declared_type='RKObjectRequestOperation*'/>
</method>
<method selector='offset'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='operationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='pageCount'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='paginationMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='patternURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='perPage'>
<retval type='I' declared_type='NSUInteger' type64='Q'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' type='@?' name='success' function_pointer='true' declared_type='void (^)(RKPaginator *, NSArray *, NSUInteger)'>
<arg type='@' declared_type='RKPaginator*'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='I' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' type='@?' name='failure' function_pointer='true' declared_type='void (^)(RKPaginator *, NSError *)'>
<arg type='@' declared_type='RKPaginator*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' type='@' name='fetchRequestBlocks' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPOperationClass:'>
<arg index='0' type='#' name='operationClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' type='@' name='mappingResult' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectRequestOperation:'>
<arg index='0' type='@' name='objectRequestOperation' declared_type='RKObjectRequestOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' type='@' name='operationQueue' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaginationMapping:'>
<arg index='0' type='@' name='paginationMapping' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerPage:'>
<arg index='0' type='I' name='perPage' declared_type='NSUInteger' type64='Q'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' type='@' name='pathString' declared_type='NSString*'/>
<arg index='1' type='B' name='shouldTokenize' declared_type='BOOL'/>
<arg index='2' type='^@' name='arguments' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' type='@' name='patternString' declared_type='NSString*'/>
<arg index='1' type='B' name='shouldTokenize' declared_type='BOOL'/>
<arg index='2' type='^@' name='arguments' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathFromObject:addingEscapes:interpolatedParameters:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='B' name='addEscapes' declared_type='BOOL'/>
<arg index='2' type='^@' name='interpolatedParameters' declared_type='NSDictionary**'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathMatcherWithPath:' class_method='true'>
<arg index='0' type='@' name='pathString' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pathMatcherWithPattern:' class_method='true'>
<arg index='0' type='@' name='patternString' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='queryParameters'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='classForPropertyNamed:ofClass:isPrimitive:'>
<arg index='0' type='@' name='propertyName' declared_type='NSString*'/>
<arg index='1' type='#' name='objectClass' declared_type='Class'/>
<arg index='2' type='^B' name='isPrimitive' declared_type='BOOL*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForPropertyNamed:ofEntity:'>
<arg index='0' type='@' name='propertyName' declared_type='NSString*'/>
<arg index='1' type='@' name='entity' declared_type='NSEntityDescription*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='propertyInspectionForClass:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='propertyInspectionForEntity:'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='sharedInspector' class_method='true'>
<retval type='@' declared_type='RKPropertyInspector*'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' type='@' name='otherMapping' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectMapping'>
<retval type='@' declared_type='RKObjectMapping*'/>
</method>
<method selector='propertyValueClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPropertyValueClass:'>
<arg index='0' type='#' name='propertyValueClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueTransformer:'>
<arg index='0' type='@' name='valueTransformer' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='valueTransformer'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectedValuesByRelationshipName'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='connections'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithManagedObject:connections:managedObjectCache:'>
<arg index='0' type='@' name='managedObject' declared_type='NSManagedObject*'/>
<arg index='1' type='@' name='connections' declared_type='NSArray*'/>
<arg index='2' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='managedObject'>
<retval type='@' declared_type='NSManagedObject*'/>
</method>
<method selector='managedObjectCache'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setConnectedValuesByRelationshipName:'>
<arg index='0' type='@' name='connectedValuesByRelationshipName' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConnectionBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(RKRelationshipConnectionOperation *, RKConnectionDescription *, id)'>
<arg type='@' declared_type='RKRelationshipConnectionOperation*'/>
<arg type='@' declared_type='RKConnectionDescription*'/>
<arg type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConnections:'>
<arg index='0' type='@' name='connections' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObject:'>
<arg index='0' type='@' name='managedObject' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' type='@' name='managedObjectCache' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='assignmentPolicy'>
<retval type='i' declared_type='RKAssignmentPolicy'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:' class_method='true'>
<arg index='0' type='@' name='sourceKeyPath' declared_type='NSString*'/>
<arg index='1' type='@' name='destinationKeyPath' declared_type='NSString*'/>
<arg index='2' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAssignmentPolicy:'>
<arg index='0' type='i' name='assignmentPolicy' declared_type='RKAssignmentPolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='isEqualToRequestDescriptor:'>
<arg index='0' type='@' name='otherDescriptor' declared_type='RKRequestDescriptor*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='method'>
<retval type='i' declared_type='RKRequestMethod' type64='q'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:' class_method='true'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<arg index='1' type='#' name='objectClass' declared_type='Class'/>
<arg index='2' type='@' name='rootKeyPath' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:method:' class_method='true'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<arg index='1' type='#' name='objectClass' declared_type='Class'/>
<arg index='2' type='@' name='rootKeyPath' declared_type='NSString*'/>
<arg index='3' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setMapping:'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='isEqualToResponseDescriptor:'>
<arg index='0' type='@' name='otherDescriptor' declared_type='RKResponseDescriptor*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mapping'>
<retval type='@' declared_type='RKMapping*'/>
</method>
<method selector='matchesPath:'>
<arg index='0' type='@' name='path' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesResponse:'>
<arg index='0' type='@' name='response' declared_type='NSHTTPURLResponse*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesURL:'>
<arg index='0' type='@' name='URL' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='method'>
<retval type='i' declared_type='RKRequestMethod' type64='q'/>
</method>
<method selector='pathPattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='responseDescriptorWithMapping:method:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<arg index='2' type='@' name='pathPattern' declared_type='NSString*'/>
<arg index='3' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='4' type='@' name='statusCodes' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<arg index='1' type='@' name='pathPattern' declared_type='NSString*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='statusCodes' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' type='@' name='baseURL' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapping:'>
<arg index='0' type='@' name='mapping' declared_type='RKMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statusCodes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='initWithRequest:response:data:responseDescriptors:'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<arg index='1' type='@' name='response' declared_type='NSHTTPURLResponse*'/>
<arg index='2' type='@' name='data' declared_type='NSData*'/>
<arg index='3' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mapperDelegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mappingMetadata'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='mappingResult'>
<retval type='@' declared_type='RKMappingResult*'/>
</method>
<method selector='matchingResponseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='registerMappingOperationDataSourceClass:' class_method='true'>
<arg index='0' type='#' name='dataSourceClass' declared_type='Class*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSHTTPURLResponse*'/>
</method>
<method selector='responseDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='responseMappingsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='setData:'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidFinishMappingBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(RKMappingResult *, NSError *)'>
<arg type='@' declared_type='RKMappingResult*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setError:'>
<arg index='0' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMapperDelegate:'>
<arg index='0' type='@' name='mapperDelegate' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingMetadata:'>
<arg index='0' type='@' name='mappingMetadata' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' type='@' name='mappingResult' declared_type='RKMappingResult*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatchingResponseDescriptors:'>
<arg index='0' type='@' name='matchingResponseDescriptors' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequest:'>
<arg index='0' type='@' name='request' declared_type='NSURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponse:'>
<arg index='0' type='@' name='response' declared_type='NSHTTPURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' type='@' name='responseDescriptors' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg index='0' type='@' name='responseMappingsDictionary' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' type='@' name='targetObject' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg index='0' type='B' name='treatsEmptyResponseAsSuccess' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='id (^)(id)'>
<arg type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNamedRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRelationshipRoute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='method'>
<retval type='i' declared_type='RKRequestMethod' type64='q'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='pathPattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='routeWithClass:pathPattern:method:' class_method='true'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<arg index='1' type='@' name='pathPattern' declared_type='NSString*'/>
<arg index='2' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeWithName:pathPattern:method:' class_method='true'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<arg index='1' type='@' name='pathPattern' declared_type='NSString*'/>
<arg index='2' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeWithRelationshipName:objectClass:pathPattern:method:' class_method='true'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<arg index='1' type='#' name='objectClass' declared_type='Class'/>
<arg index='2' type='@' name='pathPattern' declared_type='NSString*'/>
<arg index='3' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathPattern:'>
<arg index='0' type='@' name='pathPattern' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldEscapePath:'>
<arg index='0' type='B' name='shouldEscapePath' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldEscapePath'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg index='0' type='@' name='route' declared_type='RKRoute*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRoutes:'>
<arg index='0' type='@' name='routes' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsRoute:'>
<arg index='0' type='@' name='route' declared_type='RKRoute*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='namedRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='relationshipRoutes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeRoute:'>
<arg index='0' type='@' name='route' declared_type='RKRoute*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='routeForClass:method:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForName:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForObject:method:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg index='0' type='@' name='relationship' declared_type='NSString*'/>
<arg index='1' type='#' name='objectClass' declared_type='Class'/>
<arg index='2' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='RKRoute*'/>
</method>
<method selector='routesForClass:'>
<arg index='0' type='#' name='objectClass' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='routesForObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg index='0' type='@' name='relationshipName' declared_type='NSString*'/>
<arg index='1' type='#' name='objectClass' declared_type='Class'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg index='0' type='@' name='relationshipName' declared_type='NSString*'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='i' name='method' declared_type='RKRequestMethod' type64='q'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg index='0' type='@' name='routeName' declared_type='NSString*'/>
<arg index='1' type='^i' name='method' type_modifier='o' declared_type='RKRequestMethod*' type64='^q'/>
<arg index='2' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLWithRoute:object:'>
<arg index='0' type='@' name='route' declared_type='RKRoute*'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' type='@' name='baseURL' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='routeSet'>
<retval type='@' declared_type='RKRouteSet*'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' type='@' name='baseURL' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRouteSet:'>
<arg index='0' type='@' name='routeSet' declared_type='RKRouteSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='RKStringTokenizer'>
<method selector='setStopWords:'>
<arg index='0' type='@' name='stopWords' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopWords'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='tokenize:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='RKValueTransformer'>
<method selector='arrayToOrderedSetValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayToSetValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalNumberToNumberValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalNumberToStringValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultValueTransformer' class_method='true'>
<retval type='@' declared_type='RKCompoundValueTransformer*'/>
</method>
<method selector='identityValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='iso8601TimestampToDateValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyOfDictionaryValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyedArchivingValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='nullValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberToStringValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectToCollectionValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDefaultValueTransformer:' class_method='true'>
<arg index='0' type='@' name='compoundValueTransformer' declared_type='RKCompoundValueTransformer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringToURLValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeIntervalSince1970ToDateValueTransformer' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg index='0' type='@' name='sourceString' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='patternWithString:' class_method='true'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg index='0' type=':' name='selector' declared_type='SEL'/>
<arg index='1' type='@' name='object' declared_type='id'/>
<arg index='2' type='@' name='sourceString' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringFromObject:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='@?' name='block' function_pointer='true' declared_type='NSString *(^)(NSString *)'>
<arg type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringMatches:'>
<arg index='0' type='@' name='string' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='TKEvent'>
<method selector='destinationState'>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='eventWithName:transitioningFromStates:toState:' class_method='true'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<arg index='1' type='@' name='sourceStates' declared_type='NSArray*'/>
<arg index='2' type='@' name='destinationState' declared_type='TKState*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDestinationState:'>
<arg index='0' type='@' name='destinationState' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidFireEventBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(TKEvent *, TKStateMachine *)'>
<arg type='@' declared_type='TKEvent*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldFireEventBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='BOOL (^)(TKEvent *, TKStateMachine *)'>
<arg type='@' declared_type='TKEvent*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillFireEventBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(TKEvent *, TKStateMachine *)'>
<arg type='@' declared_type='TKEvent*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceStates'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='TKState'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDidEnterStateBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(TKState *, TKStateMachine *)'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDidExitStateBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(TKState *, TKStateMachine *)'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillEnterStateBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(TKState *, TKStateMachine *)'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWillExitStateBlock:'>
<arg index='0' type='@?' name='block' function_pointer='true' declared_type='void (^)(TKState *, TKStateMachine *)'>
<arg type='@' declared_type='TKState*'/>
<arg type='@' declared_type='TKStateMachine*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='stateWithName:' class_method='true'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='TKStateMachine'>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='addEvent:'>
<arg index='0' type='@' name='event' declared_type='TKEvent*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addEvents:'>
<arg index='0' type='@' name='arrayOfEvents' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addState:'>
<arg index='0' type='@' name='state' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addStates:'>
<arg index='0' type='@' name='arrayOfStates' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canFireEvent:'>
<arg index='0' type='@' name='eventOrEventName' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentState'>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='eventNamed:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='@' declared_type='TKEvent*'/>
</method>
<method selector='events'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='fireEvent:error:'>
<arg index='0' type='@' name='eventOrEventName' declared_type='id'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initialState'>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isInState:'>
<arg index='0' type='@' name='stateOrStateName' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setCurrentState:'>
<arg index='0' type='@' name='currentState' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialState:'>
<arg index='0' type='@' name='initialState' declared_type='TKState*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stateNamed:'>
<arg index='0' type='@' name='name' declared_type='NSString*'/>
<retval type='@' declared_type='TKState*'/>
</method>
<method selector='states'>
<retval type='@' declared_type='NSSet*'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:'>
<arg index='0' type='@' name='url' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg index='0' type='@' name='url' declared_type='NSURL*'/>
<arg index='1' type='@' name='placeholderImage' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg index='0' type='@' name='urlRequest' declared_type='NSURLRequest*'/>
<arg index='1' type='@' name='placeholderImage' declared_type='UIImage*'/>
<arg index='2' type='@?' name='success' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='UIImage*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='3' type='@?' name='failure' function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)'>
<arg type='@' declared_type='NSURLRequest*'/>
<arg type='@' declared_type='NSHTTPURLResponse*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='UIViewController'>
<method selector='slideMenuController'>
<retval type='@' declared_type='NVSlideMenuController*'/>
</method>
<method selector='viewDidSlideIn:inSlideMenuController:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidSlideOut:inSlideMenuController:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillSlideIn:inSlideMenuController:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillSlideOut:inSlideMenuController:'>
<arg index='0' type='B' name='animated' declared_type='BOOL'/>
<arg index='1' type='@' name='slideMenuController' declared_type='NVSlideMenuController*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' selector='appendPartWithFileData:name:fileName:mimeType:' type64='v48@0:8@16@24@32@40'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='@' name='fileName' declared_type='NSString*'/>
<arg index='3' type='@' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B20@0:4@8@12^@16' selector='appendPartWithFileURL:name:error:' type64='B40@0:8@16@24^@32'>
<arg index='0' type='@' name='fileURL' declared_type='NSURL*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B28@0:4@8@12@16@20^@24' selector='appendPartWithFileURL:name:fileName:mimeType:error:' type64='B56@0:8@16@24@32@40^@48'>
<arg index='0' type='@' name='fileURL' declared_type='NSURL*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='@' name='fileName' declared_type='NSString*'/>
<arg index='3' type='@' name='mimeType' declared_type='NSString*'/>
<arg index='4' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithFormData:name:' type64='v32@0:8@16@24'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithHeaders:body:' type64='v32@0:8@16@24'>
<arg index='0' type='@' name='headers' declared_type='NSDictionary*'/>
<arg index='1' type='@' name='body' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v32@0:4@8@12@16Q20@28' selector='appendPartWithInputStream:name:fileName:length:mimeType:' type64='v56@0:8@16@24@32Q40@48'>
<arg index='0' type='@' name='inputStream' declared_type='NSInputStream*'/>
<arg index='1' type='@' name='name' declared_type='NSString*'/>
<arg index='2' type='@' name='fileName' declared_type='NSString*'/>
<arg index='3' type='Q' name='length' declared_type='unsigned long long'/>
<arg index='4' type='@' name='mimeType' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4I8d12' selector='throttleBandwidthWithPacketSize:delay:' type64='v32@0:8Q16d24'>
<arg index='0' type='I' name='numberOfBytes' declared_type='NSUInteger' type64='Q'/>
<arg index='1' type='d' name='delay' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method type='v12@0:4@8' selector='didCreateObject:' type64='v24@0:8@16'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='didDeleteObject:' type64='v24@0:8@16'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='didFetchObject:' type64='v24@0:8@16'>
<arg index='0' type='@' name='object' declared_type='NSManagedObject*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='@20@0:4@8@12@16' selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:' type64='@40@0:8@16@24@32'>
<arg index='0' type='@' name='entity' declared_type='NSEntityDescription*'/>
<arg index='1' type='@' name='attributeValues' declared_type='NSDictionary*'/>
<arg index='2' type='@' name='managedObjectContext' declared_type='NSManagedObjectContext*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method type='v24@0:4@8@12@16@20' selector='mapper:didFailMappingOperation:forKeyPath:withError:' type64='v48@0:8@16@24@32@40'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:' type64='v40@0:8@16@24@32'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='dictionaryOrArrayOfDictionaries' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFinishMappingOperation:forKeyPath:' type64='v40@0:8@16@24@32'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:' type64='v32@0:8@16@24'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:willStartMappingOperation:forKeyPath:' type64='v40@0:8@16@24@32'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<arg index='1' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='mapperDidCancelMapping:' type64='v24@0:8@16'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='mapperDidFinishMapping:' type64='v24@0:8@16'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='mapperWillStartMapping:' type64='v24@0:8@16'>
<arg index='0' type='@' name='mapper' declared_type='RKMapperOperation*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method type='B16@0:4@8^@12' selector='commitChangesForMappingOperation:error:' type64='B32@0:8@16^@24'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8@12^@16' selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:' type64='B40@0:8@16@24^@32'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='relationshipMapping' declared_type='RKRelationshipMapping*'/>
<arg index='2' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:' type64='@48@0:8@16@24@32@40'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='representation' declared_type='NSDictionary*'/>
<arg index='2' type='@' name='mapping' declared_type='RKObjectMapping*'/>
<arg index='3' type='@' name='relationshipMapping' declared_type='RKRelationshipMapping*'/>
<retval type='@' declared_type='id'/>
</method>
<method type='B12@0:4@8' selector='mappingOperationShouldSetUnchangedValues:' type64='B24@0:8@16'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B12@0:4@8' selector='mappingOperationShouldSkipPropertyMapping:' type64='B24@0:8@16'>
<arg index='0' type='@' name='mappingOperation' declared_type='RKMappingOperation*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didConnectRelationship:toValue:usingConnection:' type64='v48@0:8@16@24@32@40'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<arg index='2' type='@' name='value' declared_type='id'/>
<arg index='3' type='@' name='connection' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didFailToConnectRelationship:usingConnection:' type64='v40@0:8@16@24@32'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='relationship' declared_type='NSRelationshipDescription*'/>
<arg index='2' type='@' name='connection' declared_type='RKConnectionDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='mappingOperation:didFailWithError:' type64='v32@0:8@16@24'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='error' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didFindValue:forKeyPath:mapping:' type64='v48@0:8@16@24@32@40'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didNotFindValueForKeyPath:mapping:' type64='v40@0:8@16@24@32'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='2' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:' type64='v48@0:8@16@24@32@40'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:' type64='v40@0:8@16@24@32'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='objectMapping' declared_type='RKObjectMapping*'/>
<arg index='2' type='@' name='dynamicMapping' declared_type='RKDynamicMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didSetValue:forKeyPath:usingMapping:' type64='v48@0:8@16@24@32@40'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B24@0:4@8@12@16@20' selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:' type64='B48@0:8@16@24@32@40'>
<arg index='0' type='@' name='operation' declared_type='RKMappingOperation*'/>
<arg index='1' type='@' name='value' declared_type='id'/>
<arg index='2' type='@' name='keyPath' declared_type='NSString*'/>
<arg index='3' type='@' name='propertyMapping' declared_type='RKPropertyMapping*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method type='@16@0:4@8^@12' selector='dataFromObject:error:' type64='@32@0:8@16^@24' class_method='true'>
<arg index='0' type='@' name='object' declared_type='id'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method type='@16@0:4@8^@12' selector='objectFromData:error:' type64='@32@0:8@16^@24' class_method='true'>
<arg index='0' type='@' name='data' declared_type='NSData*'/>
<arg index='1' type='^@' name='error' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='RKValueTransforming'>
<method type='B24@0:4@8^@12#16^@20' selector='transformValue:toValue:ofClass:error:' type64='B48@0:8@16^@24#32^@40'>
<arg index='0' type='@' name='inputValue' declared_type='id'/>
<arg index='1' type='^@' name='outputValue' declared_type='id*'/>
<arg index='2' type='#' name='outputValueClass' declared_type='Class'/>
<arg index='3' type='^@' name='error' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4#8#12' selector='validateTransformationFromClass:toClass:' type64='B32@0:8#16#24'>
<arg index='0' type='#' name='inputValueClass' declared_type='Class'/>
<arg index='1' type='#' name='outputValueClass' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
</signatures>
