<?xml version='1.0'?>
<signatures version='1.0'>
<constant name='AFNetworkingErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingOperationDidFinishNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingOperationDidStartNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingOperationFailingURLRequestErrorKey' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingOperationFailingURLResponseErrorKey' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingReachabilityDidChangeNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='AFNetworkingReachabilityNotificationStatusItem' declared_type='NSString*' const='true' type='@'/>
<constant name='RKDetailedErrorsKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKEntityIdentificationAttributesUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='RKErrorNotificationErrorKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKMIMETypeErrorKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKMIMETypeFormURLEncoded' declared_type='NSString*' const='true' type='@'/>
<constant name='RKMIMETypeJSON' declared_type='NSString*' const='true' type='@'/>
<constant name='RKMIMETypeTextXML' declared_type='NSString*' const='true' type='@'/>
<constant name='RKMIMETypeXML' declared_type='NSString*' const='true' type='@'/>
<constant name='RKManagedObjectStoreDidResetPersistentStoresNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='RKMappingErrorKeyPathErrorKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKObjectMapperErrorObjectsKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKObjectRequestOperationDidFinishNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='RKObjectRequestOperationDidStartNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='RKObjectRequestOperationMappingDidFinishUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKObjectRequestOperationMappingDidStartUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKPropertyInspectionIsPrimitiveKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKPropertyInspectionKeyValueCodingClassKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKPropertyInspectionNameKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKResponseHasBeenMappedCacheUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKSQLitePersistentStoreSeedDatabasePathOption' declared_type='NSString*' const='true' type='@'/>
<constant name='RKValueTransformersDetailedErrorsKey' declared_type='NSString*' const='true' type='@'/>
<constant name='RKValueTransformersErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='TKErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='TKStateMachineDidChangeStateEventUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='TKStateMachineDidChangeStateNewStateUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='TKStateMachineDidChangeStateNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='TKStateMachineDidChangeStateOldStateUserInfoKey' declared_type='NSString*' const='true' type='@'/>
<constant name='TKStateMachineIsImmutableException' declared_type='NSString*' const='true' type='@'/>
<constant name='kAFUploadStream3GSuggestedDelay' declared_type='NSTimeInterval' const='true' type='d'/>
<constant name='kAFUploadStream3GSuggestedPacketSize' type64='Q' declared_type='NSUInteger' const='true' type='I'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_CustomBadge' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_NVSlideMenuController' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_CustomBadge' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_ISO8601DateFormatterValueTransformer' value='5'/>
<enum name='COCOAPODS_VERSION_MINOR_NVSlideMenuController' value='5'/>
<enum name='COCOAPODS_VERSION_MINOR_RKValueTransformers' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Core' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_CoreData' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Network' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_ObjectMapping' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_RestKit_Support' value='21'/>
<enum name='COCOAPODS_VERSION_MINOR_SOCKit' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_TransitionKit' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_PATCH_CustomBadge' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_ISO8601DateFormatterValueTransformer' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_NVSlideMenuController' value='5'/>
<enum name='COCOAPODS_VERSION_PATCH_RKValueTransformers' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Core' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_CoreData' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Network' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_ObjectMapping' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_RestKit_Support' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SOCKit' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_TransitionKit' value='1'/>
<enum name='NVSlideMenuControllerSlideFromLeftToRight' value='0'/>
<enum name='NVSlideMenuControllerSlideFromRightToLeft' value='1'/>
<enum name='RKAssignmentPolicyReplace' value='1'/>
<enum name='RKAssignmentPolicySet' value='0'/>
<enum name='RKAssignmentPolicyUnion' value='2'/>
<enum name='RKISO8601DateFormatCalendar' value='0'/>
<enum name='RKISO8601DateFormatOrdinal' value='1'/>
<enum name='RKISO8601DateFormatWeek' value='2'/>
<enum name='RKLogComponent' value='0'/>
<enum name='RKLogLevelCritical' value='1'/>
<enum name='RKLogLevelDebug' value='5'/>
<enum name='RKLogLevelDefault' value='3'/>
<enum name='RKLogLevelError' value='2'/>
<enum name='RKLogLevelInfo' value='4'/>
<enum name='RKLogLevelOff' value='0'/>
<enum name='RKLogLevelTrace' value='6'/>
<enum name='RKLogLevelWarning' value='3'/>
<enum name='RKMappingErrorFromMappingResult' value='1004'/>
<enum name='RKMappingErrorInvalidAssignmentPolicy' value='1010'/>
<enum name='RKMappingErrorMappingDeclined' value='1009'/>
<enum name='RKMappingErrorNilDestinationObject' value='1007'/>
<enum name='RKMappingErrorNilManagedObjectCache' value='1008'/>
<enum name='RKMappingErrorNotFound' value='1001'/>
<enum name='RKMappingErrorTypeMismatch' value='1002'/>
<enum name='RKMappingErrorUnableToDetermineMapping' value='1006'/>
<enum name='RKMappingErrorUnmappableRepresentation' value='1003'/>
<enum name='RKMappingErrorValidationFailure' value='1005'/>
<enum name='RKOperationCancelledError' value='2'/>
<enum name='RKReplaceAssignmentPolicy' value='1'/>
<enum name='RKRequestMethodAny' value='127'/>
<enum name='RKRequestMethodDELETE' value='8'/>
<enum name='RKRequestMethodGET' value='1'/>
<enum name='RKRequestMethodHEAD' value='16'/>
<enum name='RKRequestMethodOPTIONS' value='64'/>
<enum name='RKRequestMethodPATCH' value='32'/>
<enum name='RKRequestMethodPOST' value='2'/>
<enum name='RKRequestMethodPUT' value='4'/>
<enum name='RKSetAssignmentPolicy' value='0'/>
<enum name='RKStatusCodeClassClientError' value='400'/>
<enum name='RKStatusCodeClassInformational' value='100'/>
<enum name='RKStatusCodeClassRedirection' value='300'/>
<enum name='RKStatusCodeClassServerError' value='500'/>
<enum name='RKStatusCodeClassSuccessful' value='200'/>
<enum name='RKUnionAssignmentPolicy' value='2'/>
<enum name='RKUnsupportedMIMETypeError' value='1'/>
<enum name='RKValueTransformationErrorTransformationFailed' value='3002'/>
<enum name='RKValueTransformationErrorUnsupportedOutputClass' value='3001'/>
<enum name='RKValueTransformationErrorUntransformableInputValue' value='3000'/>
<enum name='RKlcl_cApp' value='0'/>
<enum name='RKlcl_cRestKit' value='1'/>
<enum name='RKlcl_cRestKitCoreData' value='2'/>
<enum name='RKlcl_cRestKitCoreDataCache' value='3'/>
<enum name='RKlcl_cRestKitNetwork' value='4'/>
<enum name='RKlcl_cRestKitNetworkCoreData' value='5'/>
<enum name='RKlcl_cRestKitObjectMapping' value='6'/>
<enum name='RKlcl_cRestKitSearch' value='7'/>
<enum name='RKlcl_cRestKitSupport' value='8'/>
<enum name='RKlcl_cRestKitTesting' value='9'/>
<enum name='RKlcl_cRestKitUI' value='10'/>
<enum name='RKlcl_vCritical' value='1'/>
<enum name='RKlcl_vDebug' value='5'/>
<enum name='RKlcl_vError' value='2'/>
<enum name='RKlcl_vInfo' value='4'/>
<enum name='RKlcl_vOff' value='0'/>
<enum name='RKlcl_vTrace' value='6'/>
<enum name='RKlcl_vWarning' value='3'/>
<enum name='TKInvalidTransitionError' value='1000'/>
<enum name='TKTransitionDeclinedError' value='1001'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg name='parameters' declared_type='NSDictionary*' type='@'/>
<arg name='encoding' type64='Q' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKArrayOfFetchRequestFromBlocksWithURL'>
<arg name='fetchRequestBlocks' declared_type='NSArray*' type='@'/>
<arg name='URL' declared_type='NSURL*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKCacheableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKCachesDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKClassIsCollection'>
<arg name='aClass' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDateFromString'>
<arg name='dateString' declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg name='dict1' declared_type='NSDictionary*' type='@'/>
<arg name='dict2' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg name='dictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg name='URLEncodedString' declared_type='NSString*' type='@'/>
<arg name='encoding' type64='Q' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg name='path' declared_type='NSString*' type='@'/>
<arg name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg name='mappingResult' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='NSError*' type='@'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg name='headers' declared_type='NSDictionary*' type='@'/>
<arg name='statusCode' type64='q' declared_type='NSInteger' type='i'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKIdentificationAttributesInferredFromEntity'>
<arg name='entity' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKIsSpecificRequestMethod'>
<arg name='method' type64='q' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKKeyValueCodingClassForObjCType'>
<arg name='type' declared_type='char*' const='true' type='*'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKKeyValueCodingClassFromPropertyAttributes'>
<arg name='attr' declared_type='char*' const='true' type='*'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogCoreDataError'>
<arg name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogValidationError'>
<arg name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg name='path' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMIMETypeInSet'>
<arg name='MIMEType' declared_type='NSString*' type='@'/>
<arg name='MIMETypes' declared_type='NSSet*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollection'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionOfCollections'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg name='object' declared_type='id' type='@'/>
<arg name='anotherObject' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg name='URL' declared_type='NSURL*' type='@'/>
<arg name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg name='pathPattern' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='encoding' type64='Q' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPropertyInspectorGetClassForPropertyAtKeyPathOfObject'>
<arg name='keyPath' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKPropertyInspectorIsPropertyAtKeyPathOfObjectPrimitive'>
<arg name='keyPath' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPropertyTypeFromAttributeString'>
<arg name='attributeString' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='encoding' type64='Q' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKRequestMethodFromString'>
<arg declared_type='NSString*' type='@'/>
<retval type64='q' declared_type='RKRequestMethod' type='i'/>
</function>
<function name='RKSetExcludeFromBackupAttributeForItemAtPath'>
<arg name='path' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg name='statusCodeClass' type64='Q' declared_type='RKStatusCodeClass' type='I'/>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg name='statusCodeClass' type64='Q' declared_type='RKStatusCodeClass' type='I'/>
<retval type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
</function>
<function name='RKStringFromDate'>
<arg name='date' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromNetworkReachabilityStatus'>
<arg name='networkReachabilityStatus' declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg name='method' type64='q' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromStatusCode'>
<arg name='statusCode' type64='q' declared_type='NSInteger' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg name='dictionary' declared_type='NSDictionary*' type='@'/>
<arg name='encoding' type64='Q' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg name='URL' declared_type='NSURL*' type='@'/>
<arg name='baseURL' declared_type='NSURL*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg name='component' declared_type='_RKlcl_component_t' type='I'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg name='header' declared_type='char*' const='true' type='*'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg name='identifier' declared_type='char*' const='true' type='*'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg name='name' declared_type='char*' const='true' type='*'/>
<arg name='level' declared_type='_RKlcl_level_t' type='I'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg name='string' declared_type='NSString*' type='@'/>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='success' function_pointer='true' index='1' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='2' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg name='method' index='0' declared_type='NSString*' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg name='url' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='defaultValueForHeader:'>
<arg name='header' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='parameters' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg name='operations' index='0' declared_type='NSArray*' type='@'/>
<arg name='progressBlock' function_pointer='true' index='1' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='completionBlock' function_pointer='true' index='2' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg name='urlRequests' index='0' declared_type='NSArray*' type='@'/>
<arg name='progressBlock' function_pointer='true' index='1' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='completionBlock' function_pointer='true' index='2' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg name='operation' index='0' declared_type='AFHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='parameters' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='url' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg name='method' index='0' declared_type='NSString*' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='block' function_pointer='true' index='3' declared_type='void (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='parameters' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='parameters' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='parameters' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg name='operationClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg name='method' index='0' declared_type='NSString*' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg name='allowsInvalidSSLCertificate' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg name='token' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg name='username' index='0' declared_type='NSString*' type='@'/>
<arg name='password' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:'>
<arg name='credential' index='0' declared_type='NSURLCredential*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg name='header' index='0' declared_type='NSString*' type='@'/>
<arg name='value' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg name='defaultSSLPinningMode' index='0' declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg name='parameterEncoding' index='0' declared_type='AFHTTPClientParameterEncoding' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(AFNetworkReachabilityStatus)' type='@?'>
<arg declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg name='stringEncoding' type64='Q' index='0' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval type64='Q' declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg name='operationClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg name='contentTypes' index='0' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg name='statusCodes' index='0' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' function_pointer='true' index='0' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='1' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg name='failureCallbackQueue' index='0' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg name='successCallbackQueue' index='0' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='automaticallyInflatesResponseImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='imageProcessingBlock' function_pointer='true' index='1' declared_type='UIImage *(^)(UIImage *)' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='success' function_pointer='true' index='1' declared_type='void (^)(UIImage *)' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg name='automaticallyInflatesResponseImage' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScale:'>
<arg name='imageScale' type64='d' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval type64='Q' declared_type='NSJSONReadingOptions' type='I'/>
</method>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='success' function_pointer='true' index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg name='JSONReadingOptions' type64='Q' index='0' declared_type='NSJSONReadingOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg name='enabled' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval type64='Q' declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='success' function_pointer='true' index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg name='propertyListReadOptions' type64='Q' index='0' declared_type='NSPropertyListReadOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval type64='Q' declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg name='allowsInvalidSSLCertificate' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg name='credential' index='0' declared_type='NSURLCredential*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(NSUInteger, long long, long long)' type='@?'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg name='inputStream' index='0' declared_type='NSInputStream*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg name='outputStream' index='0' declared_type='NSOutputStream*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg name='runLoopModes' index='0' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg name='SSLPinningMode' index='0' declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg name='handler' function_pointer='true' index='0' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg name='shouldUseCredentialStorage' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(NSUInteger, long long, long long)' type='@?'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='success' function_pointer='true' index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='CustomBadge'>
<method selector='autoBadgeSizeWithString:'>
<arg name='badgeString' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='badgeCornerRoundness'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='badgeFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='badgeFrameColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badgeInsetColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badgeScaleFactor'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='badgeShining'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='badgeText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='badgeTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='customBadgeWithString:' class_method='true'>
<arg name='badgeString' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='CustomBadge*' type='@'/>
</method>
<method selector='customBadgeWithString:withStringColor:withInsetColor:withBadgeFrame:withBadgeFrameColor:withScale:withShining:' class_method='true'>
<arg name='badgeString' index='0' declared_type='NSString*' type='@'/>
<arg name='stringColor' index='1' declared_type='UIColor*' type='@'/>
<arg name='insetColor' index='2' declared_type='UIColor*' type='@'/>
<arg name='badgeFrameYesNo' index='3' declared_type='BOOL' type='B'/>
<arg name='frameColor' index='4' declared_type='UIColor*' type='@'/>
<arg name='scale' type64='d' index='5' declared_type='CGFloat' type='f'/>
<arg name='shining' index='6' declared_type='BOOL' type='B'/>
<retval declared_type='CustomBadge*' type='@'/>
</method>
<method selector='setBadgeCornerRoundness:'>
<arg name='badgeCornerRoundness' type64='d' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeFrame:'>
<arg name='badgeFrame' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeFrameColor:'>
<arg name='badgeFrameColor' index='0' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeInsetColor:'>
<arg name='badgeInsetColor' index='0' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeScaleFactor:'>
<arg name='badgeScaleFactor' type64='d' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeShining:'>
<arg name='badgeShining' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeText:'>
<arg name='badgeText' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeTextColor:'>
<arg name='badgeTextColor' index='0' declared_type='UIColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNew'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg name='entityName' index='0' declared_type='NSString*' type='@'/>
<arg name='predicate' index='1' declared_type='NSPredicate*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg name='entityName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToPersistentStore:'>
<arg name='error' index='0' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='fileName' index='2' declared_type='NSString*' type='@'/>
<arg name='mimeType' index='3' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg name='fileURL' index='0' declared_type='NSURL*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg name='fileURL' index='0' declared_type='NSURL*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='fileName' index='2' declared_type='NSString*' type='@'/>
<arg name='mimeType' index='3' declared_type='NSString*' type='@'/>
<arg name='error' index='4' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg name='headers' index='0' declared_type='NSDictionary*' type='@'/>
<arg name='body' index='1' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg name='inputStream' index='0' declared_type='NSInputStream*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='fileName' index='2' declared_type='NSString*' type='@'/>
<arg name='length' index='3' declared_type='unsigned long long' type='Q'/>
<arg name='mimeType' index='4' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitChangesForMappingOperation:error:'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataFromObject:error:' class_method='true'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='didCreateObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeValues' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='managedObjectContext' index='2' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='mappingOperation' index='1' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='error' index='3' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='dictionaryOrArrayOfDictionaries' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='mappingOperation' index='1' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='mappingOperation' index='1' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidCancelMapping:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='relationshipMapping' index='1' declared_type='RKRelationshipMapping*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='relationship' index='1' declared_type='NSRelationshipDescription*' type='@'/>
<arg name='value' index='2' declared_type='id' type='@'/>
<arg name='connection' index='3' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='relationship' index='1' declared_type='NSRelationshipDescription*' type='@'/>
<arg name='connection' index='2' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='error' index='1' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='2' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='objectMapping' index='1' declared_type='RKObjectMapping*' type='@'/>
<arg name='dynamicMapping' index='2' declared_type='RKDynamicMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='representation' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='mapping' index='2' declared_type='RKObjectMapping*' type='@'/>
<arg name='relationshipMapping' index='3' declared_type='RKRelationshipMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectFromData:error:' class_method='true'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg name='numberOfBytes' type64='Q' index='0' declared_type='NSUInteger' type='I'/>
<arg name='delay' index='1' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformValue:toValue:ofClass:error:'>
<arg name='inputValue' index='0' declared_type='id' type='@'/>
<arg name='outputValue' index='1' declared_type='id*' type='^@'/>
<arg name='outputValueClass' index='2' declared_type='Class' type='#'/>
<arg name='error' index='3' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateTransformationFromClass:toClass:'>
<arg name='inputValueClass' index='0' declared_type='Class' type='#'/>
<arg name='outputValueClass' index='1' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NVSlideMenuController'>
<method selector='autoAdjustMenuWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bounceWhenNavigating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeMenuAnimated:completion:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeMenuBehindContentViewController:animated:bounce:completion:'>
<arg name='contentViewController' index='0' declared_type='UIViewController*' type='@'/>
<arg name='animated' index='1' declared_type='BOOL' type='B'/>
<arg name='bounce' index='2' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='3' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeMenuBehindContentViewController:animated:completion:'>
<arg name='contentViewController' index='0' declared_type='UIViewController*' type='@'/>
<arg name='animated' index='1' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='2' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='contentViewWidthWhenMenuIsOpen'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='hideContentViewControllerAnimated:completion:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithMenuViewController:andContentViewController:'>
<arg name='menuViewController' index='0' declared_type='UIViewController*' type='@'/>
<arg name='contentViewController' index='1' declared_type='UIViewController*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isContentViewHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isMenuOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='menuViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='menuWidth'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='openMenuAnimated:completion:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='panEnabledWhenSlideMenuIsHidden'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='panGestureEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='partiallyShowContentViewControllerAnimated:completion:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAutoAdjustMenuWidth:'>
<arg name='autoAdjustMenuWidth' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounceWhenNavigating:'>
<arg name='bounceWhenNavigating' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewController:animated:completion:'>
<arg name='contentViewController' index='0' declared_type='UIViewController*' type='@'/>
<arg name='animated' index='1' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='2' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentViewWidthWhenMenuIsOpen:'>
<arg name='contentViewWidthWhenMenuIsOpen' type64='d' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenuWidth:'>
<arg name='menuWidth' type64='d' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanEnabledWhenSlideMenuIsHidden:'>
<arg name='panEnabledWhenSlideMenuIsHidden' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPanGestureEnabled:'>
<arg name='panGestureEnabled' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowShadowOnContentView:'>
<arg name='showShadowOnContentView' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSlideDirection:'>
<arg name='slideDirection' type64='Q' index='0' declared_type='NVSlideMenuControllerSlideDirection' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSlideDirection:animated:'>
<arg name='slideDirection' type64='Q' index='0' declared_type='NVSlideMenuControllerSlideDirection' type='I'/>
<arg name='animated' index='1' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showContentViewControllerAnimated:completion:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showMenuAnimated:completion:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(BOOL)' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showShadowOnContentView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='slideDirection'>
<retval type64='Q' declared_type='NVSlideMenuControllerSlideDirection' type='I'/>
</method>
<method selector='toggleMenuAnimated:'>
<arg name='sender' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method selector='attributeMappingFromKeyPath:toKeyPath:' class_method='true'>
<arg name='sourceKeyPath' index='0' declared_type='NSString*' type='@'/>
<arg name='destinationKeyPath' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKBlockValueTransformer'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueTransformerWithValidationBlock:transformationBlock:' class_method='true'>
<arg name='validationBlock' function_pointer='true' index='0' declared_type='BOOL (^)(Class, Class)' type='@?'>
<arg declared_type='Class' type='#'/>
<arg declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<arg name='transformationBlock' function_pointer='true' index='1' declared_type='BOOL (^)(id, id *, Class, NSError **)' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id*' type='^@'/>
<arg declared_type='Class' type='#'/>
<arg declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKCompoundValueTransformer'>
<method selector='addValueTransformer:'>
<arg name='valueTransformer' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='compoundValueTransformerWithValueTransformers:' class_method='true'>
<arg name='valueTransformers' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertValueTransformer:atIndex:'>
<arg name='valueTransformer' index='0' declared_type='id' type='@'/>
<arg name='index' type64='Q' index='1' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfValueTransformers'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='removeValueTransformer:'>
<arg name='valueTransformer' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueTransformersForTransformingFromClass:toClass:'>
<arg name='inputValueClass' index='0' declared_type='Class' type='#'/>
<arg name='outputValueClass' index='1' declared_type='Class' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKConnectionDescription'>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='destinationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='includesSubentities'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRelationship:attributes:'>
<arg name='relationship' index='0' declared_type='NSRelationshipDescription*' type='@'/>
<arg name='sourceToDestinationEntityAttributes' index='1' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRelationship:keyPath:'>
<arg name='relationship' index='0' declared_type='NSRelationshipDescription*' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isForeignKeyConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyPathConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relationship'>
<retval declared_type='NSRelationshipDescription*' type='@'/>
</method>
<method selector='setDestinationPredicate:'>
<arg name='destinationPredicate' index='0' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludesSubentities:'>
<arg name='includesSubentities' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRelationship:'>
<arg name='relationship' index='0' declared_type='NSRelationshipDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePredicate:'>
<arg name='sourcePredicate' index='0' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dotNetDateFormatterWithTimeZone:' class_method='true'>
<arg name='timeZone' index='0' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' index='0' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='addMatcher:'>
<arg name='matcher' index='0' declared_type='RKObjectMappingMatcher*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='matchers'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectMappingForRepresentation:'>
<arg name='representation' index='0' declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='objectMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeMatcher:'>
<arg name='matcher' index='0' declared_type='RKObjectMappingMatcher*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchers:'>
<arg name='matchers' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForRepresentationBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='RKObjectMapping *(^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:completion:'>
<arg name='managedObjects' index='0' declared_type='NSSet*' type='@'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='callbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='containsObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsObjectWithAttributeValues:'>
<arg name='attributeValues' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='countOfAttributeValues'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='countWithAttributeValues:'>
<arg name='attributeValues' index='0' declared_type='NSDictionary*' type='@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush:'>
<arg name='completion' function_pointer='true' index='0' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEntity:attributes:managedObjectContext:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeNames' index='1' declared_type='NSArray*' type='@'/>
<arg name='context' index='2' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='load:'>
<arg name='completion' function_pointer='true' index='0' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='monitorsContextForChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectWithAttributeValues:inContext:'>
<arg name='attributeValues' index='0' declared_type='NSDictionary*' type='@'/>
<arg name='context' index='1' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithAttributeValues:inContext:'>
<arg name='attributeValues' index='0' declared_type='NSDictionary*' type='@'/>
<arg name='context' index='1' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:completion:'>
<arg name='managedObjects' index='0' declared_type='NSSet*' type='@'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackQueue:'>
<arg name='callbackQueue' index='0' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg name='monitorsContextForChanges' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:completion:'>
<arg name='objects' index='0' declared_type='NSSet*' type='@'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeCacheForEntity:attributes:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeNames' index='1' declared_type='NSArray*' type='@'/>
<retval declared_type='RKEntityByAttributeCache*' type='@'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cacheObjectsForEntity:byAttributes:completion:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeNames' index='1' declared_type='NSArray*' type='@'/>
<arg name='completion' function_pointer='true' index='2' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='callbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='containsObject:'>
<arg name='managedObject' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flush:'>
<arg name='completion' function_pointer='true' index='0' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg name='context' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntity:cachedByAttributes:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeNames' index='1' declared_type='NSArray*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='objectForEntity:withAttributeValues:inContext:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeValues' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='context' index='2' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsForEntity:withAttributeValues:inContext:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeValues' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='context' index='2' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:completion:'>
<arg name='objects' index='0' declared_type='NSSet*' type='@'/>
<arg name='completion' function_pointer='true' index='1' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackQueue:'>
<arg name='callbackQueue' index='0' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnection:'>
<arg name='connection' index='0' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConnectionForRelationship:connectedBy:'>
<arg name='relationshipOrName' index='0' declared_type='id' type='@'/>
<arg name='connectionSpecifier' index='1' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectionForRelationship:'>
<arg name='relationshipOrName' index='0' declared_type='id' type='@'/>
<retval declared_type='RKConnectionDescription*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg name='attributeName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='deletionPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='discardsInvalidObjectsOnInsert'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='identificationAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='identificationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='initWithEntity:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntityIdentificationInferenceEnabled' class_method='true'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingForEntityForName:inManagedObjectStore:' class_method='true'>
<arg name='entityName' index='0' declared_type='NSString*' type='@'/>
<arg name='managedObjectStore' index='1' declared_type='RKManagedObjectStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationAttribute'>
<retval declared_type='NSAttributeDescription*' type='@'/>
</method>
<method selector='modificationKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='removeConnection:'>
<arg name='connection' index='0' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeletionPredicate:'>
<arg name='deletionPredicate' index='0' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiscardsInvalidObjectsOnInsert:'>
<arg name='discardsInvalidObjectsOnInsert' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntity:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntityIdentificationInferenceEnabled:' class_method='true'>
<arg name='enabled' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationAttributes:'>
<arg name='identificationAttributes' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationPredicate:'>
<arg name='identificationPredicate' index='0' declared_type='NSPredicate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationAttribute:'>
<arg name='modificationAttribute' index='0' declared_type='NSAttributeDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationAttributeForName:'>
<arg name='attributeName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationKey:'>
<arg name='modificationKey' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg name='persistentStore' index='0' declared_type='NSPersistentStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setErrorMessage:'>
<arg name='errorMessage' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg name='userInfo' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg name='acceptableContentTypes' index='0' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg name='acceptableStatusCodes' index='0' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='defaultISO8601DateFormatter' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='format'>
<retval type64='Q' declared_type='RKISO8601DateFormat' type='I'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFormat:'>
<arg name='format' type64='Q' index='0' declared_type='RKISO8601DateFormat' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg name='includeTime' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg name='locale' index='0' declared_type='NSLocale*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg name='parsesStrictly' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg name='timeSeparator' index='0' declared_type='unichar' type='S'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg name='timeZone' index='0' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg name='date' index='0' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method selector='dataFromObject:MIMEType:error:' class_method='true'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='MIMEType' index='1' declared_type='NSString*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='objectFromData:MIMEType:error:' class_method='true'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='MIMEType' index='1' declared_type='NSString*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerClass:forMIMEType:' class_method='true'>
<arg name='serializationClass' index='0' declared_type='Class*' type='#'/>
<arg name='MIMETypeStringOrRegularExpression' index='1' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='registeredMIMETypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='serializationClassForMIMEType:' class_method='true'>
<arg name='MIMEType' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='Class*' type='#'/>
</method>
<method selector='unregisterClass:' class_method='true'>
<arg name='serializationClass' index='0' declared_type='Class*' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg name='error' index='0' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='mapping' index='1' declared_type='RKMapping*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='error' index='3' declared_type='NSError**' type='^@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg name='managedObjectModel' index='0' declared_type='NSManagedObjectModel*' type='@'/>
<arg name='storePath' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStore:'>
<arg name='persistentStore' index='0' declared_type='NSPersistentStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logSeedingInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg name='managedObjectModel' index='0' declared_type='NSManagedObjectModel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg name='persistentStore' index='0' declared_type='NSPersistentStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg name='resetsStoreBeforeImporting' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorePath:'>
<arg name='storePath' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<arg name='managedObjectCache' index='1' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parentOperation'>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg name='operationQueue' index='0' declared_type='NSOperationQueue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentOperation:'>
<arg name='parentOperation' index='0' declared_type='NSOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='savesToPersistentStore'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg name='deletesOrphanedObjects' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg name='fetchRequestBlocks' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg name='savesToPersistentStore' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSaveMappingContextBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(NSManagedObjectContext *)' type='@?'>
<arg declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObjectID:'>
<arg name='targetObjectID' index='0' declared_type='NSManagedObjectID*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObjectID'>
<retval declared_type='NSManagedObjectID*' type='@'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg name='error' index='0' declared_type='NSError**' type='^@'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:'>
<arg name='storePath' index='0' declared_type='NSString*' type='@'/>
<arg name='seedPath' index='1' declared_type='NSString*' type='@'/>
<arg name='nilOrConfigurationName' index='2' declared_type='NSString*' type='@'/>
<arg name='nilOrOptions' index='3' declared_type='NSDictionary*' type='@'/>
<arg name='error' index='4' declared_type='NSError**' type='^@'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='createManagedObjectContexts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultStore' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg name='managedObjectModel' index='0' declared_type='NSManagedObjectModel*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg name='persistentStoreCoordinator' index='0' declared_type='NSPersistentStoreCoordinator*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='migratePersistentStoreOfType:atURL:toModelAtURL:error:configuringModelsWithBlock:' class_method='true'>
<arg name='storeType' index='0' declared_type='NSString*' type='@'/>
<arg name='storeURL' index='1' declared_type='NSURL*' type='@'/>
<arg name='destinationModelURL' index='2' declared_type='NSURL*' type='@'/>
<arg name='error' index='3' declared_type='NSError**' type='^@'/>
<arg name='block' function_pointer='true' index='4' declared_type='void (^)(NSManagedObjectModel *, NSURL *)' type='@?'>
<arg declared_type='NSManagedObjectModel*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg name='concurrencyType' type64='Q' index='0' declared_type='NSManagedObjectContextConcurrencyType' type='I'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:tracksChanges:'>
<arg name='concurrencyType' type64='Q' index='0' declared_type='NSManagedObjectContextConcurrencyType' type='I'/>
<arg name='tracksChanges' index='1' declared_type='BOOL' type='B'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval declared_type='NSPersistentStoreCoordinator*' type='@'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='resetPersistentStores:'>
<arg name='error' index='0' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDefaultStore:' class_method='true'>
<arg name='managedObjectStore' index='0' declared_type='RKManagedObjectStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg name='mainQueueManagedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg name='managedObjectModel' index='0' declared_type='NSManagedObjectModel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg name='persistentStoreCoordinator' index='0' declared_type='NSPersistentStoreCoordinator*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg name='persistentStoreManagedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='execute:'>
<arg name='error' index='0' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRepresentation:mappingsDictionary:'>
<arg name='representation' index='0' declared_type='id' type='@'/>
<arg name='mappingsDictionary' index='1' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:atKeyPath:usingMapping:'>
<arg name='mappableObject' index='0' declared_type='id' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<arg name='mapping' index='2' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:toObject:atKeyPath:usingMapping:metadata:'>
<arg name='mappableObject' index='0' declared_type='id' type='@'/>
<arg name='destinationObject' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='mapping' index='3' declared_type='RKMapping*' type='@'/>
<arg name='metadata' index='4' declared_type='NSDictionary*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapRepresentations:atKeyPath:usingMapping:'>
<arg name='mappableObjects' index='0' declared_type='NSArray*' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<arg name='mapping' index='2' declared_type='RKMapping*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingOperationDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='mappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectForRepresentation:withMapping:'>
<arg name='representation' index='0' declared_type='id' type='@'/>
<arg name='mapping' index='1' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='representation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' index='0' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg name='mappingOperationDataSource' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' index='0' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingsDictionary:'>
<arg name='mappingsDictionary' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg name='metadata' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentation:'>
<arg name='representation' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToMapping:'>
<arg name='otherMapping' index='0' declared_type='RKMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg name='forceCollectionMapping' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingInfo'>
<method selector='dynamicMapping'>
<retval declared_type='RKDynamicMapping*' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg name='key' index='0' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='relationshipMappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setDynamicMapping:'>
<arg name='dynamicMapping' index='0' declared_type='RKDynamicMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' index='0' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg name='sourceObject' index='0' declared_type='id' type='@'/>
<arg name='destinationObject' index='1' declared_type='id' type='@'/>
<arg name='objectOrDynamicMapping' index='2' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='RKMappingInfo*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='performMapping:'>
<arg name='error' index='0' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDataSource:'>
<arg name='dataSource' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg name='delegate' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationObject:'>
<arg name='destinationObject' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' index='0' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg name='metadata' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' index='0' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg name='sourceObject' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='count'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='dictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='firstObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='set'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='NSFetchRequest *(^)(NSURL *)' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptor:'>
<arg name='requestDescriptor' index='0' declared_type='RKRequestDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg name='requestDescriptors' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptor:'>
<arg name='responseDescriptor' index='0' declared_type='RKResponseDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg name='responseDescriptors' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<arg name='path' index='2' declared_type='NSString*' type='@'/>
<arg name='parameters' index='3' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg name='method' type64='q' index='0' declared_type='RKRequestMethod' type='i'/>
<arg name='pathPattern' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg name='operations' index='0' declared_type='NSArray*' type='@'/>
<arg name='progress' function_pointer='true' index='1' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='completion' function_pointer='true' index='2' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg name='route' index='0' declared_type='RKRoute*' type='@'/>
<arg name='objects' index='1' declared_type='NSArray*' type='@'/>
<arg name='progress' function_pointer='true' index='2' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='completion' function_pointer='true' index='3' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg name='objectRequestOperation' index='0' declared_type='RKObjectRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueuedObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg name='method' type64='q' index='0' declared_type='RKRequestMethod' type='i'/>
<arg name='pathPattern' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<arg name='parameters' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg name='relationshipName' index='0' declared_type='NSString*' type='@'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg name='routeName' index='0' declared_type='NSString*' type='@'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithHTTPClient:'>
<arg name='client' index='0' declared_type='AFHTTPClient*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='managedObjectContext' index='1' declared_type='NSManagedObjectContext*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKManagedObjectRequestOperation*' type='@'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method selector='managerWithBaseURL:' class_method='true'>
<arg name='baseURL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<arg name='path' index='2' declared_type='NSString*' type='@'/>
<arg name='parameters' index='3' declared_type='NSDictionary*' type='@'/>
<arg name='block' function_pointer='true' index='4' declared_type='void (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='success' function_pointer='true' index='1' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='2' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='paginatorWithPathPattern:'>
<arg name='pathPattern' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='RKPaginator*' type='@'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='path' index='1' declared_type='NSString*' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<arg name='success' function_pointer='true' index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerRequestOperationClass:'>
<arg name='operationClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg name='requestDescriptor' index='0' declared_type='RKRequestDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg name='responseDescriptor' index='0' declared_type='RKResponseDescriptor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<arg name='path' index='2' declared_type='NSString*' type='@'/>
<arg name='parameters' index='3' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg name='relationship' index='0' declared_type='NSString*' type='@'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<arg name='method' type64='q' index='2' declared_type='RKRequestMethod' type='i'/>
<arg name='parameters' index='3' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg name='routeName' index='0' declared_type='NSString*' type='@'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<arg name='parameters' index='2' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='router'>
<retval declared_type='RKRouter*' type='@'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg name='MIMEType' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPClient:'>
<arg name='HTTPClient' index='0' declared_type='AFHTTPClient*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectStore:'>
<arg name='managedObjectStore' index='0' declared_type='RKManagedObjectStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg name='operationQueue' index='0' declared_type='NSOperationQueue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg name='paginationMapping' index='0' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg name='requestSerializationMIMEType' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouter:'>
<arg name='router' index='0' declared_type='RKRouter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharedManager:' class_method='true'>
<arg name='manager' index='0' declared_type='RKObjectManager*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='unregisterRequestOperationClass:'>
<arg name='operationClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingFromKeyOfRepresentationToAttribute:'>
<arg name='attributeName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingToKeyOfRepresentationFromAttribute:'>
<arg name='attributeName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromArray:'>
<arg name='arrayOfAttributeNamesOrMappings' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg name='keyPathToAttributeNames' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultDateFormatter:' class_method='true'>
<arg name='dateFormatter' index='0' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addDefaultDateFormatterForString:inTimeZone:' class_method='true'>
<arg name='dateFormatString' index='0' declared_type='NSString*' type='@'/>
<arg name='nilOrTimeZone' index='1' declared_type='NSTimeZone*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMapping:'>
<arg name='propertyMapping' index='0' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg name='arrayOfPropertyMappings' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRelationshipMappingWithSourceKeyPath:mapping:'>
<arg name='sourceKeyPath' index='0' declared_type='NSString*' type='@'/>
<arg name='mapping' index='1' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assignsDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assignsNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForKeyPath:'>
<arg name='keyPath' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForProperty:'>
<arg name='propertyName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultDateFormatters' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg name='attributeName' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithClass:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMapping'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMappingWithPropertyMappingsPassingTest:'>
<arg name='predicate' function_pointer='true' index='0' declared_type='BOOL (^)(RKPropertyMapping *)' type='@?'>
<arg declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForClass:' class_method='true'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg name='destinationKeyPath' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg name='sourceKeyPath' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='performKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performsKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredDateFormatter' class_method='true'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='relationshipMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removePropertyMapping:'>
<arg name='propertyMapping' index='0' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestMapping' class_method='true'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setAssignsDefaultValueForMissingAttributes:'>
<arg name='assignsDefaultValueForMissingAttributes' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAssignsNilForMissingRelationships:'>
<arg name='assignsNilForMissingRelationships' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormatters:'>
<arg name='dateFormatters' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultDateFormatters:' class_method='true'>
<arg name='dateFormatters' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSourceToDestinationKeyTransformationBlock:' class_method='true'>
<arg name='block' function_pointer='true' index='0' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg name='performKeyValueValidation' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformsKeyValueValidation:'>
<arg name='performsKeyValueValidation' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:' class_method='true'>
<arg name='dateFormatter' index='0' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg name='preferredDateFormatter' index='0' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyMappings:'>
<arg name='propertyMappings' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg name='setDefaultValueForMissingAttributes' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg name='setNilForMissingRelationships' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceToDestinationKeyTransformationBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' type='@?'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueTransformer:'>
<arg name='valueTransformer' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMappingMatcher'>
<method selector='matcherWithKeyPath:expectedValue:objectMapping:' class_method='true'>
<arg name='keyPath' index='0' declared_type='NSString*' type='@'/>
<arg name='expectedValue' index='1' declared_type='id' type='@'/>
<arg name='objectMapping' index='2' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='matcherWithPredicate:objectMapping:' class_method='true'>
<arg name='predicate' index='0' declared_type='NSPredicate*' type='@'/>
<arg name='objectMapping' index='1' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='matches:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' index='0' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method selector='parametersWithObject:requestDescriptor:error:' class_method='true'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='requestDescriptor' index='1' declared_type='RKRequestDescriptor*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='HTTPRequestOperation'>
<retval declared_type='RKHTTPRequestOperation*' type='@'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='initWithHTTPRequestOperation:responseDescriptors:'>
<arg name='requestOperation' index='0' declared_type='RKHTTPRequestOperation*' type='@'/>
<arg name='responseDescriptors' index='1' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='responseDescriptors' index='1' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='performMappingOnResponseWithCompletionBlock:'>
<arg name='completionBlock' function_pointer='true' index='0' declared_type='void (^)(RKMappingResult *, NSError *)' type='@?'>
<arg declared_type='RKMappingResult*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingQueue' class_method='true'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' function_pointer='true' index='0' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='1' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' type='@?'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' index='0' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg name='failureCallbackQueue' index='0' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPRequestOperation:'>
<arg name='HTTPRequestOperation' index='0' declared_type='RKHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg name='mappingMetadata' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' index='0' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg name='responseDescriptors' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg name='successCallbackQueue' index='0' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='id (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='willFinish'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPaginator'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPage'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='hasNextPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasObjectCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPageCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPreviousPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRequest:paginationMapping:responseDescriptors:'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='paginationMapping' index='1' declared_type='RKObjectMapping*' type='@'/>
<arg name='responseDescriptors' index='2' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPage:'>
<arg name='pageNumber' type64='Q' index='0' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='objectCount'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='objectRequestOperation'>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='offset'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='pageCount'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='patternURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='perPage'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg name='success' function_pointer='true' index='0' declared_type='void (^)(RKPaginator *, NSArray *, NSUInteger)' type='@?'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSArray*' type='@'/>
<arg type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='1' declared_type='void (^)(RKPaginator *, NSError *)' type='@?'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' index='0' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg name='fetchRequestBlocks' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPOperationClass:'>
<arg name='operationClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg name='managedObjectContext' index='0' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' index='0' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectRequestOperation:'>
<arg name='objectRequestOperation' index='0' declared_type='RKObjectRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg name='operationQueue' index='0' declared_type='NSOperationQueue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg name='paginationMapping' index='0' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerPage:'>
<arg name='perPage' type64='Q' index='0' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg name='pathString' index='0' declared_type='NSString*' type='@'/>
<arg name='shouldTokenize' index='1' declared_type='BOOL' type='B'/>
<arg name='arguments' index='2' declared_type='NSDictionary**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg name='patternString' index='0' declared_type='NSString*' type='@'/>
<arg name='shouldTokenize' index='1' declared_type='BOOL' type='B'/>
<arg name='arguments' index='2' declared_type='NSDictionary**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathFromObject:addingEscapes:interpolatedParameters:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='addEscapes' index='1' declared_type='BOOL' type='B'/>
<arg name='interpolatedParameters' index='2' declared_type='NSDictionary**' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pathMatcherWithPath:' class_method='true'>
<arg name='pathString' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='pathMatcherWithPattern:' class_method='true'>
<arg name='patternString' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='classForPropertyNamed:ofClass:isPrimitive:'>
<arg name='propertyName' index='0' declared_type='NSString*' type='@'/>
<arg name='objectClass' index='1' declared_type='Class' type='#'/>
<arg name='isPrimitive' index='2' declared_type='BOOL*' type='^B'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPropertyNamed:ofEntity:'>
<arg name='propertyName' index='0' declared_type='NSString*' type='@'/>
<arg name='entity' index='1' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='propertyInspectionForClass:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyInspectionForEntity:'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='sharedInspector' class_method='true'>
<retval declared_type='RKPropertyInspector*' type='@'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEqualToMapping:'>
<arg name='otherMapping' index='0' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='propertyValueClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='setObjectMapping:'>
<arg name='objectMapping' index='0' declared_type='RKObjectMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyValueClass:'>
<arg name='propertyValueClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueTransformer:'>
<arg name='valueTransformer' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectedValuesByRelationshipName'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithManagedObject:connections:managedObjectCache:'>
<arg name='managedObject' index='0' declared_type='NSManagedObject*' type='@'/>
<arg name='connections' index='1' declared_type='NSArray*' type='@'/>
<arg name='managedObjectCache' index='2' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObject'>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setConnectedValuesByRelationshipName:'>
<arg name='connectedValuesByRelationshipName' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnectionBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(RKRelationshipConnectionOperation *, RKConnectionDescription *, id)' type='@?'>
<arg declared_type='RKRelationshipConnectionOperation*' type='@'/>
<arg declared_type='RKConnectionDescription*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnections:'>
<arg name='connections' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObject:'>
<arg name='managedObject' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg name='managedObjectCache' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='assignmentPolicy'>
<retval declared_type='RKAssignmentPolicy' type='i'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:' class_method='true'>
<arg name='sourceKeyPath' index='0' declared_type='NSString*' type='@'/>
<arg name='destinationKeyPath' index='1' declared_type='NSString*' type='@'/>
<arg name='mapping' index='2' declared_type='RKMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAssignmentPolicy:'>
<arg name='assignmentPolicy' index='0' declared_type='RKAssignmentPolicy' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='isEqualToRequestDescriptor:'>
<arg name='otherDescriptor' index='0' declared_type='RKRequestDescriptor*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='method'>
<retval type64='q' declared_type='RKRequestMethod' type='i'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:' class_method='true'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<arg name='objectClass' index='1' declared_type='Class' type='#'/>
<arg name='rootKeyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestDescriptorWithMapping:objectClass:rootKeyPath:method:' class_method='true'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<arg name='objectClass' index='1' declared_type='Class' type='#'/>
<arg name='rootKeyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='method' type64='q' index='3' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='isEqualToResponseDescriptor:'>
<arg name='otherDescriptor' index='0' declared_type='RKResponseDescriptor*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesPath:'>
<arg name='path' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesResponse:'>
<arg name='response' index='0' declared_type='NSHTTPURLResponse*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesURL:'>
<arg name='URL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval type64='q' declared_type='RKRequestMethod' type='i'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseDescriptorWithMapping:method:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<arg name='pathPattern' index='2' declared_type='NSString*' type='@'/>
<arg name='keyPath' index='3' declared_type='NSString*' type='@'/>
<arg name='statusCodes' index='4' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:' class_method='true'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<arg name='pathPattern' index='1' declared_type='NSString*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='statusCodes' index='3' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg name='baseURL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg name='mapping' index='0' declared_type='RKMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:response:data:responseDescriptors:'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='response' index='1' declared_type='NSHTTPURLResponse*' type='@'/>
<arg name='data' index='2' declared_type='NSData*' type='@'/>
<arg name='responseDescriptors' index='3' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapperDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='matchingResponseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='registerMappingOperationDataSourceClass:' class_method='true'>
<arg name='dataSourceClass' index='0' declared_type='Class*' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setData:'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishMappingBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(RKMappingResult *, NSError *)' type='@?'>
<arg declared_type='RKMappingResult*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg name='error' index='0' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapperDelegate:'>
<arg name='mapperDelegate' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg name='mappingMetadata' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg name='mappingResult' index='0' declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchingResponseDescriptors:'>
<arg name='matchingResponseDescriptors' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequest:'>
<arg name='request' index='0' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponse:'>
<arg name='response' index='0' declared_type='NSHTTPURLResponse*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg name='responseDescriptors' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg name='responseMappingsDictionary' index='0' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg name='targetObject' index='0' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg name='treatsEmptyResponseAsSuccess' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='id (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNamedRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRelationshipRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval type64='q' declared_type='RKRequestMethod' type='i'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='routeWithClass:pathPattern:method:' class_method='true'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<arg name='pathPattern' index='1' declared_type='NSString*' type='@'/>
<arg name='method' type64='q' index='2' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeWithName:pathPattern:method:' class_method='true'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<arg name='pathPattern' index='1' declared_type='NSString*' type='@'/>
<arg name='method' type64='q' index='2' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeWithRelationshipName:objectClass:pathPattern:method:' class_method='true'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<arg name='objectClass' index='1' declared_type='Class' type='#'/>
<arg name='pathPattern' index='2' declared_type='NSString*' type='@'/>
<arg name='method' type64='q' index='3' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setName:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathPattern:'>
<arg name='pathPattern' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEscapePath:'>
<arg name='shouldEscapePath' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEscapePath'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg name='route' index='0' declared_type='RKRoute*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRoutes:'>
<arg name='routes' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='containsRoute:'>
<arg name='route' index='0' declared_type='RKRoute*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='namedRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='relationshipRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeRoute:'>
<arg name='route' index='0' declared_type='RKRoute*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeForClass:method:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForName:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForObject:method:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg name='relationship' index='0' declared_type='NSString*' type='@'/>
<arg name='objectClass' index='1' declared_type='Class' type='#'/>
<arg name='method' type64='q' index='2' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routesForClass:'>
<arg name='objectClass' index='0' declared_type='Class' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForObject:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg name='relationshipName' index='0' declared_type='NSString*' type='@'/>
<arg name='objectClass' index='1' declared_type='Class' type='#'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='method' type64='q' index='1' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg name='relationshipName' index='0' declared_type='NSString*' type='@'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<arg name='method' type64='q' index='2' declared_type='RKRequestMethod' type='i'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg name='routeName' index='0' declared_type='NSString*' type='@'/>
<arg name='method' type64='^q' index='1' declared_type='RKRequestMethod*' type_modifier='o' type='^i'/>
<arg name='object' index='2' declared_type='id' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLWithRoute:object:'>
<arg name='route' index='0' declared_type='RKRoute*' type='@'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg name='baseURL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeSet'>
<retval declared_type='RKRouteSet*' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg name='baseURL' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouteSet:'>
<arg name='routeSet' index='0' declared_type='RKRouteSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKStringTokenizer'>
<method selector='setStopWords:'>
<arg name='stopWords' index='0' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopWords'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='tokenize:'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKValueTransformer'>
<method selector='arrayToOrderedSetValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='arrayToSetValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decimalNumberToNumberValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decimalNumberToStringValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultValueTransformer' class_method='true'>
<retval declared_type='RKCompoundValueTransformer*' type='@'/>
</method>
<method selector='identityValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='iso8601TimestampToDateValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyOfDictionaryValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='keyedArchivingValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mutableValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='nullValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='numberToStringValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectToCollectionValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDefaultValueTransformer:' class_method='true'>
<arg name='compoundValueTransformer' index='0' declared_type='RKCompoundValueTransformer*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringToURLValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
<method selector='timeIntervalSince1970ToDateValueTransformer' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg name='sourceString' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='patternWithString:' class_method='true'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg name='selector' index='0' declared_type='SEL' type=':'/>
<arg name='object' index='1' declared_type='id' type='@'/>
<arg name='sourceString' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromObject:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='block' function_pointer='true' index='1' declared_type='NSString *(^)(NSString *)' type='@?'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringMatches:'>
<arg name='string' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='TKEvent'>
<method selector='destinationState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='eventWithName:transitioningFromStates:toState:' class_method='true'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<arg name='sourceStates' index='1' declared_type='NSArray*' type='@'/>
<arg name='destinationState' index='2' declared_type='TKState*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDestinationState:'>
<arg name='destinationState' index='0' declared_type='TKState*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFireEventBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(TKEvent *, TKStateMachine *)' type='@?'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldFireEventBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='BOOL (^)(TKEvent *, TKStateMachine *)' type='@?'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillFireEventBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(TKEvent *, TKStateMachine *)' type='@?'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceStates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='TKState'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDidEnterStateBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidExitStateBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillEnterStateBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillExitStateBlock:'>
<arg name='block' function_pointer='true' index='0' declared_type='void (^)(TKState *, TKStateMachine *)' type='@?'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stateWithName:' class_method='true'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TKStateMachine'>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEvent:'>
<arg name='event' index='0' declared_type='TKEvent*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEvents:'>
<arg name='arrayOfEvents' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addState:'>
<arg name='state' index='0' declared_type='TKState*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addStates:'>
<arg name='arrayOfStates' index='0' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canFireEvent:'>
<arg name='eventOrEventName' index='0' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='eventNamed:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='TKEvent*' type='@'/>
</method>
<method selector='events'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='fireEvent:error:'>
<arg name='eventOrEventName' index='0' declared_type='id' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initialState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInState:'>
<arg name='stateOrStateName' index='0' declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCurrentState:'>
<arg name='currentState' index='0' declared_type='TKState*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialState:'>
<arg name='initialState' index='0' declared_type='TKState*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stateNamed:'>
<arg name='name' index='0' declared_type='NSString*' type='@'/>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='states'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg name='url' index='0' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg name='url' index='0' declared_type='NSURL*' type='@'/>
<arg name='placeholderImage' index='1' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg name='urlRequest' index='0' declared_type='NSURLRequest*' type='@'/>
<arg name='placeholderImage' index='1' declared_type='UIImage*' type='@'/>
<arg name='success' function_pointer='true' index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' index='3' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIViewController'>
<method selector='slideMenuController'>
<retval declared_type='NVSlideMenuController*' type='@'/>
</method>
<method selector='viewDidSlideIn:inSlideMenuController:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='slideMenuController' index='1' declared_type='NVSlideMenuController*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewDidSlideOut:inSlideMenuController:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='slideMenuController' index='1' declared_type='NVSlideMenuController*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillSlideIn:inSlideMenuController:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='slideMenuController' index='1' declared_type='NVSlideMenuController*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewWillSlideOut:inSlideMenuController:'>
<arg name='animated' index='0' declared_type='BOOL' type='B'/>
<arg name='slideMenuController' index='1' declared_type='NVSlideMenuController*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type64='v48@0:8@16@24@32@40' selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='fileName' index='2' declared_type='NSString*' type='@'/>
<arg name='mimeType' index='3' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='B40@0:8@16@24^@32' selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16'>
<arg name='fileURL' index='0' declared_type='NSURL*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B56@0:8@16@24@32@40^@48' selector='appendPartWithFileURL:name:fileName:mimeType:error:' type='B28@0:4@8@12@16@20^@24'>
<arg name='fileURL' index='0' declared_type='NSURL*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='fileName' index='2' declared_type='NSString*' type='@'/>
<arg name='mimeType' index='3' declared_type='NSString*' type='@'/>
<arg name='error' index='4' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='v32@0:8@16@24' selector='appendPartWithFormData:name:' type='v16@0:4@8@12'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v32@0:8@16@24' selector='appendPartWithHeaders:body:' type='v16@0:4@8@12'>
<arg name='headers' index='0' declared_type='NSDictionary*' type='@'/>
<arg name='body' index='1' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v56@0:8@16@24@32Q40@48' selector='appendPartWithInputStream:name:fileName:length:mimeType:' type='v32@0:4@8@12@16Q20@28'>
<arg name='inputStream' index='0' declared_type='NSInputStream*' type='@'/>
<arg name='name' index='1' declared_type='NSString*' type='@'/>
<arg name='fileName' index='2' declared_type='NSString*' type='@'/>
<arg name='length' index='3' declared_type='unsigned long long' type='Q'/>
<arg name='mimeType' index='4' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v32@0:8Q16d24' selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12'>
<arg name='numberOfBytes' type64='Q' index='0' declared_type='NSUInteger' type='I'/>
<arg name='delay' index='1' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method type64='v24@0:8@16' selector='didCreateObject:' type='v12@0:4@8'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' selector='didDeleteObject:' type='v12@0:4@8'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' selector='didFetchObject:' type='v12@0:4@8'>
<arg name='object' index='0' declared_type='NSManagedObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='@40@0:8@16@24@32' selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:' type='@20@0:4@8@12@16'>
<arg name='entity' index='0' declared_type='NSEntityDescription*' type='@'/>
<arg name='attributeValues' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='managedObjectContext' index='2' declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method type64='v48@0:8@16@24@32@40' selector='mapper:didFailMappingOperation:forKeyPath:withError:' type='v24@0:4@8@12@16@20'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='mappingOperation' index='1' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='error' index='3' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v40@0:8@16@24@32' selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:' type='v20@0:4@8@12@16'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='dictionaryOrArrayOfDictionaries' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v40@0:8@16@24@32' selector='mapper:didFinishMappingOperation:forKeyPath:' type='v20@0:4@8@12@16'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='mappingOperation' index='1' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v32@0:8@16@24' selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:' type='v16@0:4@8@12'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v40@0:8@16@24@32' selector='mapper:willStartMappingOperation:forKeyPath:' type='v20@0:4@8@12@16'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<arg name='mappingOperation' index='1' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' selector='mapperDidCancelMapping:' type='v12@0:4@8'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' selector='mapperDidFinishMapping:' type='v12@0:4@8'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v24@0:8@16' selector='mapperWillStartMapping:' type='v12@0:4@8'>
<arg name='mapper' index='0' declared_type='RKMapperOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method type64='B32@0:8@16^@24' selector='commitChangesForMappingOperation:error:' type='B16@0:4@8^@12'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B40@0:8@16@24^@32' selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:' type='B20@0:4@8@12^@16'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='relationshipMapping' index='1' declared_type='RKRelationshipMapping*' type='@'/>
<arg name='error' index='2' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='@48@0:8@16@24@32@40' selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:' type='@24@0:4@8@12@16@20'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='representation' index='1' declared_type='NSDictionary*' type='@'/>
<arg name='mapping' index='2' declared_type='RKObjectMapping*' type='@'/>
<arg name='relationshipMapping' index='3' declared_type='RKRelationshipMapping*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method type64='B24@0:8@16' selector='mappingOperationShouldSetUnchangedValues:' type='B12@0:4@8'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B24@0:8@16' selector='mappingOperationShouldSkipPropertyMapping:' type='B12@0:4@8'>
<arg name='mappingOperation' index='0' declared_type='RKMappingOperation*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method type64='v48@0:8@16@24@32@40' selector='mappingOperation:didConnectRelationship:toValue:usingConnection:' type='v24@0:4@8@12@16@20'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='relationship' index='1' declared_type='NSRelationshipDescription*' type='@'/>
<arg name='value' index='2' declared_type='id' type='@'/>
<arg name='connection' index='3' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v40@0:8@16@24@32' selector='mappingOperation:didFailToConnectRelationship:usingConnection:' type='v20@0:4@8@12@16'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='relationship' index='1' declared_type='NSRelationshipDescription*' type='@'/>
<arg name='connection' index='2' declared_type='RKConnectionDescription*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v32@0:8@16@24' selector='mappingOperation:didFailWithError:' type='v16@0:4@8@12'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='error' index='1' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='mappingOperation:didFindValue:forKeyPath:mapping:' type='v24@0:4@8@12@16@20'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v40@0:8@16@24@32' selector='mappingOperation:didNotFindValueForKeyPath:mapping:' type='v20@0:4@8@12@16'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='keyPath' index='1' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='2' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:' type='v24@0:4@8@12@16@20'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v40@0:8@16@24@32' selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:' type='v20@0:4@8@12@16'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='objectMapping' index='1' declared_type='RKObjectMapping*' type='@'/>
<arg name='dynamicMapping' index='2' declared_type='RKDynamicMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='mappingOperation:didSetValue:forKeyPath:usingMapping:' type='v24@0:4@8@12@16@20'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:' type='B24@0:4@8@12@16@20'>
<arg name='operation' index='0' declared_type='RKMappingOperation*' type='@'/>
<arg name='value' index='1' declared_type='id' type='@'/>
<arg name='keyPath' index='2' declared_type='NSString*' type='@'/>
<arg name='propertyMapping' index='3' declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method type64='@32@0:8@16^@24' selector='dataFromObject:error:' class_method='true' type='@16@0:4@8^@12'>
<arg name='object' index='0' declared_type='id' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method type64='@32@0:8@16^@24' selector='objectFromData:error:' class_method='true' type='@16@0:4@8^@12'>
<arg name='data' index='0' declared_type='NSData*' type='@'/>
<arg name='error' index='1' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKValueTransforming'>
<method type64='B48@0:8@16^@24#32^@40' selector='transformValue:toValue:ofClass:error:' type='B24@0:4@8^@12#16^@20'>
<arg name='inputValue' index='0' declared_type='id' type='@'/>
<arg name='outputValue' index='1' declared_type='id*' type='^@'/>
<arg name='outputValueClass' index='2' declared_type='Class' type='#'/>
<arg name='error' index='3' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type64='B32@0:8#16#24' selector='validateTransformationFromClass:toClass:' type='B16@0:4#8#12'>
<arg name='inputValueClass' index='0' declared_type='Class' type='#'/>
<arg name='outputValueClass' index='1' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
