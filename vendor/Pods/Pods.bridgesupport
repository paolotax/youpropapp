<?xml version='1.0'?>
<signatures version='1.0'>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingErrorDomain'/>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingOperationDidFinishNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingOperationDidStartNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingOperationFailingURLRequestErrorKey'/>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingOperationFailingURLResponseErrorKey'/>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingReachabilityDidChangeNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='AFNetworkingReachabilityNotificationStatusItem'/>
<constant declared_type='NSString*' type='@' const='true' name='RKDetailedErrorsKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKEntityIdentificationAttributesUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKErrorDomain'/>
<constant declared_type='NSString*' type='@' const='true' name='RKErrorNotificationErrorKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKMIMETypeErrorKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKMIMETypeFormURLEncoded'/>
<constant declared_type='NSString*' type='@' const='true' name='RKMIMETypeJSON'/>
<constant declared_type='NSString*' type='@' const='true' name='RKMIMETypeTextXML'/>
<constant declared_type='NSString*' type='@' const='true' name='RKMIMETypeXML'/>
<constant declared_type='NSString*' type='@' const='true' name='RKManagedObjectStoreDidResetPersistentStoresNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='RKMappingErrorKeyPathErrorKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKObjectMapperErrorObjectsKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKObjectRequestOperationDidFinishNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='RKObjectRequestOperationDidStartNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='RKObjectRequestOperationMappingDidFinishUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKObjectRequestOperationMappingDidStartUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKPropertyInspectionIsPrimitiveKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKPropertyInspectionKeyValueCodingClassKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKPropertyInspectionNameKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKResponseHasBeenMappedCacheUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKSQLitePersistentStoreSeedDatabasePathOption'/>
<constant declared_type='NSString*' type='@' const='true' name='RKValueTransformersDetailedErrorsKey'/>
<constant declared_type='NSString*' type='@' const='true' name='RKValueTransformersErrorDomain'/>
<constant declared_type='NSString*' type='@' const='true' name='TKErrorDomain'/>
<constant declared_type='NSString*' type='@' const='true' name='TKStateMachineDidChangeStateEventUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='TKStateMachineDidChangeStateNewStateUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='TKStateMachineDidChangeStateNotification'/>
<constant declared_type='NSString*' type='@' const='true' name='TKStateMachineDidChangeStateOldStateUserInfoKey'/>
<constant declared_type='NSString*' type='@' const='true' name='TKStateMachineIsImmutableException'/>
<constant declared_type='NSTimeInterval' type='d' const='true' name='kAFUploadStream3GSuggestedDelay'/>
<constant declared_type='NSUInteger' type='I' const='true' name='kAFUploadStream3GSuggestedPacketSize' type64='Q'/>
<enum value='0' name='AFFormURLParameterEncoding'/>
<enum value='1' name='AFJSONParameterEncoding'/>
<enum value='0' name='AFNetworkReachabilityStatusNotReachable'/>
<enum value='1' name='AFNetworkReachabilityStatusReachableViaWWAN'/>
<enum value='2' name='AFNetworkReachabilityStatusReachableViaWiFi'/>
<enum value='-1' name='AFNetworkReachabilityStatusUnknown'/>
<enum value='2' name='AFPropertyListParameterEncoding'/>
<enum value='2' name='AFSSLPinningModeCertificate'/>
<enum value='0' name='AFSSLPinningModeNone'/>
<enum value='1' name='AFSSLPinningModePublicKey'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_AFNetworking'/>
<enum value='2' name='COCOAPODS_VERSION_MAJOR_CustomBadge'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_ISO8601DateFormatterValueTransformer'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_RKValueTransformers'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RNFrostedSidebar'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RestKit'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RestKit_Core'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RestKit_CoreData'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RestKit_Network'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RestKit_ObjectMapping'/>
<enum value='0' name='COCOAPODS_VERSION_MAJOR_RestKit_Support'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_SOCKit'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_TransitionKit'/>
<enum value='3' name='COCOAPODS_VERSION_MINOR_AFNetworking'/>
<enum value='0' name='COCOAPODS_VERSION_MINOR_CustomBadge'/>
<enum value='5' name='COCOAPODS_VERSION_MINOR_ISO8601DateFormatterValueTransformer'/>
<enum value='0' name='COCOAPODS_VERSION_MINOR_RKValueTransformers'/>
<enum value='2' name='COCOAPODS_VERSION_MINOR_RNFrostedSidebar'/>
<enum value='21' name='COCOAPODS_VERSION_MINOR_RestKit'/>
<enum value='21' name='COCOAPODS_VERSION_MINOR_RestKit_Core'/>
<enum value='21' name='COCOAPODS_VERSION_MINOR_RestKit_CoreData'/>
<enum value='21' name='COCOAPODS_VERSION_MINOR_RestKit_Network'/>
<enum value='21' name='COCOAPODS_VERSION_MINOR_RestKit_ObjectMapping'/>
<enum value='21' name='COCOAPODS_VERSION_MINOR_RestKit_Support'/>
<enum value='1' name='COCOAPODS_VERSION_MINOR_SOCKit'/>
<enum value='1' name='COCOAPODS_VERSION_MINOR_TransitionKit'/>
<enum value='3' name='COCOAPODS_VERSION_PATCH_AFNetworking'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_CustomBadge'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_ISO8601DateFormatterValueTransformer'/>
<enum value='1' name='COCOAPODS_VERSION_PATCH_RKValueTransformers'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RNFrostedSidebar'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RestKit'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RestKit_Core'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RestKit_CoreData'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RestKit_Network'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RestKit_ObjectMapping'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_RestKit_Support'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_SOCKit'/>
<enum value='1' name='COCOAPODS_VERSION_PATCH_TransitionKit'/>
<enum value='1' name='RKAssignmentPolicyReplace'/>
<enum value='0' name='RKAssignmentPolicySet'/>
<enum value='2' name='RKAssignmentPolicyUnion'/>
<enum value='0' name='RKISO8601DateFormatCalendar'/>
<enum value='1' name='RKISO8601DateFormatOrdinal'/>
<enum value='2' name='RKISO8601DateFormatWeek'/>
<enum value='0' name='RKLogComponent'/>
<enum value='1' name='RKLogLevelCritical'/>
<enum value='5' name='RKLogLevelDebug'/>
<enum value='3' name='RKLogLevelDefault'/>
<enum value='2' name='RKLogLevelError'/>
<enum value='4' name='RKLogLevelInfo'/>
<enum value='0' name='RKLogLevelOff'/>
<enum value='6' name='RKLogLevelTrace'/>
<enum value='3' name='RKLogLevelWarning'/>
<enum value='1004' name='RKMappingErrorFromMappingResult'/>
<enum value='1010' name='RKMappingErrorInvalidAssignmentPolicy'/>
<enum value='1009' name='RKMappingErrorMappingDeclined'/>
<enum value='1007' name='RKMappingErrorNilDestinationObject'/>
<enum value='1008' name='RKMappingErrorNilManagedObjectCache'/>
<enum value='1001' name='RKMappingErrorNotFound'/>
<enum value='1002' name='RKMappingErrorTypeMismatch'/>
<enum value='1006' name='RKMappingErrorUnableToDetermineMapping'/>
<enum value='1003' name='RKMappingErrorUnmappableRepresentation'/>
<enum value='1005' name='RKMappingErrorValidationFailure'/>
<enum value='2' name='RKOperationCancelledError'/>
<enum value='1' name='RKReplaceAssignmentPolicy'/>
<enum value='127' name='RKRequestMethodAny'/>
<enum value='8' name='RKRequestMethodDELETE'/>
<enum value='1' name='RKRequestMethodGET'/>
<enum value='16' name='RKRequestMethodHEAD'/>
<enum value='64' name='RKRequestMethodOPTIONS'/>
<enum value='32' name='RKRequestMethodPATCH'/>
<enum value='2' name='RKRequestMethodPOST'/>
<enum value='4' name='RKRequestMethodPUT'/>
<enum value='0' name='RKSetAssignmentPolicy'/>
<enum value='400' name='RKStatusCodeClassClientError'/>
<enum value='100' name='RKStatusCodeClassInformational'/>
<enum value='300' name='RKStatusCodeClassRedirection'/>
<enum value='500' name='RKStatusCodeClassServerError'/>
<enum value='200' name='RKStatusCodeClassSuccessful'/>
<enum value='2' name='RKUnionAssignmentPolicy'/>
<enum value='1' name='RKUnsupportedMIMETypeError'/>
<enum value='3002' name='RKValueTransformationErrorTransformationFailed'/>
<enum value='3001' name='RKValueTransformationErrorUnsupportedOutputClass'/>
<enum value='3000' name='RKValueTransformationErrorUntransformableInputValue'/>
<enum value='0' name='RKlcl_cApp'/>
<enum value='1' name='RKlcl_cRestKit'/>
<enum value='2' name='RKlcl_cRestKitCoreData'/>
<enum value='3' name='RKlcl_cRestKitCoreDataCache'/>
<enum value='4' name='RKlcl_cRestKitNetwork'/>
<enum value='5' name='RKlcl_cRestKitNetworkCoreData'/>
<enum value='6' name='RKlcl_cRestKitObjectMapping'/>
<enum value='7' name='RKlcl_cRestKitSearch'/>
<enum value='8' name='RKlcl_cRestKitSupport'/>
<enum value='9' name='RKlcl_cRestKitTesting'/>
<enum value='10' name='RKlcl_cRestKitUI'/>
<enum value='1' name='RKlcl_vCritical'/>
<enum value='5' name='RKlcl_vDebug'/>
<enum value='2' name='RKlcl_vError'/>
<enum value='4' name='RKlcl_vInfo'/>
<enum value='0' name='RKlcl_vOff'/>
<enum value='6' name='RKlcl_vTrace'/>
<enum value='3' name='RKlcl_vWarning'/>
<enum value='1000' name='TKInvalidTransitionError'/>
<enum value='1001' name='TKTransitionDeclinedError'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg declared_type='NSDictionary*' type='@' name='parameters'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKApplicationDataDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKArrayOfFetchRequestFromBlocksWithURL'>
<arg declared_type='NSArray*' type='@' name='fetchRequestBlocks'/>
<arg declared_type='NSURL*' type='@' name='URL'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKCacheableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKCachesDirectory'>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKClassIsCollection'>
<arg declared_type='Class' type='#' name='aClass'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKDateFromHTTPDateString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDateFromString'>
<arg declared_type='NSString*' type='@' name='dateString'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKDictionaryByMergingDictionaryWithDictionary'>
<arg declared_type='NSDictionary*' type='@' name='dict1'/>
<arg declared_type='NSDictionary*' type='@' name='dict2'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryByReplacingPercentEscapesInEntriesFromDictionary'>
<arg declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKDictionaryFromURLEncodedStringWithEncoding'>
<arg declared_type='NSString*' type='@' name='URLEncodedString'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKEnsureDirectoryExistsAtPath'>
<arg declared_type='NSString*' type='@' name='path'/>
<arg declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKErrorFromMappingResult'>
<arg declared_type='RKMappingResult*' type='@' name='mappingResult'/>
<retval declared_type='NSError*' type='@'/>
</function>
<function name='RKHTTPCacheExpirationDateFromHeadersWithStatusCode'>
<arg declared_type='NSDictionary*' type='@' name='headers'/>
<arg declared_type='NSInteger' type='i' name='statusCode' type64='q'/>
<retval declared_type='NSDate*' type='@'/>
</function>
<function name='RKIdentificationAttributesInferredFromEntity'>
<arg declared_type='NSEntityDescription*' type='@' name='entity'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='RKIsSpecificRequestMethod'>
<arg declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKKeyValueCodingClassForObjCType'>
<arg declared_type='char*' type='*' const='true' name='type'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKKeyValueCodingClassFromPropertyAttributes'>
<arg declared_type='char*' type='*' const='true' name='attr'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKLogConfigureFromEnvironment'>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogCoreDataError'>
<arg declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogIntegerAsBinary'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKLogValidationError'>
<arg declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKMIMETypeFromPathExtension'>
<arg declared_type='NSString*' type='@' name='path'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKMIMETypeInSet'>
<arg declared_type='NSString*' type='@' name='MIMEType'/>
<arg declared_type='NSSet*' type='@' name='MIMETypes'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollection'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionContainingOnlyManagedObjects'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsCollectionOfCollections'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKObjectIsEqualToObject'>
<arg declared_type='id' type='@' name='object'/>
<arg declared_type='id' type='@' name='anotherObject'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPathAndQueryStringFromURLRelativeToURL'>
<arg declared_type='NSURL*' type='@' name='URL'/>
<arg declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPathFromPatternWithObject'>
<arg declared_type='NSString*' type='@' name='pathPattern'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPercentEscapedQueryStringFromStringWithEncoding'>
<arg declared_type='NSString*' type='@' name='string'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKPropertyInspectorGetClassForPropertyAtKeyPathOfObject'>
<arg declared_type='NSString*' type='@' name='keyPath'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='Class' type='#'/>
</function>
<function name='RKPropertyInspectorIsPropertyAtKeyPathOfObjectPrimitive'>
<arg declared_type='NSString*' type='@' name='keyPath'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKPropertyTypeFromAttributeString'>
<arg declared_type='NSString*' type='@' name='attributeString'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKQueryParametersFromStringWithEncoding'>
<arg declared_type='NSString*' type='@' name='string'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' type64='Q'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='RKRequestMethodFromString'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</function>
<function name='RKSetExcludeFromBackupAttributeForItemAtPath'>
<arg declared_type='NSString*' type='@' name='path'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RKStatusCodeIndexSetForClass'>
<arg declared_type='RKStatusCodeClass' type='I' name='statusCodeClass' type64='Q'/>
<retval declared_type='NSIndexSet*' type='@'/>
</function>
<function name='RKStatusCodeRangeForClass'>
<arg declared_type='RKStatusCodeClass' type='I' name='statusCodeClass' type64='Q'/>
<retval declared_type='NSRange' type='{_NSRange=II}' type64='{_NSRange=QQ}'/>
</function>
<function name='RKStringFromDate'>
<arg declared_type='NSDate*' type='@' name='date'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromNetworkReachabilityStatus'>
<arg declared_type='AFNetworkReachabilityStatus' type='i' name='networkReachabilityStatus'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromRequestMethod'>
<arg declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKStringFromStatusCode'>
<arg declared_type='NSInteger' type='i' name='statusCode' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLEncodedStringFromDictionaryWithEncoding'>
<arg declared_type='NSDictionary*' type='@' name='dictionary'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='RKURLIsRelativeToURL'>
<arg declared_type='NSURL*' type='@' name='URL'/>
<arg declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='RKlcl_configure_by_component'>
<arg declared_type='_RKlcl_component_t' type='I' name='component'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_header'>
<arg declared_type='char*' type='*' const='true' name='header'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_identifier'>
<arg declared_type='char*' type='*' const='true' name='identifier'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='RKlcl_configure_by_name'>
<arg declared_type='char*' type='*' const='true' name='name'/>
<arg declared_type='_RKlcl_level_t' type='I' name='level'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='SOCStringFromStringWithObject'>
<arg declared_type='NSString*' type='@' name='string'/>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg index='0' declared_type='NSString*' type='@' name='method'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clientWithBaseURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='defaultValueForHeader:'>
<arg index='0' declared_type='NSString*' type='@' name='header'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg index='0' declared_type='NSArray*' type='@' name='operations'/>
<arg index='1' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' type='@?' name='progressBlock'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(NSArray *)' function_pointer='true' type='@?' name='completionBlock'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg index='0' declared_type='NSArray*' type='@' name='urlRequests'/>
<arg index='1' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' type='@?' name='progressBlock'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(NSArray *)' function_pointer='true' type='@?' name='completionBlock'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg index='0' declared_type='AFHTTPRequestOperation*' type='@' name='operation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg index='0' declared_type='NSString*' type='@' name='method'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(id)' function_pointer='true' type='@?' name='block'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='2' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg index='0' declared_type='Class' type='#' name='operationClass'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg index='0' declared_type='NSString*' type='@' name='method'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' declared_type='BOOL' type='B' name='allowsInvalidSSLCertificate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg index='0' declared_type='NSString*' type='@' name='token'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg index='0' declared_type='NSString*' type='@' name='username'/>
<arg index='1' declared_type='NSString*' type='@' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:'>
<arg index='0' declared_type='NSURLCredential*' type='@' name='credential'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg index='0' declared_type='NSString*' type='@' name='header'/>
<arg index='1' declared_type='NSString*' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg index='0' declared_type='AFURLConnectionOperationSSLPinningMode' type='i' name='defaultSSLPinningMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg index='0' declared_type='AFHTTPClientParameterEncoding' type='i' name='parameterEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg index='0' declared_type='void (^)(AFNetworkReachabilityStatus)' function_pointer='true' type='@?' name='block'>
<arg declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg index='0' declared_type='NSStringEncoding' type='I' name='stringEncoding' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg index='0' declared_type='Class' type='#' name='operationClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method class_method='true' selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='addAcceptableContentTypes:'>
<arg index='0' declared_type='NSSet*' type='@' name='contentTypes'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addAcceptableStatusCodes:'>
<arg index='0' declared_type='NSIndexSet*' type='@' name='statusCodes'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' declared_type='dispatch_queue_t' type='@' name='failureCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' declared_type='dispatch_queue_t' type='@' name='successCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='automaticallyInflatesResponseImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='UIImage *(^)(UIImage *)' function_pointer='true' type='@?' name='imageProcessingBlock'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:success:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='void (^)(UIImage *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg index='0' declared_type='BOOL' type='B' name='automaticallyInflatesResponseImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScale:'>
<arg index='0' declared_type='CGFloat' type='f' name='imageScale' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='JSONRequestOperationWithRequest:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg index='0' declared_type='NSJSONReadingOptions' type='I' name='JSONReadingOptions' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='propertyListRequestOperationWithRequest:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' function_pointer='true' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg index='0' declared_type='NSPropertyListReadOptions' type='I' name='propertyListReadOptions' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' declared_type='BOOL' type='B' name='allowsInvalidSSLCertificate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg index='0' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg index='0' declared_type='NSURLCredential*' type='@' name='credential'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg index='0' declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg index='0' declared_type='NSInputStream*' type='@' name='inputStream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg index='0' declared_type='NSOutputStream*' type='@' name='outputStream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg index='0' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg index='0' declared_type='NSSet*' type='@' name='runLoopModes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg index='0' declared_type='AFURLConnectionOperationSSLPinningMode' type='i' name='SSLPinningMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg index='0' declared_type='void (^)(void)' function_pointer='true' type='@?' name='handler'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg index='0' declared_type='BOOL' type='B' name='shouldUseCredentialStorage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg index='0' declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg index='0' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method class_method='true' selector='XMLParserRequestOperationWithRequest:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='CustomBadge'>
<method selector='autoBadgeSizeWithString:'>
<arg index='0' declared_type='NSString*' type='@' name='badgeString'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='badgeCornerRoundness'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='badgeFrame'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='badgeFrameColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badgeInsetColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badgeScaleFactor'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='badgeShining'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='badgeText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='badgeTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='customBadgeWithString:'>
<arg index='0' declared_type='NSString*' type='@' name='badgeString'/>
<retval declared_type='CustomBadge*' type='@'/>
</method>
<method class_method='true' selector='customBadgeWithString:withStringColor:withInsetColor:withBadgeFrame:withBadgeFrameColor:withScale:withShining:'>
<arg index='0' declared_type='NSString*' type='@' name='badgeString'/>
<arg index='1' declared_type='UIColor*' type='@' name='stringColor'/>
<arg index='2' declared_type='UIColor*' type='@' name='insetColor'/>
<arg index='3' declared_type='BOOL' type='B' name='badgeFrameYesNo'/>
<arg index='4' declared_type='UIColor*' type='@' name='frameColor'/>
<arg index='5' declared_type='CGFloat' type='f' name='scale' type64='d'/>
<arg index='6' declared_type='BOOL' type='B' name='shining'/>
<retval declared_type='CustomBadge*' type='@'/>
</method>
<method selector='setBadgeCornerRoundness:'>
<arg index='0' declared_type='CGFloat' type='f' name='badgeCornerRoundness' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeFrame:'>
<arg index='0' declared_type='BOOL' type='B' name='badgeFrame'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeFrameColor:'>
<arg index='0' declared_type='UIColor*' type='@' name='badgeFrameColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeInsetColor:'>
<arg index='0' declared_type='UIColor*' type='@' name='badgeInsetColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeScaleFactor:'>
<arg index='0' declared_type='CGFloat' type='f' name='badgeScaleFactor' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeShining:'>
<arg index='0' declared_type='BOOL' type='B' name='badgeShining'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeText:'>
<arg index='0' declared_type='NSString*' type='@' name='badgeText'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeTextColor:'>
<arg index='0' declared_type='UIColor*' type='@' name='badgeTextColor'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSManagedObject'>
<method selector='hasBeenDeleted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNew'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='countForEntityForName:predicate:error:'>
<arg index='0' declared_type='NSString*' type='@' name='entityName'/>
<arg index='1' declared_type='NSPredicate*' type='@' name='predicate'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='insertNewObjectForEntityForName:'>
<arg index='0' declared_type='NSString*' type='@' name='entityName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='saveToPersistentStore:'>
<arg index='0' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSString*' type='@' name='fileName'/>
<arg index='3' declared_type='NSString*' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg index='0' declared_type='NSURL*' type='@' name='fileURL'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg index='0' declared_type='NSURL*' type='@' name='fileURL'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSString*' type='@' name='fileName'/>
<arg index='3' declared_type='NSString*' type='@' name='mimeType'/>
<arg index='4' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='headers'/>
<arg index='1' declared_type='NSData*' type='@' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg index='0' declared_type='NSInputStream*' type='@' name='inputStream'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSString*' type='@' name='fileName'/>
<arg index='3' declared_type='unsigned long long' type='Q' name='length'/>
<arg index='4' declared_type='NSString*' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='commitChangesForMappingOperation:error:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='dataFromObject:error:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='didCreateObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didDeleteObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didFetchObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<arg index='2' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='mapper:didFailMappingOperation:forKeyPath:withError:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='id' type='@' name='dictionaryOrArrayOfDictionaries'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didFinishMappingOperation:forKeyPath:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapper:willStartMappingOperation:forKeyPath:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidCancelMapping:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperDidFinishMapping:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapperWillStartMapping:'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='1' declared_type='RKRelationshipMapping*' type='@' name='relationshipMapping'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:didConnectRelationship:toValue:usingConnection:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<arg index='2' declared_type='id' type='@' name='value'/>
<arg index='3' declared_type='RKConnectionDescription*' type='@' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailToConnectRelationship:usingConnection:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<arg index='2' declared_type='RKConnectionDescription*' type='@' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFailWithError:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didFindValue:forKeyPath:mapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotFindValueForKeyPath:mapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='2' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<arg index='2' declared_type='RKDynamicMapping*' type='@' name='dynamicMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:didSetValue:forKeyPath:usingMapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='representation'/>
<arg index='2' declared_type='RKObjectMapping*' type='@' name='mapping'/>
<arg index='3' declared_type='RKRelationshipMapping*' type='@' name='relationshipMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingOperationShouldSetUnchangedValues:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mappingOperationShouldSkipPropertyMapping:'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='objectFromData:error:'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sidebar:didDismissFromScreenAnimated:'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sidebar:didEnable:itemAtIndex:'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='itemEnabled'/>
<arg index='2' declared_type='NSUInteger' type='I' name='index' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sidebar:didShowOnScreenAnimated:'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sidebar:didTapItemAtIndex:'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sidebar:willDismissFromScreenAnimated:'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sidebar:willShowOnScreenAnimated:'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg index='0' declared_type='NSUInteger' type='I' name='numberOfBytes' type64='Q'/>
<arg index='1' declared_type='NSTimeInterval' type='d' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transformValue:toValue:ofClass:error:'>
<arg index='0' declared_type='id' type='@' name='inputValue'/>
<arg index='1' declared_type='id*' type='^@' name='outputValue'/>
<arg index='2' declared_type='Class' type='#' name='outputValueClass'/>
<arg index='3' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateTransformationFromClass:toClass:'>
<arg index='0' declared_type='Class' type='#' name='inputValueClass'/>
<arg index='1' declared_type='Class' type='#' name='outputValueClass'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKAttributeMapping'>
<method class_method='true' selector='attributeMappingFromKeyPath:toKeyPath:'>
<arg index='0' declared_type='NSString*' type='@' name='sourceKeyPath'/>
<arg index='1' declared_type='NSString*' type='@' name='destinationKeyPath'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKBlockValueTransformer'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='valueTransformerWithValidationBlock:transformationBlock:'>
<arg index='0' declared_type='BOOL (^)(Class, Class)' function_pointer='true' type='@?' name='validationBlock'>
<arg declared_type='Class' type='#'/>
<arg declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<arg index='1' declared_type='BOOL (^)(id, id *, Class, NSError **)' function_pointer='true' type='@?' name='transformationBlock'>
<arg declared_type='id' type='@'/>
<arg declared_type='id*' type='^@'/>
<arg declared_type='Class' type='#'/>
<arg declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKCompoundValueTransformer'>
<method selector='addValueTransformer:'>
<arg index='0' declared_type='id' type='@' name='valueTransformer'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='compoundValueTransformerWithValueTransformers:'>
<arg index='0' declared_type='NSArray*' type='@' name='valueTransformers'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertValueTransformer:atIndex:'>
<arg index='0' declared_type='id' type='@' name='valueTransformer'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfValueTransformers'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='removeValueTransformer:'>
<arg index='0' declared_type='id' type='@' name='valueTransformer'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueTransformersForTransformingFromClass:toClass:'>
<arg index='0' declared_type='Class' type='#' name='inputValueClass'/>
<arg index='1' declared_type='Class' type='#' name='outputValueClass'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKConnectionDescription'>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='destinationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='includesSubentities'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRelationship:attributes:'>
<arg index='0' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='sourceToDestinationEntityAttributes'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRelationship:keyPath:'>
<arg index='0' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isForeignKeyConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isKeyPathConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='relationship'>
<retval declared_type='NSRelationshipDescription*' type='@'/>
</method>
<method selector='setDestinationPredicate:'>
<arg index='0' declared_type='NSPredicate*' type='@' name='destinationPredicate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludesSubentities:'>
<arg index='0' declared_type='BOOL' type='B' name='includesSubentities'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRelationship:'>
<arg index='0' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourcePredicate:'>
<arg index='0' declared_type='NSPredicate*' type='@' name='sourcePredicate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourcePredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
</class>
<class name='RKDotNetDateFormatter'>
<method selector='dateFromString:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='dotNetDateFormatterWithTimeZone:'>
<arg index='0' declared_type='NSTimeZone*' type='@' name='timeZone'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' declared_type='NSDate*' type='@' name='date'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKDynamicMapping'>
<method selector='addMatcher:'>
<arg index='0' declared_type='RKObjectMappingMatcher*' type='@' name='matcher'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='matchers'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectMappingForRepresentation:'>
<arg index='0' declared_type='id' type='@' name='representation'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='objectMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeMatcher:'>
<arg index='0' declared_type='RKObjectMappingMatcher*' type='@' name='matcher'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchers:'>
<arg index='0' declared_type='NSArray*' type='@' name='matchers'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMappingForRepresentationBlock:'>
<arg index='0' declared_type='RKObjectMapping *(^)(id)' function_pointer='true' type='@?' name='block'>
<arg declared_type='id' type='@'/>
<retval declared_type='RKObjectMapping*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityByAttributeCache'>
<method selector='addObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:completion:'>
<arg index='0' declared_type='NSSet*' type='@' name='managedObjects'/>
<arg index='1' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='callbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='containsObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsObjectWithAttributeValues:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfAttributeValues'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countWithAttributeValues:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush:'>
<arg index='0' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithEntity:attributes:managedObjectContext:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSArray*' type='@' name='attributeNames'/>
<arg index='2' declared_type='NSManagedObjectContext*' type='@' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load'>
<retval declared_type='void' type='v'/>
</method>
<method selector='load:'>
<arg index='0' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='monitorsContextForChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectWithAttributeValues:inContext:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<arg index='1' declared_type='NSManagedObjectContext*' type='@' name='context'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsWithAttributeValues:inContext:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<arg index='1' declared_type='NSManagedObjectContext*' type='@' name='context'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:completion:'>
<arg index='0' declared_type='NSSet*' type='@' name='managedObjects'/>
<arg index='1' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackQueue:'>
<arg index='0' declared_type='dispatch_queue_t' type='@' name='callbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorsContextForChanges:'>
<arg index='0' declared_type='BOOL' type='B' name='monitorsContextForChanges'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityCache'>
<method selector='addObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObjects:completion:'>
<arg index='0' declared_type='NSSet*' type='@' name='objects'/>
<arg index='1' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeCacheForEntity:attributes:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSArray*' type='@' name='attributeNames'/>
<retval declared_type='RKEntityByAttributeCache*' type='@'/>
</method>
<method selector='attributeCachesForEntity:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cacheObjectsForEntity:byAttributes:completion:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSArray*' type='@' name='attributeNames'/>
<arg index='2' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='callbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='containsObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='managedObject'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='flush:'>
<arg index='0' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='context'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEntity:cachedByAttributes:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSArray*' type='@' name='attributeNames'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='objectForEntity:withAttributeValues:inContext:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<arg index='2' declared_type='NSManagedObjectContext*' type='@' name='context'/>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='objectsForEntity:withAttributeValues:inContext:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<arg index='2' declared_type='NSManagedObjectContext*' type='@' name='context'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='removeObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjects:completion:'>
<arg index='0' declared_type='NSSet*' type='@' name='objects'/>
<arg index='1' declared_type='void (^)(void)' function_pointer='true' type='@?' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCallbackQueue:'>
<arg index='0' declared_type='dispatch_queue_t' type='@' name='callbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKEntityMapping'>
<method selector='addConnection:'>
<arg index='0' declared_type='RKConnectionDescription*' type='@' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addConnectionForRelationship:connectedBy:'>
<arg index='0' declared_type='id' type='@' name='relationshipOrName'/>
<arg index='1' declared_type='id' type='@' name='connectionSpecifier'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='connectionForRelationship:'>
<arg index='0' declared_type='id' type='@' name='relationshipOrName'/>
<retval declared_type='RKConnectionDescription*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg index='0' declared_type='NSString*' type='@' name='attributeName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='deletionPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='discardsInvalidObjectsOnInsert'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='entity'>
<retval declared_type='NSEntityDescription*' type='@'/>
</method>
<method selector='identificationAttributes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='identificationPredicate'>
<retval declared_type='NSPredicate*' type='@'/>
</method>
<method selector='initWithEntity:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='isEntityIdentificationInferenceEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='mappingForEntityForName:inManagedObjectStore:'>
<arg index='0' declared_type='NSString*' type='@' name='entityName'/>
<arg index='1' declared_type='RKManagedObjectStore*' type='@' name='managedObjectStore'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationAttribute'>
<retval declared_type='NSAttributeDescription*' type='@'/>
</method>
<method selector='modificationKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='removeConnection:'>
<arg index='0' declared_type='RKConnectionDescription*' type='@' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeletionPredicate:'>
<arg index='0' declared_type='NSPredicate*' type='@' name='deletionPredicate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDiscardsInvalidObjectsOnInsert:'>
<arg index='0' declared_type='BOOL' type='B' name='discardsInvalidObjectsOnInsert'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEntity:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setEntityIdentificationInferenceEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationAttributes:'>
<arg index='0' declared_type='NSArray*' type='@' name='identificationAttributes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentificationPredicate:'>
<arg index='0' declared_type='NSPredicate*' type='@' name='identificationPredicate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationAttribute:'>
<arg index='0' declared_type='NSAttributeDescription*' type='@' name='modificationAttribute'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationAttributeForName:'>
<arg index='0' declared_type='NSString*' type='@' name='attributeName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationKey:'>
<arg index='0' declared_type='NSString*' type='@' name='modificationKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg index='0' declared_type='NSPersistentStore*' type='@' name='persistentStore'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKErrorMessage'>
<method selector='errorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setErrorMessage:'>
<arg index='0' declared_type='NSString*' type='@' name='errorMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKHTTPRequestOperation'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg index='0' declared_type='NSSet*' type='@' name='acceptableContentTypes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg index='0' declared_type='NSIndexSet*' type='@' name='acceptableStatusCodes'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKISO8601DateFormatter'>
<method selector='dateComponentsFromString:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSDateComponents*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='defaultISO8601DateFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='format'>
<retval declared_type='RKISO8601DateFormat' type='I' type64='Q'/>
</method>
<method selector='includeTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='parsesStrictly'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setFormat:'>
<arg index='0' declared_type='RKISO8601DateFormat' type='I' name='format' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTime:'>
<arg index='0' declared_type='BOOL' type='B' name='includeTime'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg index='0' declared_type='NSLocale*' type='@' name='locale'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParsesStrictly:'>
<arg index='0' declared_type='BOOL' type='B' name='parsesStrictly'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeSeparator:'>
<arg index='0' declared_type='unichar' type='S' name='timeSeparator'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' declared_type='NSTimeZone*' type='@' name='timeZone'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' declared_type='NSDate*' type='@' name='date'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeSeparator'>
<retval declared_type='unichar' type='S'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
</class>
<class name='RKInMemoryManagedObjectCache'>
<method selector='initWithManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMIMETypeSerialization'>
<method class_method='true' selector='dataFromObject:MIMEType:error:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString*' type='@' name='MIMEType'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='objectFromData:MIMEType:error:'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSString*' type='@' name='MIMEType'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='registerClass:forMIMEType:'>
<arg index='0' declared_type='Class*' type='#' name='serializationClass'/>
<arg index='1' declared_type='id' type='@' name='MIMETypeStringOrRegularExpression'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='registeredMIMETypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='serializationClassForMIMEType:'>
<arg index='0' declared_type='NSString*' type='@' name='MIMEType'/>
<retval declared_type='Class*' type='#'/>
</method>
<method class_method='true' selector='unregisterClass:'>
<arg index='0' declared_type='Class*' type='#' name='serializationClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectImporter'>
<method selector='finishImporting:'>
<arg index='0' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='importObjectsFromItemAtPath:withMapping:keyPath:error:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='RKMapping*' type='@' name='mapping'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithManagedObjectModel:storePath:'>
<arg index='0' declared_type='NSManagedObjectModel*' type='@' name='managedObjectModel'/>
<arg index='1' declared_type='NSString*' type='@' name='storePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStore:'>
<arg index='0' declared_type='NSPersistentStore*' type='@' name='persistentStore'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logSeedingInfo'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method selector='persistentStore'>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='resetsStoreBeforeImporting'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' declared_type='NSManagedObjectModel*' type='@' name='managedObjectModel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStore:'>
<arg index='0' declared_type='NSPersistentStore*' type='@' name='persistentStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetsStoreBeforeImporting:'>
<arg index='0' declared_type='BOOL' type='B' name='resetsStoreBeforeImporting'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStorePath:'>
<arg index='0' declared_type='NSString*' type='@' name='storePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storePath'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RKManagedObjectMappingOperationDataSource'>
<method selector='initWithManagedObjectContext:cache:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<arg index='1' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parentOperation'>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' declared_type='NSOperationQueue*' type='@' name='operationQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentOperation:'>
<arg index='0' declared_type='NSOperation*' type='@' name='parentOperation'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectRequestOperation'>
<method selector='deletesOrphanedObjects'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='savesToPersistentStore'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDeletesOrphanedObjects:'>
<arg index='0' declared_type='BOOL' type='B' name='deletesOrphanedObjects'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' declared_type='NSArray*' type='@' name='fetchRequestBlocks'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSavesToPersistentStore:'>
<arg index='0' declared_type='BOOL' type='B' name='savesToPersistentStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSaveMappingContextBlock:'>
<arg index='0' declared_type='void (^)(NSManagedObjectContext *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSManagedObjectContext*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKManagedObjectResponseMapperOperation'>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObjectID:'>
<arg index='0' declared_type='NSManagedObjectID*' type='@' name='targetObjectID'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObjectID'>
<retval declared_type='NSManagedObjectID*' type='@'/>
</method>
</class>
<class name='RKManagedObjectStore'>
<method selector='addInMemoryPersistentStore:'>
<arg index='0' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='addSQLitePersistentStoreAtPath:fromSeedDatabaseAtPath:withConfiguration:options:error:'>
<arg index='0' declared_type='NSString*' type='@' name='storePath'/>
<arg index='1' declared_type='NSString*' type='@' name='seedPath'/>
<arg index='2' declared_type='NSString*' type='@' name='nilOrConfigurationName'/>
<arg index='3' declared_type='NSDictionary*' type='@' name='nilOrOptions'/>
<arg index='4' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSPersistentStore*' type='@'/>
</method>
<method selector='createManagedObjectContexts'>
<retval declared_type='void' type='v'/>
</method>
<method selector='createPersistentStoreCoordinator'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultStore'>
<retval declared_type='id' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithManagedObjectModel:'>
<arg index='0' declared_type='NSManagedObjectModel*' type='@' name='managedObjectModel'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPersistentStoreCoordinator:'>
<arg index='0' declared_type='NSPersistentStoreCoordinator*' type='@' name='persistentStoreCoordinator'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainQueueManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectModel'>
<retval declared_type='NSManagedObjectModel*' type='@'/>
</method>
<method class_method='true' selector='migratePersistentStoreOfType:atURL:toModelAtURL:error:configuringModelsWithBlock:'>
<arg index='0' declared_type='NSString*' type='@' name='storeType'/>
<arg index='1' declared_type='NSURL*' type='@' name='storeURL'/>
<arg index='2' declared_type='NSURL*' type='@' name='destinationModelURL'/>
<arg index='3' declared_type='NSError**' type='^@' name='error'/>
<arg index='4' declared_type='void (^)(NSManagedObjectModel *, NSURL *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSManagedObjectModel*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:'>
<arg index='0' declared_type='NSManagedObjectContextConcurrencyType' type='I' name='concurrencyType' type64='Q'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='newChildManagedObjectContextWithConcurrencyType:tracksChanges:'>
<arg index='0' declared_type='NSManagedObjectContextConcurrencyType' type='I' name='concurrencyType' type64='Q'/>
<arg index='1' declared_type='BOOL' type='B' name='tracksChanges'/>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='persistentStoreCoordinator'>
<retval declared_type='NSPersistentStoreCoordinator*' type='@'/>
</method>
<method selector='persistentStoreManagedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='resetPersistentStores:'>
<arg index='0' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setDefaultStore:'>
<arg index='0' declared_type='RKManagedObjectStore*' type='@' name='managedObjectStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMainQueueManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='mainQueueManagedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectModel:'>
<arg index='0' declared_type='NSManagedObjectModel*' type='@' name='managedObjectModel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreCoordinator:'>
<arg index='0' declared_type='NSPersistentStoreCoordinator*' type='@' name='persistentStoreCoordinator'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPersistentStoreManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='persistentStoreManagedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMapperOperation'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='execute:'>
<arg index='0' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRepresentation:mappingsDictionary:'>
<arg index='0' declared_type='id' type='@' name='representation'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='mappingsDictionary'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:atKeyPath:usingMapping:'>
<arg index='0' declared_type='id' type='@' name='mappableObject'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='2' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapRepresentation:toObject:atKeyPath:usingMapping:metadata:'>
<arg index='0' declared_type='id' type='@' name='mappableObject'/>
<arg index='1' declared_type='id' type='@' name='destinationObject'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKMapping*' type='@' name='mapping'/>
<arg index='4' declared_type='NSDictionary*' type='@' name='metadata'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapRepresentations:atKeyPath:usingMapping:'>
<arg index='0' declared_type='NSArray*' type='@' name='mappableObjects'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='2' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingOperationDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='mappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectForRepresentation:withMapping:'>
<arg index='0' declared_type='id' type='@' name='representation'/>
<arg index='1' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='representation'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingOperationDataSource:'>
<arg index='0' declared_type='id' type='@' name='mappingOperationDataSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' declared_type='RKMappingResult*' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingsDictionary:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='mappingsDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='metadata'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRepresentation:'>
<arg index='0' declared_type='id' type='@' name='representation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' declared_type='id' type='@' name='targetObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMapping'>
<method selector='forceCollectionMapping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' declared_type='RKMapping*' type='@' name='otherMapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setForceCollectionMapping:'>
<arg index='0' declared_type='BOOL' type='B' name='forceCollectionMapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingInfo'>
<method selector='dynamicMapping'>
<retval declared_type='RKDynamicMapping*' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg index='0' declared_type='id' type='@' name='key'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='relationshipMappingInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setDynamicMapping:'>
<arg index='0' declared_type='RKDynamicMapping*' type='@' name='dynamicMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKMappingOperation'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='destinationObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithSourceObject:destinationObject:mapping:'>
<arg index='0' declared_type='id' type='@' name='sourceObject'/>
<arg index='1' declared_type='id' type='@' name='destinationObject'/>
<arg index='2' declared_type='RKMapping*' type='@' name='objectOrDynamicMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='mappingInfo'>
<retval declared_type='RKMappingInfo*' type='@'/>
</method>
<method selector='metadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='performMapping:'>
<arg index='0' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDataSource:'>
<arg index='0' declared_type='id' type='@' name='dataSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationObject:'>
<arg index='0' declared_type='id' type='@' name='destinationObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetadata:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='metadata'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceObject:'>
<arg index='0' declared_type='id' type='@' name='sourceObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKMappingResult'>
<method selector='array'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='dictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='firstObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='set'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKObjectManager'>
<method selector='HTTPClient'>
<retval declared_type='AFHTTPClient*' type='@'/>
</method>
<method selector='addFetchRequestBlock:'>
<arg index='0' declared_type='NSFetchRequest *(^)(NSURL *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSFetchRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptor:'>
<arg index='0' declared_type='RKRequestDescriptor*' type='@' name='requestDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRequestDescriptorsFromArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='requestDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptor:'>
<arg index='0' declared_type='RKResponseDescriptor*' type='@' name='responseDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addResponseDescriptorsFromArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appropriateObjectRequestOperationWithObject:method:path:parameters:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='2' declared_type='NSString*' type='@' name='path'/>
<arg index='3' declared_type='NSDictionary*' type='@' name='parameters'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg index='0' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='1' declared_type='NSString*' type='@' name='pathPattern'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defaultHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='deleteObject:path:parameters:success:failure:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperations:progress:completion:'>
<arg index='0' declared_type='NSArray*' type='@' name='operations'/>
<arg index='1' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' type='@?' name='progress'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(NSArray *)' function_pointer='true' type='@?' name='completion'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfObjectRequestOperationsWithRoute:objects:progress:completion:'>
<arg index='0' declared_type='RKRoute*' type='@' name='route'/>
<arg index='1' declared_type='NSArray*' type='@' name='objects'/>
<arg index='2' declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' type='@?' name='progress'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(NSArray *)' function_pointer='true' type='@?' name='completion'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueObjectRequestOperation:'>
<arg index='0' declared_type='RKObjectRequestOperation*' type='@' name='objectRequestOperation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueuedObjectRequestOperationsWithMethod:matchingPathPattern:'>
<arg index='0' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='1' declared_type='NSString*' type='@' name='pathPattern'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getObject:path:parameters:success:failure:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPath:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='2' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRelationship:ofObject:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='relationshipName'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getObjectsAtPathForRouteNamed:object:parameters:success:failure:'>
<arg index='0' declared_type='NSString*' type='@' name='routeName'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithHTTPClient:'>
<arg index='0' declared_type='AFHTTPClient*' type='@' name='client'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectRequestOperationWithRequest:managedObjectContext:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<arg index='1' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<arg index='2' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKManagedObjectRequestOperation*' type='@'/>
</method>
<method selector='managedObjectStore'>
<retval declared_type='RKManagedObjectStore*' type='@'/>
</method>
<method class_method='true' selector='managerWithBaseURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithObject:method:path:parameters:constructingBodyWithBlock:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='2' declared_type='NSString*' type='@' name='path'/>
<arg index='3' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='4' declared_type='void (^)(id)' function_pointer='true' type='@?' name='block'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='objectRequestOperationWithRequest:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<arg index='1' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='paginatorWithPathPattern:'>
<arg index='0' declared_type='NSString*' type='@' name='pathPattern'/>
<retval declared_type='RKPaginator*' type='@'/>
</method>
<method selector='patchObject:path:parameters:success:failure:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postObject:path:parameters:success:failure:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putObject:path:parameters:success:failure:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString*' type='@' name='path'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<arg index='3' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='4' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerRequestOperationClass:'>
<arg index='0' declared_type='Class' type='#' name='operationClass'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeRequestDescriptor:'>
<arg index='0' declared_type='RKRequestDescriptor*' type='@' name='requestDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeResponseDescriptor:'>
<arg index='0' declared_type='RKResponseDescriptor*' type='@' name='responseDescriptor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestSerializationMIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requestWithObject:method:path:parameters:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='2' declared_type='NSString*' type='@' name='path'/>
<arg index='3' declared_type='NSDictionary*' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRelationship:ofObject:method:parameters:'>
<arg index='0' declared_type='NSString*' type='@' name='relationship'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='3' declared_type='NSDictionary*' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithPathForRouteNamed:object:parameters:'>
<arg index='0' declared_type='NSString*' type='@' name='routeName'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='NSDictionary*' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='router'>
<retval declared_type='RKRouter*' type='@'/>
</method>
<method selector='setAcceptHeaderWithMIMEType:'>
<arg index='0' declared_type='NSString*' type='@' name='MIMEType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPClient:'>
<arg index='0' declared_type='AFHTTPClient*' type='@' name='HTTPClient'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectStore:'>
<arg index='0' declared_type='RKManagedObjectStore*' type='@' name='managedObjectStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' declared_type='NSOperationQueue*' type='@' name='operationQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg index='0' declared_type='RKObjectMapping*' type='@' name='paginationMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializationMIMEType:'>
<arg index='0' declared_type='NSString*' type='@' name='requestSerializationMIMEType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouter:'>
<arg index='0' declared_type='RKRouter*' type='@' name='router'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedManager:'>
<arg index='0' declared_type='RKObjectManager*' type='@' name='manager'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='unregisterRequestOperationClass:'>
<arg index='0' declared_type='Class' type='#' name='operationClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectMapping'>
<method selector='addAttributeMappingFromKeyOfRepresentationToAttribute:'>
<arg index='0' declared_type='NSString*' type='@' name='attributeName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingToKeyOfRepresentationFromAttribute:'>
<arg index='0' declared_type='NSString*' type='@' name='attributeName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfAttributeNamesOrMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAttributeMappingsFromDictionary:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='keyPathToAttributeNames'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addDefaultDateFormatter:'>
<arg index='0' declared_type='NSFormatter*' type='@' name='dateFormatter'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addDefaultDateFormatterForString:inTimeZone:'>
<arg index='0' declared_type='NSString*' type='@' name='dateFormatString'/>
<arg index='1' declared_type='NSTimeZone*' type='@' name='nilOrTimeZone'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMapping:'>
<arg index='0' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPropertyMappingsFromArray:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfPropertyMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRelationshipMappingWithSourceKeyPath:mapping:'>
<arg index='0' declared_type='NSString*' type='@' name='sourceKeyPath'/>
<arg index='1' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='assignsDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='assignsNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributeMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classForKeyPath:'>
<arg index='0' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForProperty:'>
<arg index='0' declared_type='NSString*' type='@' name='propertyName'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='dateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='defaultDateFormatters'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='defaultValueForAttribute:'>
<arg index='0' declared_type='NSString*' type='@' name='attributeName'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMapping'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inverseMappingWithPropertyMappingsPassingTest:'>
<arg index='0' declared_type='BOOL (^)(RKPropertyMapping *)' function_pointer='true' type='@?' name='predicate'>
<arg declared_type='RKPropertyMapping*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mappingForClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForDestinationKeyPath:'>
<arg index='0' declared_type='NSString*' type='@' name='destinationKeyPath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingForSourceKeyPath:'>
<arg index='0' declared_type='NSString*' type='@' name='sourceKeyPath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='performKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='performsKeyValueValidation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='preferredDateFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='propertyMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='propertyMappingsByDestinationKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyMappingsBySourceKeyPath'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='relationshipMappings'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removePropertyMapping:'>
<arg index='0' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='requestMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setAssignsDefaultValueForMissingAttributes:'>
<arg index='0' declared_type='BOOL' type='B' name='assignsDefaultValueForMissingAttributes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAssignsNilForMissingRelationships:'>
<arg index='0' declared_type='BOOL' type='B' name='assignsNilForMissingRelationships'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormatters:'>
<arg index='0' declared_type='NSArray*' type='@' name='dateFormatters'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultDateFormatters:'>
<arg index='0' declared_type='NSArray*' type='@' name='dateFormatters'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setDefaultSourceToDestinationKeyTransformationBlock:'>
<arg index='0' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNilForMissingRelationships'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformKeyValueValidation:'>
<arg index='0' declared_type='BOOL' type='B' name='performKeyValueValidation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerformsKeyValueValidation:'>
<arg index='0' declared_type='BOOL' type='B' name='performsKeyValueValidation'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setPreferredDateFormatter:'>
<arg index='0' declared_type='NSFormatter*' type='@' name='dateFormatter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredDateFormatter:'>
<arg index='0' declared_type='NSFormatter*' type='@' name='preferredDateFormatter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyMappings:'>
<arg index='0' declared_type='NSArray*' type='@' name='propertyMappings'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetDefaultValueForMissingAttributes:'>
<arg index='0' declared_type='BOOL' type='B' name='setDefaultValueForMissingAttributes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSetNilForMissingRelationships:'>
<arg index='0' declared_type='BOOL' type='B' name='setNilForMissingRelationships'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceToDestinationKeyTransformationBlock:'>
<arg index='0' declared_type='NSString *(^)(RKObjectMapping *, NSString *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='RKObjectMapping*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueTransformer:'>
<arg index='0' declared_type='id' type='@' name='valueTransformer'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldSetDefaultValueForMissingAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKObjectMappingMatcher'>
<method class_method='true' selector='matcherWithKeyPath:expectedValue:objectMapping:'>
<arg index='0' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='1' declared_type='id' type='@' name='expectedValue'/>
<arg index='2' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='matcherWithPredicate:objectMapping:'>
<arg index='0' declared_type='NSPredicate*' type='@' name='predicate'/>
<arg index='1' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='matches:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKObjectParameterization'>
<method class_method='true' selector='parametersWithObject:requestDescriptor:error:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='RKRequestDescriptor*' type='@' name='requestDescriptor'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKObjectRequestOperation'>
<method selector='HTTPRequestOperation'>
<retval declared_type='RKHTTPRequestOperation*' type='@'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='initWithHTTPRequestOperation:responseDescriptors:'>
<arg index='0' declared_type='RKHTTPRequestOperation*' type='@' name='requestOperation'/>
<arg index='1' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRequest:responseDescriptors:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<arg index='1' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='performMappingOnResponseWithCompletionBlock:'>
<arg index='0' declared_type='void (^)(RKMappingResult *, NSError *)' function_pointer='true' type='@?' name='completionBlock'>
<arg declared_type='RKMappingResult*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='responseMappingQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' declared_type='void (^)(RKObjectRequestOperation *, RKMappingResult *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='RKMappingResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='void (^)(RKObjectRequestOperation *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKObjectRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' declared_type='dispatch_queue_t' type='@' name='failureCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPRequestOperation:'>
<arg index='0' declared_type='RKHTTPRequestOperation*' type='@' name='HTTPRequestOperation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='mappingMetadata'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' declared_type='RKMappingResult*' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' declared_type='dispatch_queue_t' type='@' name='successCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' declared_type='id' type='@' name='targetObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg index='0' declared_type='id (^)(id)' function_pointer='true' type='@?' name='block'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='willFinish'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPaginator'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='currentPage'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='fetchRequestBlocks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='hasNextPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasObjectCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPageCount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasPreviousPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithRequest:paginationMapping:responseDescriptors:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<arg index='1' declared_type='RKObjectMapping*' type='@' name='paginationMapping'/>
<arg index='2' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isLoaded'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadNextPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPage:'>
<arg index='0' declared_type='NSUInteger' type='I' name='pageNumber' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadPreviousPage'>
<retval declared_type='void' type='v'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObjectContext'>
<retval declared_type='NSManagedObjectContext*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='objectCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='objectRequestOperation'>
<retval declared_type='RKObjectRequestOperation*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='pageCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='paginationMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='patternURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='perPage'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' declared_type='void (^)(RKPaginator *, NSArray *, NSUInteger)' function_pointer='true' type='@?' name='success'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSArray*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' declared_type='void (^)(RKPaginator *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='RKPaginator*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFetchRequestBlocks:'>
<arg index='0' declared_type='NSArray*' type='@' name='fetchRequestBlocks'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPOperationClass:'>
<arg index='0' declared_type='Class' type='#' name='operationClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' declared_type='RKMappingResult*' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectRequestOperation:'>
<arg index='0' declared_type='RKObjectRequestOperation*' type='@' name='objectRequestOperation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg index='0' declared_type='NSOperationQueue*' type='@' name='operationQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaginationMapping:'>
<arg index='0' declared_type='RKObjectMapping*' type='@' name='paginationMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPerPage:'>
<arg index='0' declared_type='NSUInteger' type='I' name='perPage' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKPathMatcher'>
<method selector='matchesPath:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' declared_type='NSString*' type='@' name='pathString'/>
<arg index='1' declared_type='BOOL' type='B' name='shouldTokenize'/>
<arg index='2' declared_type='NSDictionary**' type='^@' name='arguments'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesPattern:tokenizeQueryStrings:parsedArguments:'>
<arg index='0' declared_type='NSString*' type='@' name='patternString'/>
<arg index='1' declared_type='BOOL' type='B' name='shouldTokenize'/>
<arg index='2' declared_type='NSDictionary**' type='^@' name='arguments'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pathFromObject:addingEscapes:interpolatedParameters:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='BOOL' type='B' name='addEscapes'/>
<arg index='2' declared_type='NSDictionary**' type='^@' name='interpolatedParameters'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='pathMatcherWithPath:'>
<arg index='0' declared_type='NSString*' type='@' name='pathString'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='pathMatcherWithPattern:'>
<arg index='0' declared_type='NSString*' type='@' name='patternString'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='queryParameters'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='RKPropertyInspector'>
<method selector='classForPropertyNamed:ofClass:isPrimitive:'>
<arg index='0' declared_type='NSString*' type='@' name='propertyName'/>
<arg index='1' declared_type='Class' type='#' name='objectClass'/>
<arg index='2' declared_type='BOOL*' type='^B' name='isPrimitive'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='classForPropertyNamed:ofEntity:'>
<arg index='0' declared_type='NSString*' type='@' name='propertyName'/>
<arg index='1' declared_type='NSEntityDescription*' type='@' name='entity'/>
<retval declared_type='Class' type='#'/>
</method>
<method selector='propertyInspectionForClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='propertyInspectionForEntity:'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='sharedInspector'>
<retval declared_type='RKPropertyInspector*' type='@'/>
</method>
</class>
<class name='RKPropertyMapping'>
<method selector='destinationKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='isEqualToMapping:'>
<arg index='0' declared_type='RKPropertyMapping*' type='@' name='otherMapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectMapping'>
<retval declared_type='RKObjectMapping*' type='@'/>
</method>
<method selector='propertyValueClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='setObjectMapping:'>
<arg index='0' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyValueClass:'>
<arg index='0' declared_type='Class' type='#' name='propertyValueClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValueTransformer:'>
<arg index='0' declared_type='id' type='@' name='valueTransformer'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RKRelationshipConnectionOperation'>
<method selector='connectedValuesByRelationshipName'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='connections'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithManagedObject:connections:managedObjectCache:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='managedObject'/>
<arg index='1' declared_type='NSArray*' type='@' name='connections'/>
<arg index='2' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='managedObject'>
<retval declared_type='NSManagedObject*' type='@'/>
</method>
<method selector='managedObjectCache'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setConnectedValuesByRelationshipName:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='connectedValuesByRelationshipName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnectionBlock:'>
<arg index='0' declared_type='void (^)(RKRelationshipConnectionOperation *, RKConnectionDescription *, id)' function_pointer='true' type='@?' name='block'>
<arg declared_type='RKRelationshipConnectionOperation*' type='@'/>
<arg declared_type='RKConnectionDescription*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConnections:'>
<arg index='0' declared_type='NSArray*' type='@' name='connections'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObject:'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='managedObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setManagedObjectCache:'>
<arg index='0' declared_type='id' type='@' name='managedObjectCache'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRelationshipMapping'>
<method selector='assignmentPolicy'>
<retval declared_type='RKAssignmentPolicy' type='i'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method class_method='true' selector='relationshipMappingFromKeyPath:toKeyPath:withMapping:'>
<arg index='0' declared_type='NSString*' type='@' name='sourceKeyPath'/>
<arg index='1' declared_type='NSString*' type='@' name='destinationKeyPath'/>
<arg index='2' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAssignmentPolicy:'>
<arg index='0' declared_type='RKAssignmentPolicy' type='i' name='assignmentPolicy'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKRequestDescriptor'>
<method selector='isEqualToRequestDescriptor:'>
<arg index='0' declared_type='RKRequestDescriptor*' type='@' name='otherDescriptor'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='requestDescriptorWithMapping:objectClass:rootKeyPath:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<arg index='1' declared_type='Class' type='#' name='objectClass'/>
<arg index='2' declared_type='NSString*' type='@' name='rootKeyPath'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='requestDescriptorWithMapping:objectClass:rootKeyPath:method:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<arg index='1' declared_type='Class' type='#' name='objectClass'/>
<arg index='2' declared_type='NSString*' type='@' name='rootKeyPath'/>
<arg index='3' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rootKeyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setMapping:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKResponseDescriptor'>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='isEqualToResponseDescriptor:'>
<arg index='0' declared_type='RKResponseDescriptor*' type='@' name='otherDescriptor'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='keyPath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mapping'>
<retval declared_type='RKMapping*' type='@'/>
</method>
<method selector='matchesPath:'>
<arg index='0' declared_type='NSString*' type='@' name='path'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesResponse:'>
<arg index='0' declared_type='NSHTTPURLResponse*' type='@' name='response'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='matchesURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='URL'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='responseDescriptorWithMapping:method:pathPattern:keyPath:statusCodes:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<arg index='2' declared_type='NSString*' type='@' name='pathPattern'/>
<arg index='3' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='4' declared_type='NSIndexSet*' type='@' name='statusCodes'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='responseDescriptorWithMapping:pathPattern:keyPath:statusCodes:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<arg index='1' declared_type='NSString*' type='@' name='pathPattern'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='NSIndexSet*' type='@' name='statusCodes'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapping:'>
<arg index='0' declared_type='RKMapping*' type='@' name='mapping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
</class>
<class name='RKResponseMapperOperation'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:response:data:responseDescriptors:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<arg index='1' declared_type='NSHTTPURLResponse*' type='@' name='response'/>
<arg index='2' declared_type='NSData*' type='@' name='data'/>
<arg index='3' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapperDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='mappingMetadata'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='mappingResult'>
<retval declared_type='RKMappingResult*' type='@'/>
</method>
<method selector='matchingResponseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='registerMappingOperationDataSourceClass:'>
<arg index='0' declared_type='Class*' type='#' name='dataSourceClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseDescriptors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='responseMappingsDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setData:'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishMappingBlock:'>
<arg index='0' declared_type='void (^)(RKMappingResult *, NSError *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='RKMappingResult*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setError:'>
<arg index='0' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapperDelegate:'>
<arg index='0' declared_type='id' type='@' name='mapperDelegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingMetadata:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='mappingMetadata'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMappingResult:'>
<arg index='0' declared_type='RKMappingResult*' type='@' name='mappingResult'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatchingResponseDescriptors:'>
<arg index='0' declared_type='NSArray*' type='@' name='matchingResponseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequest:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='request'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponse:'>
<arg index='0' declared_type='NSHTTPURLResponse*' type='@' name='response'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseDescriptors:'>
<arg index='0' declared_type='NSArray*' type='@' name='responseDescriptors'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseMappingsDictionary:'>
<arg index='0' declared_type='NSDictionary*' type='@' name='responseMappingsDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTargetObject:'>
<arg index='0' declared_type='id' type='@' name='targetObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTreatsEmptyResponseAsSuccess:'>
<arg index='0' declared_type='BOOL' type='B' name='treatsEmptyResponseAsSuccess'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillMapDeserializedResponseBlock:'>
<arg index='0' declared_type='id (^)(id)' function_pointer='true' type='@?' name='block'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='targetObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='treatsEmptyResponseAsSuccess'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRoute'>
<method selector='isClassRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNamedRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isRelationshipRoute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='method'>
<retval declared_type='RKRequestMethod' type='i' type64='q'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='objectClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='pathPattern'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='routeWithClass:pathPattern:method:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<arg index='1' declared_type='NSString*' type='@' name='pathPattern'/>
<arg index='2' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='routeWithName:pathPattern:method:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<arg index='1' declared_type='NSString*' type='@' name='pathPattern'/>
<arg index='2' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='routeWithRelationshipName:objectClass:pathPattern:method:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<arg index='1' declared_type='Class' type='#' name='objectClass'/>
<arg index='2' declared_type='NSString*' type='@' name='pathPattern'/>
<arg index='3' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPathPattern:'>
<arg index='0' declared_type='NSString*' type='@' name='pathPattern'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldEscapePath:'>
<arg index='0' declared_type='BOOL' type='B' name='shouldEscapePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldEscapePath'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RKRouteSet'>
<method selector='addRoute:'>
<arg index='0' declared_type='RKRoute*' type='@' name='route'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addRoutes:'>
<arg index='0' declared_type='NSArray*' type='@' name='routes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='classRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='containsRoute:'>
<arg index='0' declared_type='RKRoute*' type='@' name='route'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='namedRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='relationshipRoutes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeRoute:'>
<arg index='0' declared_type='RKRoute*' type='@' name='route'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='routeForClass:method:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForObject:method:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routeForRelationship:ofClass:method:'>
<arg index='0' declared_type='NSString*' type='@' name='relationship'/>
<arg index='1' declared_type='Class' type='#' name='objectClass'/>
<arg index='2' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='RKRoute*' type='@'/>
</method>
<method selector='routesForClass:'>
<arg index='0' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='routesForRelationship:ofClass:'>
<arg index='0' declared_type='NSString*' type='@' name='relationshipName'/>
<arg index='1' declared_type='Class' type='#' name='objectClass'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RKRouter'>
<method selector='URLForObject:method:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRelationship:ofObject:method:'>
<arg index='0' declared_type='NSString*' type='@' name='relationshipName'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='RKRequestMethod' type='i' name='method' type64='q'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLForRouteNamed:method:object:'>
<arg index='0' declared_type='NSString*' type='@' name='routeName'/>
<arg index='1' declared_type='RKRequestMethod*' type='^i' name='method' type_modifier='o' type64='^q'/>
<arg index='2' declared_type='id' type='@' name='object'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLWithRoute:object:'>
<arg index='0' declared_type='RKRoute*' type='@' name='route'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='routeSet'>
<retval declared_type='RKRouteSet*' type='@'/>
</method>
<method selector='setBaseURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='baseURL'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRouteSet:'>
<arg index='0' declared_type='RKRouteSet*' type='@' name='routeSet'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RKStringTokenizer'>
<method selector='setStopWords:'>
<arg index='0' declared_type='NSSet*' type='@' name='stopWords'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopWords'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='tokenize:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='RKValueTransformer'>
<method class_method='true' selector='arrayToOrderedSetValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='arrayToSetValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decimalNumberToNumberValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='decimalNumberToStringValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='defaultValueTransformer'>
<retval declared_type='RKCompoundValueTransformer*' type='@'/>
</method>
<method class_method='true' selector='identityValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='iso8601TimestampToDateValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='keyOfDictionaryValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='keyedArchivingValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='mutableValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='nullValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numberToStringValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='objectToCollectionValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='setDefaultValueTransformer:'>
<arg index='0' declared_type='RKCompoundValueTransformer*' type='@' name='compoundValueTransformer'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stringToURLValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='stringValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='timeIntervalSince1970ToDateValueTransformer'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RNFrostedSidebar'>
<method selector='animationDuration'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='borderWidth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='contentView'>
<retval declared_type='UIScrollView*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method selector='dismissAnimated:'>
<arg index='0' declared_type='BOOL' type='B' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithImages:'>
<arg index='0' declared_type='NSArray*' type='@' name='images'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithImages:selectedIndices:'>
<arg index='0' declared_type='NSArray*' type='@' name='images'/>
<arg index='1' declared_type='NSIndexSet*' type='@' name='selectedIndices'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithImages:selectedIndices:borderColors:'>
<arg index='0' declared_type='NSArray*' type='@' name='images'/>
<arg index='1' declared_type='NSIndexSet*' type='@' name='selectedIndices'/>
<arg index='2' declared_type='NSArray*' type='@' name='colors'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='itemBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='itemSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='setAnimationDuration:'>
<arg index='0' declared_type='CGFloat' type='f' name='animationDuration' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg index='0' declared_type='NSUInteger' type='I' name='borderWidth' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg index='0' declared_type='UIScrollView*' type='@' name='contentView'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemBackgroundColor:'>
<arg index='0' declared_type='UIColor*' type='@' name='itemBackgroundColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemSize:'>
<arg index='0' declared_type='CGSize' type='{CGSize=ff}' name='itemSize' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowFromRight:'>
<arg index='0' declared_type='BOOL' type='B' name='showFromRight'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTintColor:'>
<arg index='0' declared_type='UIColor*' type='@' name='tintColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg index='0' declared_type='CGFloat' type='f' name='width' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:'>
<arg index='0' declared_type='BOOL' type='B' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showFromRight'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showInViewController:animated:'>
<arg index='0' declared_type='UIViewController*' type='@' name='controller'/>
<arg index='1' declared_type='BOOL' type='B' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='visibleSidebar'>
<retval declared_type='id' type='@'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
</class>
<class name='SOCPattern'>
<method selector='initWithString:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameterDictionaryFromSourceString:'>
<arg index='0' declared_type='NSString*' type='@' name='sourceString'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='patternWithString:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='performSelector:onObject:sourceString:'>
<arg index='0' declared_type='SEL' type=':' name='selector'/>
<arg index='1' declared_type='id' type='@' name='object'/>
<arg index='2' declared_type='NSString*' type='@' name='sourceString'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='stringFromObject:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromObject:withBlock:'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSString *(^)(NSString *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringMatches:'>
<arg index='0' declared_type='NSString*' type='@' name='string'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='TKEvent'>
<method selector='destinationState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method class_method='true' selector='eventWithName:transitioningFromStates:toState:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<arg index='1' declared_type='NSArray*' type='@' name='sourceStates'/>
<arg index='2' declared_type='TKState*' type='@' name='destinationState'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDestinationState:'>
<arg index='0' declared_type='TKState*' type='@' name='destinationState'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFireEventBlock:'>
<arg index='0' declared_type='void (^)(TKEvent *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldFireEventBlock:'>
<arg index='0' declared_type='BOOL (^)(TKEvent *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillFireEventBlock:'>
<arg index='0' declared_type='void (^)(TKEvent *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKEvent*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceStates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='TKState'>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDidEnterStateBlock:'>
<arg index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidExitStateBlock:'>
<arg index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillEnterStateBlock:'>
<arg index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillExitStateBlock:'>
<arg index='0' declared_type='void (^)(TKState *, TKStateMachine *)' function_pointer='true' type='@?' name='block'>
<arg declared_type='TKState*' type='@'/>
<arg declared_type='TKStateMachine*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='stateWithName:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TKStateMachine'>
<method selector='activate'>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEvent:'>
<arg index='0' declared_type='TKEvent*' type='@' name='event'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEvents:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfEvents'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addState:'>
<arg index='0' declared_type='TKState*' type='@' name='state'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addStates:'>
<arg index='0' declared_type='NSArray*' type='@' name='arrayOfStates'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canFireEvent:'>
<arg index='0' declared_type='id' type='@' name='eventOrEventName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='eventNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='TKEvent*' type='@'/>
</method>
<method selector='events'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='fireEvent:error:'>
<arg index='0' declared_type='id' type='@' name='eventOrEventName'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initialState'>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='isActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInState:'>
<arg index='0' declared_type='id' type='@' name='stateOrStateName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCurrentState:'>
<arg index='0' declared_type='TKState*' type='@' name='currentState'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInitialState:'>
<arg index='0' declared_type='TKState*' type='@' name='initialState'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stateNamed:'>
<arg index='0' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='TKState*' type='@'/>
</method>
<method selector='states'>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg index='0' declared_type='NSURL*' type='@' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg index='0' declared_type='NSURL*' type='@' name='url'/>
<arg index='1' declared_type='UIImage*' type='@' name='placeholderImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg index='0' declared_type='NSURLRequest*' type='@' name='urlRequest'/>
<arg index='1' declared_type='UIImage*' type='@' name='placeholderImage'/>
<arg index='2' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' selector='appendPartWithFileData:name:fileName:mimeType:' type64='v48@0:8@16@24@32@40'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSString*' type='@' name='fileName'/>
<arg index='3' declared_type='NSString*' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B20@0:4@8@12^@16' selector='appendPartWithFileURL:name:error:' type64='B40@0:8@16@24^@32'>
<arg index='0' declared_type='NSURL*' type='@' name='fileURL'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B28@0:4@8@12@16@20^@24' selector='appendPartWithFileURL:name:fileName:mimeType:error:' type64='B56@0:8@16@24@32@40^@48'>
<arg index='0' declared_type='NSURL*' type='@' name='fileURL'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSString*' type='@' name='fileName'/>
<arg index='3' declared_type='NSString*' type='@' name='mimeType'/>
<arg index='4' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithFormData:name:' type64='v32@0:8@16@24'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithHeaders:body:' type64='v32@0:8@16@24'>
<arg index='0' declared_type='NSDictionary*' type='@' name='headers'/>
<arg index='1' declared_type='NSData*' type='@' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v32@0:4@8@12@16Q20@28' selector='appendPartWithInputStream:name:fileName:length:mimeType:' type64='v56@0:8@16@24@32Q40@48'>
<arg index='0' declared_type='NSInputStream*' type='@' name='inputStream'/>
<arg index='1' declared_type='NSString*' type='@' name='name'/>
<arg index='2' declared_type='NSString*' type='@' name='fileName'/>
<arg index='3' declared_type='unsigned long long' type='Q' name='length'/>
<arg index='4' declared_type='NSString*' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4I8d12' selector='throttleBandwidthWithPacketSize:delay:' type64='v32@0:8Q16d24'>
<arg index='0' declared_type='NSUInteger' type='I' name='numberOfBytes' type64='Q'/>
<arg index='1' declared_type='NSTimeInterval' type='d' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKManagedObjectCaching'>
<method type='v12@0:4@8' selector='didCreateObject:' type64='v24@0:8@16'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didDeleteObject:' type64='v24@0:8@16'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didFetchObject:' type64='v24@0:8@16'>
<arg index='0' declared_type='NSManagedObject*' type='@' name='object'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@20@0:4@8@12@16' selector='managedObjectsWithEntity:attributeValues:inManagedObjectContext:' type64='@40@0:8@16@24@32'>
<arg index='0' declared_type='NSEntityDescription*' type='@' name='entity'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='attributeValues'/>
<arg index='2' declared_type='NSManagedObjectContext*' type='@' name='managedObjectContext'/>
<retval declared_type='NSSet*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKMapperOperationDelegate'>
<method type='v24@0:4@8@12@16@20' selector='mapper:didFailMappingOperation:forKeyPath:withError:' type64='v48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFindRepresentationOrArrayOfRepresentations:atKeyPath:' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='id' type='@' name='dictionaryOrArrayOfDictionaries'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:didFinishMappingOperation:forKeyPath:' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='mapper:didNotFindRepresentationOrArrayOfRepresentationsAtKeyPath:' type64='v32@0:8@16@24'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mapper:willStartMappingOperation:forKeyPath:' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<arg index='1' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='mapperDidCancelMapping:' type64='v24@0:8@16'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='mapperDidFinishMapping:' type64='v24@0:8@16'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='mapperWillStartMapping:' type64='v24@0:8@16'>
<arg index='0' declared_type='RKMapperOperation*' type='@' name='mapper'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDataSource'>
<method type='B16@0:4@8^@12' selector='commitChangesForMappingOperation:error:' type64='B32@0:8@16^@24'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B20@0:4@8@12^@16' selector='mappingOperation:deleteExistingValueOfRelationshipWithMapping:error:' type64='B40@0:8@16@24^@32'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='1' declared_type='RKRelationshipMapping*' type='@' name='relationshipMapping'/>
<arg index='2' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@24@0:4@8@12@16@20' selector='mappingOperation:targetObjectForRepresentation:withMapping:inRelationship:' type64='@48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<arg index='1' declared_type='NSDictionary*' type='@' name='representation'/>
<arg index='2' declared_type='RKObjectMapping*' type='@' name='mapping'/>
<arg index='3' declared_type='RKRelationshipMapping*' type='@' name='relationshipMapping'/>
<retval declared_type='id' type='@'/>
</method>
<method type='B12@0:4@8' selector='mappingOperationShouldSetUnchangedValues:' type64='B24@0:8@16'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B12@0:4@8' selector='mappingOperationShouldSkipPropertyMapping:' type64='B24@0:8@16'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='mappingOperation'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RKMappingOperationDelegate'>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didConnectRelationship:toValue:usingConnection:' type64='v48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<arg index='2' declared_type='id' type='@' name='value'/>
<arg index='3' declared_type='RKConnectionDescription*' type='@' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didFailToConnectRelationship:usingConnection:' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSRelationshipDescription*' type='@' name='relationship'/>
<arg index='2' declared_type='RKConnectionDescription*' type='@' name='connection'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='mappingOperation:didFailWithError:' type64='v32@0:8@16@24'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didFindValue:forKeyPath:mapping:' type64='v48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didNotFindValueForKeyPath:mapping:' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='2' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didNotSetUnchangedValue:forKeyPath:usingMapping:' type64='v48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8@12@16' selector='mappingOperation:didSelectObjectMapping:forDynamicMapping:' type64='v40@0:8@16@24@32'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='RKObjectMapping*' type='@' name='objectMapping'/>
<arg index='2' declared_type='RKDynamicMapping*' type='@' name='dynamicMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v24@0:4@8@12@16@20' selector='mappingOperation:didSetValue:forKeyPath:usingMapping:' type64='v48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B24@0:4@8@12@16@20' selector='mappingOperation:shouldSetValue:forKeyPath:usingMapping:' type64='B48@0:8@16@24@32@40'>
<arg index='0' declared_type='RKMappingOperation*' type='@' name='operation'/>
<arg index='1' declared_type='id' type='@' name='value'/>
<arg index='2' declared_type='NSString*' type='@' name='keyPath'/>
<arg index='3' declared_type='RKPropertyMapping*' type='@' name='propertyMapping'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RKSerialization'>
<method class_method='true' type='@16@0:4@8^@12' selector='dataFromObject:error:' type64='@32@0:8@16^@24'>
<arg index='0' declared_type='id' type='@' name='object'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' type='@16@0:4@8^@12' selector='objectFromData:error:' type64='@32@0:8@16^@24'>
<arg index='0' declared_type='NSData*' type='@' name='data'/>
<arg index='1' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='RKValueTransforming'>
<method type='B24@0:4@8^@12#16^@20' selector='transformValue:toValue:ofClass:error:' type64='B48@0:8@16^@24#32^@40'>
<arg index='0' declared_type='id' type='@' name='inputValue'/>
<arg index='1' declared_type='id*' type='^@' name='outputValue'/>
<arg index='2' declared_type='Class' type='#' name='outputValueClass'/>
<arg index='3' declared_type='NSError**' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B16@0:4#8#12' selector='validateTransformationFromClass:toClass:' type64='B32@0:8#16#24'>
<arg index='0' declared_type='Class' type='#' name='inputValueClass'/>
<arg index='1' declared_type='Class' type='#' name='outputValueClass'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RNFrostedSidebarDelegate'>
<method type='v16@0:4@8B12' selector='sidebar:didDismissFromScreenAnimated:' type64='v28@0:8@16B24'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8B12I16' selector='sidebar:didEnable:itemAtIndex:' type64='v36@0:8@16B24Q28'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='itemEnabled'/>
<arg index='2' declared_type='NSUInteger' type='I' name='index' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8B12' selector='sidebar:didShowOnScreenAnimated:' type64='v28@0:8@16B24'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8I12' selector='sidebar:didTapItemAtIndex:' type64='v32@0:8@16Q24'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='NSUInteger' type='I' name='index' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8B12' selector='sidebar:willDismissFromScreenAnimated:' type64='v28@0:8@16B24'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8B12' selector='sidebar:willShowOnScreenAnimated:' type64='v28@0:8@16B24'>
<arg index='0' declared_type='RNFrostedSidebar*' type='@' name='sidebar'/>
<arg index='1' declared_type='BOOL' type='B' name='animatedYesOrNo'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
